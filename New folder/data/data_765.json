{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 5.0; // Scale up for better coverage\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Create hexagonal pattern using sine waves\n    float hexPattern = sin(6.0 * (theta + iTime)) * 0.5 + 0.5;\n    \n    // Calculate distance from center with rotation\n    float distFromCenter = abs(r - hexPattern) * 2.0;\n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        sin(iTime * 0.5 + theta) * 0.5 + 0.5, // Hue\n        0.7, // Saturation\n        0.5 + sin(r * 10.0 + iTime) * 0.2 // Lightness\n    );\n    // Convert HSL to RGB and mix with noise\n    vec3 color = hsl2rgb(hslColor);\n    float noiseValue = noise(vec2(uv.x * 10.0, uv.y * 10.0)) * 0.2;\n    \n    // Combine elements for final output\n    return vec4(color * (1.0 - distFromCenter) + noiseValue, 1.0);\n}"
}