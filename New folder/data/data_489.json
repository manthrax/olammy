{
  "src": "vec2 rotated = vec2(\n    uv.x * cos(theta) - uv.y * sin(theta),\n    uv.x * sin(theta) + uv.y * cos(theta)\n);\nvec2 tileUV = fract(uv * 10.0);\nvec2 noisyUV = uv + 0.1 * turbulent(uv * 5.0);\nvec4 Effect2(vec2 uv) {\n    // Rotate coordinates over time\n    float theta = iTime * 0.5;\n    vec2 rotatedUV = vec2(\n        uv.x * cos(theta) - uv.y * sin(theta),\n        uv.x * sin(theta) + uv.y * cos(theta)\n    );\n    // Create tiling pattern\n    vec2 tileUV = fract(rotatedUV * 10.0);\n    \n    // Add noise to create turbulence effect\n    vec2 noisyUV = tileUV + 0.1 * turbulent(tileUV * 5.0);\n    // Create triangle pattern using barycentric coordinates\n    vec3 coords = vec3(noisyUV.x, noisyUV.y, 1.0 - noisyUV.x - noisyUV.y);\n    float minCoord = min(min(coords.x, coords.y), coords.z);\n    \n    // Calculate color based on position and time\n    vec3 hslColor = vec3(\n        fract(iTime * 0.2 + noisyUV.x * 0.5),\n        0.7,\n        0.6 + 0.4 * sin(iTime) * sin(noisyUV.x * pi)\n    );\n    \n    // Convert to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}