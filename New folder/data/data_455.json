{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates to create a grid of 8x8 tiles\n    vec2 st = uv * 8.0;\n    \n    // Get tile coordinates (integer part)\n    vec2 tile = floor(st);\n    \n    // Get position within the current tile (fractional part)\n    vec2 pos = fract(st);\n    \n    // Use noise to create random values for each tile\n    float noiseVal = noise(tile + 1.0); // Add 1 to avoid (0,0) which might be black\n    \n    // Create time-based color shifts using sine function\n    float hueShift = sin(iTime * 0.5 + noiseVal * 2.0) * 0.5 + 0.5;\n    \n    // Create a base color for the tile using HSL\n    vec3 baseColor = hsl(hueShift, 1.0, 0.5);\n    \n    // Add some variation to the tiles using turbulence\n    float turb = turbulent(tile + iTime * 0.2);\n    \n    // Mix colors based on position within the tile and noise value\n    vec3 finalColor = mix(baseColor, hsl(hueShift + 0.3, 1.0, 0.5), pos.x * pos.y * 4.0);\n    finalColor *= 1.0 + turb * 0.2;\n    \n    return vec4(finalColor, 1.0);\n}"
}