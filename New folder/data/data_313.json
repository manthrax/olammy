{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating coordinate system\n    float time = iTime * 0.5;\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Add rotation based on time\n    mat2 rot = mat2(cos(time), sin(time), \n                    -sin(time), cos(time));\n    vec2 rotatedUV = rot * st;\n    \n    // Create layered sine waves with different frequencies\n    float wave1 = sin(rotatedUV.x * 4.0 + time) * 0.5;\n    float wave2 = sin(rotatedUV.y * 6.0 + time * 0.7) * 0.3;\n    float wave3 = sin((rotatedUV.x + rotatedUV.y) * 8.0 + time * 1.2) * 0.2;\n    \n    // Combine waves and add noise\n    float combinedWaves = wave1 + wave2 + wave3;\n    combinedWaves += noise(vec2(time, rotatedUV.x)) * 0.1;\n    combinedWaves += noise(vec2(rotatedUV.y, time)) * 0.15;\n    \n    // Create color shifts using HSL\n    vec3 hslColor = vec3(\n        fract(time * 0.2 + combinedWaves) * 360.0,\n        0.7 + abs(sin(time * 0.5)) * 0.3,\n        0.5 + combinedWaves * 0.2\n    );\n    \n    // Convert to RGB and add turbulence\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor *= turbulent(vec3(rotatedUV, time)) * 0.5 + 0.5;\n    \n    // Final color with geometric transformations\n    vec3 finalColor = mix(\n        rgbColor,\n        vec3(sin(time + rotatedUV.x) * 0.5 + 0.5),\n        abs(wave1)\n    );\n    \n    return vec4(finalColor, 1.0);\n}"
}