{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Create pulsating effect using time and radius\n    float pulse = sin(iTime * 0.5 + r * 3.0) * 0.5 + 0.5;\n    float speed = 1.0 + sin(iTime * 0.2) * 0.5;\n    // Add noise and turbulence for more dynamic effect\n    vec3 noisePos = vec3(st.x, st.y, iTime * speed);\n    float noiseVal = turbulent(noisePos * 4.0) * 0.5 + 0.5;\n    \n    // Create color gradients using HSL\n    float hue = theta / (2.0 * PI) + 0.5 * sin(iTime * 0.3 + r * 10.0);\n    vec3 hslColor = vec3(hue, 0.7, noiseVal * pulse);\n    // Convert to RGB and apply radial falloff\n    vec3 color = hsl2rgb(hslColor) / (r * r + 0.5);\n    return vec4(color, 1.0);\n}"
}