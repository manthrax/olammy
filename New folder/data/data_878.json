{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate UV coordinates over time\n    float t = iTime * 0.5;\n    vec2 rotatedUV = vec2(\n        cos(t)*uv.x - sin(t)*uv.y,\n        sin(t)*uv.x + cos(t)*uv.y\n    );\n    \n    // Create hexagonal pattern using polar coordinates\n    vec2 polar = rotatedUV * 4.0; // Scale for better visibility\n    float r = length(polar);\n    float theta = atan2(polar.y, polar.x);\n    \n    // Calculate sector in hexagonal grid\n    float sector = mod(theta * 6.0 / PI, 2.0) - 1.0;\n    \n    // Dynamic color based on time and position\n    vec3 color = hsl2rgb(vec3(\n        (sector + sin(r + t)) * 0.5 + 0.5,\n        0.7 + 0.3*sin(t*2.0),\n        0.8 + 0.2*cos(t*1.5)\n    ));\n    \n    // Add noise and turbulence\n    float noiseValue = noise(rotatedUV * 4.0);\n    float turbulentValue = turbulent(rotatedUV * 2.0 + t);\n    \n    // Combine elements for final color\n    color *= mix(0.8, 1.0, noiseValue);\n    color += vec3(turbulentValue * 0.3);\n    \n    return vec4(color, 1.0);\n}"
}