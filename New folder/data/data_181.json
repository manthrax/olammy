{
  "src": "vec4 Effect2(vec2 uv) {\n    // Grid setup and reaction-diffusion variables\n    const float F = 0.1;\n    const float k = 0.05;\n    \n    // Initialize grid concentrations using noise texture\n    vec3 noiseTex = texture(iChannel0, uv).rgb;\n    float u = noiseTex.r * 2.0 - 1.0;\n    float v = noiseTex.g * 2.0 - 1.0;\n    \n    // Hexagonal grid transformation\n    vec2 x = (uv * 64.0) * 0.5; // Scale to fit within hexagon\n    \n    // Reaction-diffusion update step\n    vec2 du = vec2(\n        noise(x + vec2(1,0)) - noise(x),\n        noise(x + vec2(-1,0)) - noise(x)\n    );\n    \n    vec2 dv = vec2(\n        noise(x + vec2(0,1)) - noise(x),\n        noise(x + vec2(0,-1)) - noise(x)\n    );\n    \n    // Update concentrations\n    float newU = F * (1.0 - k * u) + du.x;\n    float newV = F * v + du.y - dv.x;\n    \n    // Convert to RGB using HSL\n    vec3 color = hsl2rgb(vec3(newU, newV, 0.5));\n    \n    // Add time-based offset for animation\n    color *= sin(iTime) * 0.5 + 1.0;\n    \n    return vec4(color, 1.0);\n}"
}