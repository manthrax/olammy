{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    // Create multiple rotating layers with different speeds\n    float rot1 = iTime * 0.5;\n    float rot2 = iTime * 0.75;\n    float rot3 = iTime * 1.0;\n    // Calculate hexagonal pattern for each layer\n    vec3 colors = vec3(0.0);\n    \n    // Layer 1: Fast rotation with cyan hue\n    {\n        float angle = a + rot1;\n        float hex = abs(sin(angle * 6.0)) * 0.5 + 0.5;\n        float d = r * 20.0 - iTime * 3.0;\n        float noiseVal = turbulent(vec2(d, 0.0)) * 0.1;\n        float finalHex = hex + noiseVal;\n        \n        colors.r += smoothstep(0.4, 0.5, abs(finalHex - 0.5));\n    }\n    \n    // Layer 2: Medium rotation with magenta hue\n    {\n        float angle = a + rot2 + PI;\n        float hex = abs(sin(angle * 6.0)) * 0.5 + 0.5;\n        float d = r * 20.0 - iTime * 3.0;\n        float noiseVal = turbulent(vec2(d, 1.0)) * 0.1;\n        float finalHex = hex + noiseVal;\n        \n        colors.g += smoothstep(0.4, 0.5, abs(finalHex - 0.5));\n    }\n    \n    // Layer 3: Slow rotation with yellow hue\n    {\n        float angle = a + rot3 + PI * 2.0;\n        float hex = abs(sin(angle * 6.0)) * 0.5 + 0.5;\n        float d = r * 20.0 - iTime * 3.0;\n        float noiseVal = turbulent(vec2(d, 2.0)) * 0.1;\n        float finalHex = hex + noiseVal;\n        \n        colors.b += smoothstep(0.4, 0.5, abs(finalHex - 0.5));\n    }\n    // Add pulsating color effect\n    vec3 hslColors = vec3(\n        sin(iTime * 2.0) * 0.5 + 0.5,   // Hue variation\n        1.0,                             // Saturation\n        0.8                              // Lightness\n    );\n    \n    vec3 finalColor = hsl2rgb(hslColors) * (colors.r + colors.g + colors.b);\n    \n    return vec4(finalColor, 1.0);\n}"
}