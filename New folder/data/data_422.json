{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal pattern\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    \n    // Add time-based rotation\n    angle += iTime * 5.0; // Rotation speed\n    \n    // Create hexagonal grid pattern using polar coordinates\n    float theta = fract(angle / (pi/3.0)); // Divide circle into 6 segments\n    float d = radius - mod(theta, 1.0) * 0.2;\n    \n    // Add turbulence for dynamic effect\n    vec2 noisePos = uv + vec2(sin(iTime)*0.5, cos(iTime)*0.5);\n    float turb = turbulent(noisePos * 4.0) * 0.3;\n    turb += turbulent(vec3(uv * 8.0, iTime)) * 0.7;\n    \n    // Create color transitions using HSL\n    vec3 color;\n    color.x = fract(theta + iTime/2.0); // Hue variation over time\n    color.y = 1.0; // Full saturation\n    color.z = 0.5 + turb * 0.5; // Brightness modulation\n    \n    // Convert to RGB and mix with hexagonal pattern\n    vec3 finalColor = hsl2rgb(color) * (1.0 - abs(d)) * 0.8;\n    \n    return vec4(finalColor, 1.0);\n}"
}