{
  "src": "vec4 Effect2(vec2 uv) {\n    // Center the UV coordinates and add rotation\n    vec2 st = uv - 0.5;\n    float time = iTime * 0.5;\n    \n    // Apply rotation matrix\n    mat2 rot = mat2(cos(time), sin(time), \n                    -sin(time), cos(time));\n    vec2 rotated = rot * st;\n    \n    // Calculate distance from center and add noise\n    float dist = length(rotated);\n    float n = noise(vec2(uv.x*5.0, uv.y*5.0) + time);\n    \n    // Create geometric pattern using polar coordinates\n    float angle = atan(rotated.y, rotated.x);\n    float radius = length(st);\n    \n    // Dynamic color transitions using HSL\n    vec3 hslColor = vec3(angle * 180.0 / PI + time * 50.0, \n                         abs(sin(time)) * 0.7 + 0.3,\n                         abs(cos(time)) * 0.6 + 0.4);\n    \n    // Convert HSL to RGB and mix with noise\n    vec3 color = hsl2rgb(hslColor) * (1.0 - n * 0.5);\n    \n    // Add geometric pattern overlay\n    float pattern = sin(radius * 8.0 + time) * 0.5 + 0.5;\n    color *= mix(vec3(1.0), vec3(0.5, 0.7, 1.0), pattern);\n    \n    return vec4(color, 1.0);\n}"
}