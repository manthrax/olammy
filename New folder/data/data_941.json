{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates for grid pattern\n    vec2 st = uv * 10.0;\n    \n    // Get cell position using modular arithmetic\n    vec2 cellPos = mod(st, 1.0);\n    \n    // Calculate distance from center of cell\n    float dist = length(cellPos - 0.5);\n    \n    // Create rotating squares pattern\n    float angle = sin(iTime * 0.5 + cellPos.x * pi) * cos(iTime * 0.5 + cellPos.y * pi);\n    vec2 rotatedUV = vec2(\n        (cellPos.x - 0.5) * cos(angle) - (cellPos.y - 0.5) * sin(angle),\n        (cellPos.x - 0.5) * sin(angle) + (cellPos.y - 0.5) * cos(angle)\n    ) + 0.5;\n    \n    // Color transition based on time and noise\n    vec3 color = hsl2rgb(vec3(\n        mod(iTime * 0.1 + noise(cellPos * 10.0), 1.0),\n        0.7,\n        0.6\n    ));\n    \n    // Combine pattern with color\n    float squareMask = step(0.5, rotatedUV.x) * step(0.5, rotatedUV.y);\n    vec3 finalColor = mix(vec3(0.0), color, squareMask);\n    \n    return vec4(finalColor, 1.0);\n}"
}