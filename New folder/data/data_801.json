{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar\n    vec2 st = uv * 2.0 - 1.0;\n    float theta = atan2(st.y, st.x);\n    float r = length(st);\n    \n    // Create orbiting pattern with time-based rotation\n    theta += iTime * 0.5;\n    \n    // Add noise to create dynamic movement\n    vec3 noisePos = vec3(r * cos(theta), r * sin(theta), iTime * 0.2);\n    float turbulence = turbulent(noisePos * 0.5);\n    \n    // Create spectral color effect\n    vec3 hslColor = vec3(\n        fract(iTime * 0.1 + theta / (6.0 * pi)) * 360.0, \n        0.7 + 0.3 * sin(iTime * 0.5 + r), \n        0.5 + 0.5 * cos(r * 2.0 + iTime)\n    );\n    \n    // Convert to RGB and add light decay\n    vec3 rgbColor = hsl2rgb(hslColor);\n    float lightDecay = 1.0 / (r + 1.0);\n    \n    // Combine effects\n    vec3 finalColor = rgbColor * (sin(r * 4.0 - iTime) * 0.5 + 0.5) * lightDecay;\n    \n    return vec4(finalColor, 1.0);\n}"
}