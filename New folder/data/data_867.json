{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    \n    // Create rotating geometric patterns using polar coordinates\n    float radius = length(uv);\n    float angle = atan2(uv.y, uv.x) + iTime * 0.5;\n    \n    // Add multiple layers of rotating shapes\n    for(float i = 0.0; i < 3.0; i++) {\n        float r = radius - (i * 0.4);\n        vec2 rotatedUv = vec2(r * cos(angle + iTime * (i+1)*0.5), r * sin(angle));\n        \n        // Create circular shapes with smooth edges\n        float shape = smoothstep(0.3, 0.7, abs(length(rotatedUv)));\n        \n        // Mix colors using HSL to RGB conversion\n        vec3 baseColor = hsl2rgb(vec3(iTime*0.5 + i*0.4, 0.8, 0.5));\n        color += mix(color, baseColor, shape * 0.6);\n    }\n    \n    // Add dynamic noise overlay\n    float noiseValue = noise(uv * 10.0 + vec2(iTime)) * 0.3;\n    color = mix(color, hsl2rgb(vec3(iTime*0.5, 0.8, 0.6)), noiseValue);\n    \n    return vec4(color, 1.0);\n}"
}