{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create position relative to center\n    vec2 pos = (uv - 0.5) * 3.0;\n    \n    // Calculate distance from center\n    float dist = length(pos);\n    \n    // Add fractal noise for nebula texture\n    float noise1 = turbulent(pos * 0.5 + iTime);\n    float noise2 = turbulent(pos * 2.0 + iTime * 0.5);\n    float noise3 = turbulent(pos * 4.0 + iTime * 0.75);\n    \n    // Combine noise layers\n    float nebulaNoise = (noise1 + noise2 + noise3) / 3.0;\n    \n    // Create radial gradient with color variations\n    vec3 baseColor = hsl(dist * 0.5, 0.8, 0.6);\n    vec3 timeColor = hsl(sin(iTime * 0.2 + dist * 2.0) * 0.4 + 0.1, 0.7, 0.7);\n    \n    // Combine colors and noise\n    vec3 finalColor = mix(baseColor, timeColor, abs(nebulaNoise * 0.5 + 0.5));\n    \n    // Add pulsating effect\n    float pulse = sin(iTime * 0.2) * 0.5 + 0.5;\n    finalColor *= (1.0 - dist * 0.3) * pulse;\n    \n    // Add some movement and rotation\n    vec2 rotatedPos = vec2(\n        pos.x * cos(iTime * 0.1) - pos.y * sin(iTime * 0.1),\n        pos.x * sin(iTime * 0.1) + pos.y * cos(iTime * 0.1)\n    );\n    \n    // Add angular variations\n    float angle = atan2(rotatedPos.y, rotatedPos.x);\n    finalColor += hsl(angle * 0.5 + iTime * 0.2, 0.6, 0.4) * nebulaNoise * 0.3;\n    \n    return vec4(finalColor, 1.0);\n}"
}