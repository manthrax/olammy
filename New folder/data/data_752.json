{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and translate UV coordinates for tiling effect\n    vec2 st = uv * 10.0 + iTime;\n    \n    // Create grid pattern using fract function\n    vec2 tile = fract(st);\n    \n    // Calculate distance from center of each tile\n    vec2 dist = length(tile - 0.5);\n    \n    // Create square shape with smooth edges\n    float square = step(0.4, dist);\n    \n    // Add time-based offset to create movement\n    vec2 offset = sin(iTime * 0.5 + tile) * 0.3;\n    vec2 distortedTile = tile + offset;\n    \n    // Calculate color based on HSL values with time transitions\n    float hue = mod(iTime * 0.1 + distortedTile.x * 0.5, 1.0);\n    float saturation = 0.8 + sin(iTime) * 0.2;\n    float lightness = 0.5 + cos(iTime * 0.3 + distortedTile.y * 0.5) * 0.2;\n    \n    // Apply turbulence for additional distortion\n    float turb = turbulent(vec3(distortedTile, iTime)) * 0.1;\n    hue += turb;\n    saturation += turb;\n    lightness += turb;\n    \n    // Convert HSL to RGB and output color\n    vec3 color = hsl2rgb(vec3(hue, saturation, lightness));\n    \n    return vec4(color, 1.0);\n}"
}