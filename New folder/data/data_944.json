{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and offset UV coordinates for grid pattern\n    vec2 st = uv * 10.0 + iTime;\n    \n    // Create a rotation matrix with time-based animation\n    mat2 rot = mat2(cos(iTime), -sin(iTime), sin(iTime), cos(iTime));\n    vec2 transformedUV = (st * rot) * 0.5;\n    \n    // Generate noise values for color variation\n    float noiseValue = noise(transformedUV);\n    float turbulenceValue = turbulent(transformedUV);\n    \n    // Create triangle pattern using barycentric coordinates\n    vec3 hslColor = vec3(\n        fract(iTime + transformedUV.x * 0.5),\n        1.0,\n        0.5 + 0.5 * noiseValue\n    );\n    \n    // Convert HSL to RGB and mix with turbulence for depth\n    vec3 rgbColor = hsl2rgb(hslColor) * (0.5 + 0.5 * turbulenceValue);\n    \n    // Create mosaic effect by tiling and offsetting patterns\n    vec2 cell = floor(uv * 10.0);\n    vec2 triangleUV = fract(uv * 10.0 + iTime);\n    \n    // Combine all elements for final color\n    return vec4(\n        rgbColor,\n        1.0\n    );\n}"
}