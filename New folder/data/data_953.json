{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid pattern with time-varying scale\n    float scale = 10.0 + sin(iTime * 0.5) * 3.0;\n    vec2 st = uv * scale;\n    \n    // Add some rotation to create hexagonal lattice effect\n    float angle = iTime * 0.2;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    st = rot * st;\n    \n    // Create a grid pattern with turbulence\n    vec3 noisePos = vec3(st.x, st.y, iTime * 0.5);\n    float grid = turbulent(noisePos) * 0.5 + 0.5;\n    \n    // Convert to polar coordinates for color variation\n    vec2 toCenter = uv - vec2(0.5);\n    float dist = length(toCenter);\n    float anglePolar = atan2(toCenter.y, toCenter.x);\n    \n    // Create time-varying HSL color\n    vec3 hslColor;\n    hslColor.x = (iTime * 0.1 + anglePolar) * 0.5 + 0.5; // Hue variation\n    hslColor.y = 0.7 + grid * 0.3;                       // Saturation\n    hslColor.z = 0.5 + sin(dist * 8.0 + iTime) * 0.2;   // Lightness\n    \n    // Convert HSL to RGB and mix with noise pattern\n    vec3 rgbColor = hsl2rgb(hslColor);\n    vec3 finalColor = mix(vec3(0.1), rgbColor, grid);\n    \n    return vec4(finalColor, 1.0);\n}"
}