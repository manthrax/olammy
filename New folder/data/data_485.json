{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.5;\n    vec2 p = uv * 2.0 - 1.0;\n    \n    // Rotating geometric pattern\n    float r = length(p);\n    float theta = atan(p.y, p.x) + time;\n    \n    // Create shape using polar coordinates\n    float shape = sin(theta * 4.0) * cos(r * 8.0 + time) +\n                  cos(theta * 3.0) * sin(r * 6.0 - time);\n    \n    // Add noise and turbulence\n    vec2 noisePos = uv * 10.0;\n    float noiseValue = noise(noisePos) * 0.5 + 0.5;\n    shape += noiseValue * turbulent(vec3(p, time)) * 0.4;\n    \n    // Color transitions\n    vec3 color = hsl2rgb(vec3(\n        fract(time * 0.1 + r * 0.2) * 360.0,\n        0.7,\n        0.5\n    )) * (sin(r * 8.0 - time) * 0.5 + 0.5);\n    \n    // Mix noise overlay\n    float noiseOverlay = sin(time + r * 10.0) * 0.5 + 0.5;\n    color += noiseValue * noiseOverlay * 0.6;\n    \n    return vec4(color, 1.0);\n}"
}