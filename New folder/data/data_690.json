{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert to polar coordinates\n    float theta = atan2(uv.y, uv.x);\n    float r = length(uv * 1.5); // Scale radius for better ring spacing\n    \n    // Add time-based rotation\n    theta += iTime * 0.2;\n    \n    // Create pulsating rings using sine function\n    float pulse = sin(r - iTime) * 0.5 + 0.5;\n    r *= pulse;\n    \n    // Calculate multiple orbiting rings with different sizes and colors\n    vec3 color = vec3(0.0);\n    for (int ring = 0; ring < 4; ring++) {\n        float targetRadius = float(ring) * 0.2 + 0.1;\n        float distance = abs(r - targetRadius);\n        \n        // Create smooth transitions between rings\n        float transition = smoothstep(0.05, 0.15, distance);\n        \n        // Calculate color based on angle and time\n        vec3 ringColor = hsl(theta * 2.0 + iTime * 0.5, 0.7, 0.6);\n        \n        // Add noise for dynamic effect\n        float noiseValue = turbulent(vec3(uv * 10.0 + iTime));\n        ringColor *= mix(1.0, 1.5, noiseValue * 0.2 + 0.5);\n        \n        // Combine colors with radial gradient\n        color += mix(color, ringColor, transition) * (1.0 - distance * 2.0);\n    }\n    \n    return vec4(color, 1.0);\n}"
}