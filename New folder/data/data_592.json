{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate coordinates based on time\n    float t = iTime * 0.5;\n    vec2 rotatedUv = vec2(\n        cos(t)*uv.x - sin(t)*uv.y,\n        sin(t)*uv.x + cos(t)*uv.y\n    );\n    \n    // Create square and circle distance fields\n    vec2 st = rotatedUv * 4.0;\n    float squareDist = max(abs(st.x), abs(st.y));\n    float circleDist = length(st);\n    \n    // Combine shapes with noise\n    float pattern = squareDist - circleDist + turbulent(vec3(uv * 10, t)) * 0.5;\n    pattern = mod(pattern, 2.0) - 1.0;\n    \n    // Color transitions using HSL\n    vec3 color = hsl(\n        fract(t * 0.2 + squareDist) * 360.0,\n        0.7,\n        0.5 + 0.5 * sin(pattern * pi)\n    );\n    \n    // Add turbulence to colors\n    float brightness = turbulent(vec3(uv * 10, t)) * 0.25 + 0.75;\n    color *= brightness;\n    \n    // Soften edges with smoothstep\n    float alpha = smoothstep(0.4, 0.6, abs(pattern));\n    \n    return vec4(color, alpha);\n}"
}