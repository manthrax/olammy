{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a time-based animation parameter\n    float t = iTime * 0.5;\n    \n    // Generate noise values at different scales\n    float n1 = noise(uv * 3.0 + vec2(t, t));\n    float n2 = turbulent(vec3(uv * 2.0, t));\n    float n3 = turbulent(uv * 4.0);\n    \n    // Mix the noise values for more complex patterns\n    float mixVal = (n1 + n2 + n3) * 0.3;\n    \n    // Create color variations using HSL to RGB conversion\n    vec3 color1 = hsl2rgb(vec3(0.5 + t*0.1, 0.7, 0.8));\n    vec3 color2 = hsl2rgb(vec3(0.3 - t*0.1, 0.6, 0.7));\n    \n    // Combine colors based on noise values\n    vec3 finalColor = mix(color1, color2, abs(mixVal));\n    \n    // Add some distortion to the UV coordinates\n    vec2 distortedUV = uv + vec2(sin(uv.y * 5.0 + t) * 0.1, cos(uv.x * 5.0 - t) * 0.1);\n    \n    // Final color with alpha channel\n    return vec4(finalColor * (0.5 + noise(distortedUV * 10.0)), 1.0);\n}"
}