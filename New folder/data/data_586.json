{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates for rotation effects\n    vec2 st = uv * 2.0 - 1.0;\n    float radius = length(st);\n    float angle = atan2(st.y, st.x) + sin(iTime * 0.5) * 4.0;\n    \n    // Create rotating geometric patterns using sine waves\n    float rotationSpeed = sin(iTime * 0.3 + angle) * 0.5 + 0.5;\n    float pattern = sin(angle * 6.0 + iTime * rotationSpeed) * 0.5 + 0.5;\n    \n    // Add noise and turbulence for dynamic texture\n    vec2 noiseUV = uv * 10.0 + iTime;\n    float noiseValue = noise(noiseUV);\n    float turbulentValue = turbulent(vec3(uv * 5.0, iTime));\n    \n    // Combine colors with HSL transformations\n    vec3 color1 = hsl2rgb(vec3(0.6 + sin(iTime) * 0.3, 1.0, 0.8));\n    vec3 color2 = hsl2rgb(vec3(0.3 + cos(iTime) * 0.4, 1.0, 0.7));\n    \n    // Mix patterns and colors\n    float mixAmount = pattern * noiseValue * turbulentValue;\n    vec3 finalColor = mix(color1, color2, mixAmount);\n    \n    return vec4(finalColor, 1.0);\n}"
}