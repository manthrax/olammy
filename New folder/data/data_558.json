{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime * 0.5;\n    \n    // Create rotating geometric pattern using turbulence\n    vec3 noiseParams = vec3(st.x, st.y, iTime * 0.2);\n    float baseNoise = turbulent(noiseParams);\n    \n    // Add multiple layers of turbulence for more complex patterns\n    float layer1 = turbulent(vec3(st * 2.0 + theta, iTime * 0.1)) * 0.5;\n    float layer2 = turbulent(vec3(st * 4.0 - theta, iTime * 0.2)) * 0.3;\n    \n    // Combine layers and create color transitions\n    float combined = (baseNoise + layer1 + layer2) * 0.5 + 0.5;\n    vec3 hslColor = vec3(theta * 0.1, combined, 0.7);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Apply gamma correction and return final color\n    return vec4(pow(rgbColor, vec3(2.2)), 1.0);\n}"
}