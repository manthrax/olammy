{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.5;\n    \n    // Create rotating square pattern\n    vec2 grid = floor(uv * 10.0 + time);\n    vec2 pos = fract(uv * 10.0 + time);\n    \n    // Add noise and turbulence\n    vec3 noisePos = vec3(pos, time);\n    float turb = turbulent(noisePos) * 0.5 + 0.5;\n    \n    // Create color shifts using HSL\n    vec3 hslColor = vec3(\n        mod(time * 0.1 + pos.x * 2.0 + turb * 2.0, 1.0),\n        0.7,\n        0.6\n    );\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add rotation effect\n    float angle = time * 4.0 + pos.x * 2.0;\n    vec2 rotatedUV = uv * sin(angle) + pos * cos(angle);\n    \n    // Apply Gaussian blur effect\n    const int samples = 8;\n    float weightSum = 0.0;\n    vec3 finalColor = vec3(0.0);\n    \n    for(int i = -samples; i <= samples; i++) {\n        for(int j = -samples; j <= samples; j++) {\n            float angle = radians(float(i) + float(j));\n            vec2 offset = vec2(sin(angle), cos(angle)) * 0.1;\n            vec3 sampleColor = texture(iChannel0, rotatedUV + offset).rgb;\n            \n            float weight = exp(-(float(i)*float(i) + float(j)*float(j)) * 0.5);\n            finalColor += sampleColor * weight;\n            weightSum += weight;\n        }\n    }\n    \n    finalColor /= weightSum;\n    \n    return vec4(finalColor, 1.0);\n}"
}