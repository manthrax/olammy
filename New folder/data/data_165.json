{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and translate coordinates\n    vec2 st = uv * 5.0 + iTime;\n    \n    // Create grid pattern using integer divisions\n    vec2 grid = floor(st);\n    \n    // Calculate distance from center of each cell\n    vec2 dx = fract(st - grid) - 0.5;\n    \n    // Animate waves with time\n    float waveX = sin(grid.x * pi + iTime * 2.0) * 0.5;\n    float waveY = sin(grid.y * pi + iTime * 3.0) * 0.5;\n    \n    // Combine waves and add turbulence\n    float value = sin(dx.x * pi + waveX) + sin(dx.y * pi + waveY);\n    value += turbulent(vec2(grid) + iTime);\n    \n    // Normalize value to [0,1] range for color mapping\n    float nValue = (value + 1.0) * 0.5;\n    \n    // Create RGB color cycling effect using HSL conversion\n    vec3 color = hsl2rgb(vec3(nValue * 360.0, 0.7, 0.5));\n    \n    return vec4(color, 1.0);\n}"
}