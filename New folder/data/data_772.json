{
  "src": "vec4 Effect2(vec2 uv) {\n    // Center the coordinates\n    vec2 center = uv - 0.5;\n    float dist = length(center);\n    \n    // Create rotating pattern\n    float timeScale = iTime * 0.5;\n    vec2 rotated = vec2(\n        cos(timeScale) * center.x - sin(timeScale) * center.y,\n        sin(timeScale) * center.x + cos(timeScale) * center.y\n    );\n    \n    // Generate noise patterns with different scales\n    float noise1 = noise(vec3(rotated * 4.0, iTime));\n    float noise2 = noise(vec3(rotated * 8.0, iTime * 0.5));\n    float noise3 = noise(vec3(rotated * 16.0, iTime * 0.75));\n    \n    // Combine noise layers\n    float combinedNoise = (noise1 + noise2 * 0.5 + noise3 * 0.25) * 0.4 + 0.5;\n    \n    // Create color variations using HSL\n    vec3 hslColor = vec3(\n        dist * 0.6 + timeScale * 0.3,\n        0.8 + combinedNoise * 0.2,\n        0.5 + sin(timeScale) * 0.4\n    );\n    \n    // Convert to RGB and add pulsing effect\n    vec3 color = hsl2rgb(hslColor);\n    color *= smoothstep(0.0, 1.0, combinedNoise * 2.0 - 1.0);\n    \n    // Add radial motion and distance attenuation\n    float pulse = sin(iTime) * 0.5 + 0.5;\n    float scale = (dist * 4.0 + pulse * 2.0);\n    color *= turbulent(vec3(uv * scale, iTime)) * 0.8 + 0.2;\n    \n    return vec4(color, 1.0);\n}"
}