{
  "src": "vec4 Effect2(vec2 uv) {\n    vec4 fragColor = vec4(0.0);\n    \n    // Convert UV to polar coordinates\n    float theta = atan2(uv.y, uv.x);\n    float r = length(uv * 1.5); // Scale UV for better pattern size\n    \n    // Create rotating square pattern\n    theta += iTime * 10.0; // Speed of rotation\n    theta /= 4.0; // Divide into 4 sectors\n    \n    // Square shape creation\n    float size = 0.3;\n    vec2 st = vec2(cos(theta), sin(theta));\n    st *= r;\n    \n    // Create square mask\n    float square = step(size, abs(st.x)) * step(size, abs(st.y));\n    square = 1.0 - square; // Invert to get square shape\n    \n    // Color shifting based on angle and time\n    vec3 color1 = hsl(theta + iTime, 0.7, 0.5);\n    vec3 color2 = hsl(theta + iTime + 120.0, 0.7, 0.5);\n    vec3 color3 = hsl(theta + iTime + 240.0, 0.7, 0.5);\n    \n    // Mix colors based on position\n    vec3 finalColor = mix(color1, color2, smoothstep(0.0, 1.0, sin(theta * 2.0 + iTime)));\n    finalColor = mix(finalColor, color3, smoothstep(0.0, 1.0, cos(theta * 2.0 + iTime)));\n    \n    // Add noise for extra variation\n    float noiseValue = turbulent(vec3(uv * 4.0, iTime)) * 0.5 + 0.5;\n    finalColor *= noiseValue;\n    \n    fragColor.rgb = finalColor;\n    return fragColor;\n}"
}