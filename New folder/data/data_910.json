{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form relative to mouse position\n    vec2 mouse = iMouse.xy;\n    vec2 pos = uv * 2.0 - 1.0;\n    float radius = length(pos);\n    float angle = atan2(pos.y, pos.x);\n    \n    // Create hexagonal tiling pattern using polar coordinates\n    float theta = mod(angle + iTime * 0.5, PI/3.0); // Rotate and create 6-fold symmetry\n    float r = radius * 0.5;\n    \n    // Calculate hexagon position and color influence based on mouse movement\n    vec2 hexPos = vec2(r * cos(theta), r * sin(theta));\n    float distFromMouse = length(uv - mouse);\n    \n    // Use noise and turbulence to create dynamic patterns\n    float noiseVal = noise(hexPos + iTime) * 0.5 + 0.5;\n    float turb = turbulent(hexPos * 10.0 + iTime);\n    \n    // Create color transitions based on angle and mouse interaction\n    vec3 hslColor = vec3(angle / (2.0 * PI), 0.7, 0.5);\n    vec3 finalColor = hsl2rgb(hslColor) * noiseVal;\n    finalColor *= mix(1.0, 0.5, distFromMouse); // Dim colors further from mouse\n    \n    return vec4(finalColor, 1.0);\n}"
}