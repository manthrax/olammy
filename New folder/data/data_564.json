{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    // Create hexagonal grid pattern\n    a += iTime * 0.5; // Rotate pattern over time\n    float angleStep = pi / 3.0;\n    float grid = sin(a * 6.0) * 0.5 + 0.5;\n    \n    // Add pulsating effect\n    float pulse = sin(iTime * 2.0 + r * 10.0) * 0.5 + 0.5;\n    grid *= mix(0.3, 0.7, pulse);\n    \n    // Create color transitions using HSL colors\n    vec3 hslColor = vec3(\n        a * 180.0 / pi + iTime * 60.0,\n        0.7 + noise(vec2(a, r)) * 0.3,\n        0.5 + sin(iTime) * 0.2\n    );\n    \n    // Convert HSL to RGB and add turbulence effect\n    vec3 rgbColor = hsl2rgb(hslColor);\n    float turb = turbulent(vec3(uv * 10.0, iTime));\n    rgbColor *= mix(0.8, 1.2, turb);\n    // Combine grid pattern with color transitions\n    float proximity = smoothstep(0.7, 1.0, grid);\n    vec3 finalColor = mix(\n        rgbColor,\n        hsl2rgb(vec3(hslColor.x + 180.0, hslColor.y * 0.5, hslColor.z)),\n        proximity\n    );\n    // Add noise and smooth transitions\n    finalColor += noise(vec2(uv * 10.0)) * 0.2;\n    finalColor = mix(finalColor, vec3(1.0), smoothstep(0.95, 1.0, r));\n    return vec4(finalColor, 1.0);\n}"
}