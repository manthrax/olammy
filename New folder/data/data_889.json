{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 finalColor = vec3(0.0);\n    \n    // Number of layers for density\n    const int layers = 5;\n    \n    for(int i = 0; i < layers; i++) {\n        // Calculate base position with time offset\n        float speed = 0.2 + float(i) * 0.1;\n        vec2 pos = uv * 4.0 - vec2(float(i), 0.0) + sin(iTime * speed) * 2.0;\n        \n        // Add noise perturbation\n        pos += noise(vec3(pos, iTime)) * 0.5;\n        \n        // Calculate rotation angle\n        float angle = atan2(uv.y - 0.5, uv.x - 0.5) + iTime * speed;\n        \n        // Create pulsing effect\n        float pulse = sin(angle + iTime) * 0.5 + 0.5;\n        \n        // Generate square pattern with rotation\n        vec2 rotatedUV = uv * cos(angle) - uv.yx * sin(angle);\n        float square = max(abs(rotatedUV.x), abs(rotatedUV.y));\n        \n        // Color calculation with time variation\n        vec3 color = hsl2rgb(vec3(\n            fract(float(i) / layers + iTime * 0.1),\n            0.7,\n            0.5 + pulse * 0.5\n        ));\n        \n        // Add noise to color for more dynamic effect\n        color *= 1.0 + noise(vec3(pos, iTime)) * 0.2;\n        \n        // Combine all elements into final alpha\n        float alpha = max(0.0, 1.0 - square * 4.0) * pulse;\n        finalColor += color * alpha;\n    }\n    \n    return vec4(finalColor, 1.0);\n}"
}