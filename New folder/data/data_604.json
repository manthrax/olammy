{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates to range [-1, 1]\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Create multiple interweaving sine waves with varying parameters\n    float waveCount = 5.0;\n    vec3 color = vec3(0.0);\n    \n    for(float i = 0.0; i < waveCount; i++) {\n        // Calculate frequency and phase for each wave\n        float freq = pow(2.0, i * 0.5) * 10.0;\n        float phase = iTime * (i + 1.0);\n        \n        // Create sine wave pattern with varying amplitude\n        vec2 waveUV = st * vec2(freq, freq + i);\n        float sineWave = sin(waveUV.x + phase) * \n                        sin(waveUV.y + phase * 0.5) *\n                        noise(vec3(waveUV * 10.0, iTime)) *\n                        turbulent(vec2(waveUV.x * 0.5, waveUV.y * 0.5));\n        \n        // Add varying amplitude using noise\n        float amp = (noise(vec2(uv.x + iTime, uv.y) * 10.0) + \n                    noise(vec3(waveUV * 10.0, iTime))) * 0.5 + 0.5;\n        sineWave *= amp * 0.6;\n        \n        // Convert to HSL and mix colors\n        vec3 waveColor = hsl(i / waveCount * 0.8 + 0.2, \n                            1.0, \n                            0.5 + sin(sineWave) * 0.4);\n        \n        color += waveColor * smoothstep(0.0, 0.5, abs(sineWave));\n    }\n    \n    // Final color with alpha blending\n    vec3 finalColor = mix(vec3(0.1), color, \n                         clamp(length(color) * 0.8, 0.0, 1.0));\n    \n    return vec4(finalColor, 1.0);\n}"
}