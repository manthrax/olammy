{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal tiling\n    vec2 pos = uv * 3.0; // Scale up for more cells\n    float angle = atan2(pos.y, pos.x);\n    \n    // Create hexagonal grid by multiplying angle and radius\n    float theta = angle * 6.0;\n    float r = length(pos) + sin(iTime * 0.5); // Add time-based pulsing\n    \n    // Calculate tessellation coordinates\n    vec2 gridPos = vec2(r * cos(theta), r * sin(theta));\n    vec2 gridUV = floor(gridPos);\n    \n    // Create color variations using HSL to RGB conversion\n    float hue = (theta + iTime) / (6.0 * PI);\n    vec3 hslColor = vec3(hue, 1.0, 0.5);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add noise and turbulence for dynamic effects\n    float noiseVal = turbulent(vec3(gridUV * 0.5 + iTime));\n    rgbColor *= 0.5 + 0.5 * sin(iTime + gridUV.x * PI + gridUV.y * PI);\n    \n    return vec4(rgbColor, 1.0);\n}"
}