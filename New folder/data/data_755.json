{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    float a = atan2(uv.y - 0.5, uv.x - 0.5);\n    float r = length(uv - 0.5);\n    \n    // Create time-varying pattern by rotating the angle\n    float t = iTime * 0.5;\n    a += t;\n    \n    // Scale radius based on resolution for better pattern size\n    r *= 2.0 / min(iResolution.x, iResolution.y);\n    \n    // Add noise and turbulence to create dynamic patterns\n    vec3 p = vec3(r + sin(t) * 0.5, uv.x * 10.0, uv.y * 10.0);\n    float turb = turbulent(p);\n    \n    // Create color shifts using HSL to RGB conversion\n    vec3 baseColor = hsl(a, 0.5, 0.5);\n    vec3 timeColor = hsl(t * 2.0, 0.7, 0.6);\n    \n    // Mix colors with noise and turbulence\n    vec3 finalColor = mix(baseColor, timeColor, smoothstep(0.0, 1.0, sin(r * 10.0 + t)));\n    finalColor += turb * 0.5;\n    \n    return vec4(finalColor, 1.0);\n}"
}