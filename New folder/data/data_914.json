{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Add time-based rotation and hexagonal tiling\n    theta += iTime * 0.5 + 30.0 * pi / 180.0; // Rotate by 30 degrees for hexagon alignment\n    \n    // Create hexagonal grid pattern\n    vec2 tile = vec2(r, theta);\n    float pattern = sin(theta * 6.0) * 0.5 + 0.5;\n    \n    // Add pulsating effect using noise and time\n    float pulse = sin(iTime * 3.0 + r * 10.0) * 0.5 + 0.5;\n    pattern *= mix(0.2, 0.8, pulse);\n    \n    // Use turbulence to add dynamic variations\n    vec3 noisePos = vec3(tile.x, tile.y, iTime * 0.1);\n    float turb = turbulent(noisePos) * 0.5 + 0.5;\n    pattern += turb * 0.3;\n    // Convert to HSL and then RGB for color transformation\n    vec3 hslColor = vec3(theta / (2.0 * pi), 0.7, mix(0.3, 0.8, pattern));\n    vec3 rgbColor = hsl2rgb(hslColor);\n    return vec4(rgbColor, 1.0);\n}"
}