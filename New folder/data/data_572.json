{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating grid pattern using sine functions\n    float speed = 0.5;\n    float time = iTime * speed;\n    \n    // Rotate coordinates over time\n    vec2 rotatedUV = uv * 0.5 + 0.5;\n    rotatedUV -= 0.5;\n    rotatedUV = vec2(\n        rotatedUV.x * cos(time) - rotatedUV.y * sin(time),\n        rotatedUV.x * sin(time) + rotatedUV.y * cos(time)\n    );\n    rotatedUV += 0.5;\n    \n    // Create grid lines with color shifting\n    float gridSize = 0.1;\n    vec2 gridPos = rotatedUV / gridSize;\n    \n    // Use fract and sin to create alternating colors\n    vec3 color = vec3(\n        sin(gridPos.x * pi + time) * 0.5 + 0.5,\n        sin(gridPos.y * pi + time * 0.7) * 0.5 + 0.5,\n        sin((gridPos.x + gridPos.y) * pi + time * 0.4) * 0.5 + 0.5\n    );\n    \n    // Add turbulence effect\n    vec2 noiseUV = rotatedUV * 10.0;\n    float turbulence = turbulent(noiseUV);\n    color *= 1.0 + turbulence * 0.3;\n    \n    // Convert to HSL and back for color shifting\n    vec3 hslColor = hsl(\n        mod(time * 0.2 + rotatedUV.x * 5.0, 1.0),\n        0.7,\n        0.6\n    );\n    color = hsl2rgb(hslColor);\n    \n    return vec4(color, 1.0);\n}"
}