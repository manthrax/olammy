{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create polar coordinates from UV\n    vec2 pos = uv - 0.5;\n    float radius = length(pos);\n    radius = radius * 1.8; // Scale for better fit\n    radius = radius + sin(iTime * 0.5) * 0.3; // Add pulsing effect\n    \n    // Calculate angle\n    float angle = atan2(pos.y, pos.x);\n    \n    // Create base color with HSL\n    vec3 color = hsl(200.0 / 360.0, 1.0, 0.5); // Cyanish base color\n    \n    // Add noise and turbulence effects\n    float n = noise(vec3(uv * 10.0, iTime)) * 0.5 + 0.5;\n    float t = turbulent(vec2(angle * 4.0, radius * 4.0));\n    \n    // Create circular pattern with pulsing\n    vec3 finalColor = mix(\n        color,\n        hsl((n + angle / (6.0 * pi)) % 1.0, 1.0, 0.5),\n        t * 0.7\n    );\n    \n    // Add geometric shape overlay\n    float square = sin(angle * 4.0) * 0.5 + 0.5;\n    finalColor *= mix(1.0, 0.3, smoothstep(0.8, 1.0, radius));\n    \n    return vec4(finalColor, 1.0);\n}"
}