{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates for fractal pattern\n    vec2 st = uv * 10.0;\n    \n    // Add time-based rotation\n    float t = iTime * 0.5;\n    st = mat2(cos(t), sin(t), -sin(t), cos(t)) * st;\n    \n    // Create complex noise patterns using turbulence\n    float noise1 = turbulent(st);\n    float noise2 = turbulent(st * 0.5 + vec2(10, 20));\n    \n    // Combine noise values with UV coordinates\n    vec3 color = hsl(\n        (noise1 + sin(length(st)) * 0.5) * 0.5 + 0.5,\n        abs(noise2 * 0.5 + 0.5),\n        0.5\n    );\n    \n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(color), 1.0);\n}"
}