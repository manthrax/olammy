{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal symmetry\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Create a lattice of hexagons using polar coordinates\n    float x = sin(theta) + turbulent(vec3(r, theta, iTime)) * 0.5;\n    float y = cos(theta - pi/6.0) + turbulent(vec3(r, theta, iTime + 1.0)) * 0.5;\n    // Calculate distance from center and time-based color shift\n    float dist = length(vec2(x, y));\n    float timeShift = (iTime + dist) / 20.0;\n    \n    // Create gradient fill using HSL colors\n    vec3 color = hsl(\n        sin(timeShift * pi * 2.0) * 0.5 + 0.5,\n        1.0,\n        sin(r * 4.0 - iTime) * 0.5 + 0.5\n    );\n    // Add rotation and turbulence effects\n    color = hsl(\n        timeShift * pi * 2.0 + theta / 6.0,\n        1.0,\n        (sin(r * 4.0 - iTime) * 0.5 + 0.5) + sin(theta) * 0.2\n    );\n    return vec4(color, 1.0);\n}"
}