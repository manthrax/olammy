{
  "src": "vec4 Effect2(vec2 uv) {\n    // Center and scale coordinates\n    vec2 centeredUV = (uv - 0.5) * 4.0;\n    \n    // Convert to polar coordinates\n    float angle = atan2(centeredUV.y, centeredUV.x);\n    float r = length(centeredUV);\n    \n    // Add time-based rotation\n    angle += iTime * 0.5;\n    \n    // Create square pattern using sine and cosine\n    float sa = abs(sin(angle));\n    float ca = abs(cos(angle));\n    float d = max(sa, ca);\n    \n    // Create gradient effect\n    float gradient = pow(abs(d - 0.5) * 2.0, 2.0);\n    \n    // Generate color based on time\n    float hue = mod(iTime * 0.3, 1.0);\n    vec3 hslColor = hsl2rgb(vec3(hue, 1.0, 0.5));\n    vec3 darkColor = hsl2rgb(vec3(hue + 0.5, 1.0, 0.2));\n    \n    // Mix colors and add noise\n    vec3 finalColor = mix(darkColor, hslColor, gradient);\n    float noiseValue = turbulent(centeredUV * 0.5 + iTime) * 0.2;\n    finalColor += noiseValue;\n    \n    return vec4(finalColor * 1.2, 1.0);\n}"
}