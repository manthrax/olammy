{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotational effects\n    vec2 st = uv * 2.0 - 1.0;\n    float theta = atan2(st.y, st.x);\n    float r = length(st);\n    \n    // Add time-based rotation and turbulence\n    theta += iTime * 0.5 + turbulent(vec3(theta, r, iTime)) * 0.2;\n    \n    // Create geometric patterns using sine waves with varying frequencies\n    float pattern = sin(4.0*theta) * cos(r*10.0 + iTime);\n    pattern += sin(2.0*theta + iTime) * cos(r*5.0);\n    \n    // Generate color transitions using HSL\n    vec3 color = hsl(\n        mod(theta*2.0 + iTime, 1.0),   // Hue variation based on angle and time\n        0.7 + turbulent(vec3(r, iTime)) * 0.3,  // Saturation with noise\n        0.5 + pattern * 0.4           // Lightness modulation\n    );\n    \n    // Add noise texture for additional detail\n    vec2 noiseUV = vec2(r*10.0, theta*10.0);\n    float texNoise = noise(noiseUV);\n    \n    // Combine all elements and output\n    return vec4(color * (1.0 + texNoise * 0.5), 1.0);\n}"
}