{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a complex pattern using multiple noise layers\n    vec3 color = vec3(0.0);\n    \n    // Scale UV coordinates for fractal effect\n    vec2 st = uv * 8.0;\n    \n    // Add time-based animation\n    float t = iTime * 0.5;\n    \n    // Create a base pattern using noise and turbulence\n    float n1 = turbulent(st + t);\n    float n2 = noise(vec3(st, t));\n    \n    // Combine patterns with trigonometric functions\n    vec2 pos = vec2(sin(st.x) * cos(t), cos(st.y) * sin(t));\n    \n    // Add fractal-like details using multiple octaves\n    color += hsl2rgb(vec3(\n        mod(n1 * 5.0 + t, 1.0),\n        0.7,\n        0.5\n    )) * n2;\n    \n    // Create a dynamic background pattern\n    vec3 bg = hsl2rgb(vec3(t * 0.5, 0.8, 0.9));\n    \n    // Combine foreground and background with noise modulation\n    color = mix(bg, color, abs(n1) * 0.7 + 0.3);\n    \n    return vec4(color, 1.0);\n}"
}