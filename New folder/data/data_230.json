{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and rotate coordinates\n    vec2 st = uv * 5.0;\n    float time = iTime * 0.5;\n    \n    // Hexagon tiling pattern\n    vec2 grid = floor(st + 0.5);\n    vec2 center = grid + 0.5;\n    \n    // Rotate around center\n    vec2 offset = st - center;\n    float angle = time + noise(center) * 2.0 * PI;\n    mat2 rot = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 rotated = rot * offset;\n    \n    // Dynamic scaling\n    float scale = 1.0 + sin(time + grid.x + grid.y) * 0.3;\n    rotated /= scale;\n    \n    // Hexagon distance field\n    const vec3 k = vec3(0.57735, 1.0, -0.86602);\n    vec3 d = abs(vec3(rotated.x, rotated.y + rotated.x * k.z, rotated.y - rotated.x * k.z));\n    float hex = length(max(d - k.xxy, 0.0) * k.xxx);\n    \n    // Gradient fill\n    vec3 color = hsl2rgb(vec3(\n        (grid.x + grid.y) * 60.0,\n        1.0,\n        0.5 + sin(hex * 4.0 + time) * 0.5\n    ));\n    \n    // Background and mix\n    vec3 bg = hsl2rgb(vec3(0, 0, 0.9));\n    return vec4(mix(bg, color, hex < 1.0 ? smoothstep(0.8, 1.0, hex) : 0.0), 1.0);\n}"
}