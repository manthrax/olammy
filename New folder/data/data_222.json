{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid pattern based on UV coordinates\n    vec2 st = floor(uv * 16.0); // 16x16 grid\n    \n    // Calculate rotation angle over time\n    float time = iTime * 0.5;\n    float angle = mod(time + noise(vec3(st, time)) * 2.0, PI * 2.0);\n    \n    // Create a rotating square pattern\n    vec2 rotatedUV = uv - 0.5;\n    rotatedUV = mat2(cos(angle), sin(angle), -sin(angle), cos(angle)) * rotatedUV;\n    rotatedUV += 0.5;\n    \n    // Calculate distance from center of squares\n    float d = length(rotatedUV - st / 16.0);\n    \n    // Create glow effect using distance falloff\n    float glow = 1.0 / (d + 1.0);\n    \n    // Generate dynamic colors using HSL to RGB conversion\n    vec3 color = hsl2rgb(vec3(\n        mod(time * 0.5 + st.x * 0.1 + st.y * 0.2, 1.0), // Hue variation\n        0.7, // Saturation\n        0.5 // Lightness\n    ));\n    \n    // Add turbulence for dynamic color transitions\n    float turb = turbulent(vec3(uv * 8.0, time));\n    color *= vec3(1.0 + turb * 0.2);\n    \n    // Combine glow and color\n    vec3 finalColor = mix(vec3(0.0), color, glow);\n    \n    return vec4(finalColor, 1.0);\n}"
}