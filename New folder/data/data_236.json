{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating diagonal pattern using time-based angle\n    float time = iTime * 0.5;\n    vec2 rotatedUV = uv * mat2(cos(time), sin(-time), sin(time), cos(time));\n    \n    // Scale and offset for diagonal stripes\n    vec2 scaledUV = rotatedUV * 8.0 + vec2(4.0, 4.0);\n    \n    // Create checkerboard pattern with noise modulation\n    float pattern = abs(sin(scaledUV.x) * sin(scaledUV.y));\n    pattern += turbulent(scaledUV * 0.5 + time) * 0.3;\n    \n    // Color transition using HSL\n    vec3 color = hsl2rgb(vec3(\n        fract(time * 0.1 + scaledUV.x * 0.1 + scaledUV.y * 0.1),\n        0.7,\n        0.5\n    ));\n    \n    // Add turbulence for dynamic effect\n    float wave = turbulent(scaledUV * 0.2 + vec2(0.0, time));\n    pattern += wave * 0.3;\n    \n    // Final color with alpha\n    return vec4(color * (pattern * 0.5 + 0.5), 1.0);\n}"
}