{
  "src": "vec4 Effect2(vec2 uv) {\n    // Base noise pattern with time offset\n    float time = iTime * 0.5;\n    vec2 st = uv * 3.0 + time;\n    \n    // Create multi-layered noise\n    float n1 = noise(st);\n    float n2 = noise(st * 2.0 + vec2(1.0, 2.0));\n    float n3 = turbulent(st * 4.0 - time);\n    \n    // Combine noise layers with different frequencies\n    float pattern = (n1 * 0.5) + (n2 * 0.3) + (n3 * 0.2);\n    \n    // Create color variations using HSL\n    vec3 hslColor = vec3(\n        fract(time * 0.1 + n1 * 0.5),\n        0.7 + abs(n2) * 0.3,\n        0.5 + abs(pattern) * 0.5\n    );\n    \n    // Convert HSL to RGB and add glow effect\n    vec3 color = hsl2rgb(hslColor);\n    \n    // Add distance-based depth\n    float dist = length(uv - 0.5);\n    color *= smoothstep(1.0, 0.0, dist * 2.0);\n    \n    // Add lighting effect\n    vec2 lightPos = sin(time * 0.7) * 0.3 + 0.5;\n    float lightDist = length(uv - lightPos);\n    color *= smoothstep(1.0, 0.0, lightDist * 4.0);\n    \n    return vec4(color, 1.0);\n}"
}