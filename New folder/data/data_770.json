{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create grid pattern with 30x30 cells\n    float scale = 30.0;\n    vec2 cell = floor(uv * scale);\n    \n    // Animate color shift over time\n    vec2 offset = sin(iTime * 0.5) * 0.1;\n    vec2 uvOffset = fract(cell + offset);\n    \n    // Create pulsing effect using sine functions\n    float pulse = sin(iTime) * 0.5 + 0.5;\n    float cellPulse = sin(cell.x + cell.y) * 0.5 + 0.5;\n    float intensity = pulse * cellPulse;\n    \n    // Generate color variations using HSL\n    vec3 hslColor = vec3(\n        fract(cell.x * 0.1 + iTime * 0.1),   // Hue variation based on position and time\n        0.7,                                  // Saturation\n        intensity                             // Lightness tied to pulsing effect\n    );\n    \n    // Add noise for extra randomness\n    vec2 noiseScale = cell.xy * 0.1;\n    float noiseValue = noise(noiseScale);\n    hslColor.rg += noiseValue * 0.3; // Add noise to hue and saturation\n    \n    // Convert HSL to RGB and apply color shift\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Create secondary color layer with HSV\n    vec3 hsvColor = vec3(\n        fract(cell.y * 0.1 + iTime * 0.2),   // Hue variation based on position and time\n        0.7,                                  // Saturation\n        intensity                             // Value tied to pulsing effect\n    );\n    \n    // Combine colors with alpha blending\n    vec3 finalColor = mix(hsl2rgb(hsvColor), rgbColor, 0.5);\n    \n    // Add contrast adjustment\n    finalColor = (finalColor - 0.5) * 1.5 + 0.5;\n    finalColor = clamp(finalColor, 0.0, 1.0);\n    \n    return vec4(finalColor, 1.0);\n}"
}