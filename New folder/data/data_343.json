{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a basic circular shape for the plasma ball\n    vec2 center = vec2(0.5);\n    float dist = length(uv - center);\n    float circle = 1.0 - smoothstep(0.4, 0.6, dist);\n    // Add dynamic color shifts using HSL colors\n    float time = iTime * 0.5;\n    vec3 hslColor = vec3(\n        fract(time + dist * 2.0) * 360.0,\n        1.0,\n        0.7\n    );\n    // Add surface ripples using noise functions\n    float rippleScale = 4.0;\n    float rippleSpeed = 0.5;\n    vec2 noiseUV = uv * rippleScale + time * rippleSpeed;\n    float noiseValue = noise(noiseUV);\n    float turbulentValue = turbulent(noiseUV);\n    // Combine noise effects for more complex patterns\n    float surfaceDisturbance = (noiseValue + turbulentValue) * 0.5;\n    dist += surfaceDisturbance * 0.1;\n    // Create depth effect by using distance from center\n    vec3 color = hsl2rgb(hslColor);\n    color *= smoothstep(0.0, 1.0, circle);\n    // Add lighting effects for more realism\n    vec3 lightPos = vec3(0.5, 0.5, 1.0);\n    vec3 normal = normalize(vec3(\n        sin(time + dist * 2.0),\n        cos(time + dist * 2.0),\n        1.0\n    ));\n    \n    float ambient = 0.4;\n    float diffuse = max(0.0, dot(normal, lightPos)) * 0.6;\n    color *= (ambient + diffuse);\n    // Add glow effect at the edges of the plasma ball\n    float glowFactor = smoothstep(0.95, 1.0, circle);\n    color += vec3(0.5) * glowFactor;\n    return vec4(color, 1.0);\n}"
}