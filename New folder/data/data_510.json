{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x) + iTime * 0.5 + sin(iTime) * 0.2;\n    \n    // Create hexagonal pattern using polar coordinates\n    a = fract(a / (pi/3.0)); // Divide into 6 segments\n    r = fract(r * 10.0);    // Create concentric rings\n    \n    // Generate color with pulsating HSL values\n    vec3 color;\n    color.x = mod(a, 1.0) + 0.5; // Hue\n    color.y = 0.7 + sin(iTime * 2.0 + r * pi) * 0.3; // Saturation\n    color.z = 0.5 + sin(iTime * 0.5 + a * pi) * 0.5; // Lightness\n    \n    // Add noise and turbulence for more dynamic effect\n    vec3 noiseColor = vec3(noise(vec3(uv * 10.0, iTime)), \n                          noise(vec2(uv * 20.0)),\n                          turbulent(vec3(uv * 30.0 + iTime)));\n    \n    // Combine colors and apply transformations\n    color = hsl2rgb(color) * (0.5 + noiseColor.x * 0.5);\n    color += noiseColor.yz * 0.3;\n    \n    return vec4(color, 1.0);\n}"
}