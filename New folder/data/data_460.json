{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates for grid pattern\n    vec2 st = uv * 50.0;\n    \n    // Get integer and fractional parts of scaled coordinates\n    vec2 ipos = floor(st);\n    vec2 fpos = fract(st);\n    \n    // Calculate distance from diagonal lines\n    float d1 = abs(fpos.x + fpos.y - 0.5) * sqrt(2.0);\n    float d2 = abs(fpos.x - fpos.y) * sqrt(2.0);\n    \n    // Combine distances and add time-based offset\n    float dist = min(d1, d2);\n    dist += sin(iTime * 0.5 + ipos.x + ipos.y) * 0.3;\n    \n    // Add noise for shimmer effect\n    vec3 noiseVal = vec3(turbulent(st + iTime));\n    dist += noiseVal.r * 0.1;\n    \n    // Create color based on distance and time\n    float hue = (ipos.x + ipos.y) * 0.2 + iTime * 0.5;\n    vec3 color = hsl(hue, 0.7, 0.5);\n    \n    // Modulate color with distance\n    color *= 1.0 - smoothstep(0.0, 0.4, dist);\n    \n    return vec4(color, 1.0);\n}"
}