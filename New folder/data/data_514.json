{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime * 0.5; // Rotate over time\n    \n    // Create hexagonal grid pattern\n    vec2 polar = vec2(r, theta);\n    vec2 gridUV = polar * 4.0;\n    vec2 gridPos = floor(gridUV);\n    \n    // Calculate color based on UV and time\n    float timeFactor = sin(iTime * 0.5 + gridPos.x * pi) * 0.5 + 0.5;\n    vec3 cyan = vec3(0.0, 1.0, 1.0);\n    vec3 magenta = vec3(1.0, 0.0, 1.0);\n    vec3 color = mix(cyan, magenta, timeFactor);\n    \n    // Add procedural noise for dynamic effect\n    float noiseValue = turbulent(vec2(gridPos.x, iTime)) * 0.5 + 0.5;\n    color *= noiseValue;\n    \n    return vec4(color, 1.0);\n}"
}