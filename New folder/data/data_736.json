{
  "src": "vec4 Effect2(vec2 uv) {\n    // Translate UV coordinates to center of screen\n    vec2 st = uv - 0.5;\n    \n    // Rotate coordinates based on time\n    float angle = sin(iTime * 0.5 + PI) * 0.5 + 0.5;\n    mat2 rotMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    vec2 rotatedSt = rotMatrix * st;\n    // Create sine wave patterns with time-based frequency\n    float freq = 4.0 + sin(iTime) * 2.0;\n    float wave1 = sin(rotatedSt.x * freq + iTime) * 0.5;\n    float wave2 = sin(rotatedSt.y * freq + iTime * 0.7) * 0.5;\n    // Combine waves and add turbulence\n    float combined = (wave1 + wave2) * 0.5;\n    combined += turbulent(vec3(rotatedSt, iTime)) * 0.3;\n    // Create RGB cycling effect using HSL to RGB conversion\n    vec3 hslColor = vec3(\n        mod(iTime * 0.5 + rotatedSt.x * 2.0 + rotatedSt.y * 3.0, PI),\n        1.0,\n        0.5 + combined * 0.5\n    );\n    vec3 rgbColor = hsl2rgb(hslColor);\n    // Add noise for extra detail\n    vec2 noiseUV = uv * 4.0 + iTime;\n    float noiseValue = noise(noiseUV);\n    \n    return vec4(rgbColor * (1.0 + noiseValue * 0.3), 1.0);\n}"
}