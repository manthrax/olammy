{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create time-based animation\n    float time = iTime * 0.5;\n    \n    // Add some movement to the UV coordinates using sine waves\n    vec2 pos = uv + sin(uv * 10.0 + time) * 0.3;\n    \n    // Generate noise and turbulence patterns\n    float noisePattern = noise(pos * 10.0 + sin(time) * 2.0);\n    float turbulentPattern = turbulent(pos * 5.0 + vec2(sin(time), cos(time)));\n    \n    // Create a color transition effect using HSL to RGB conversion\n    vec3 color = hsl2rgb(vec3(\n        time * 0.1,   // Hue\n        0.7 + noise(pos * 20.0) * 0.3, // Saturation with some noise variation\n        0.5 + sin(time * 0.5) * 0.5    // Brightness with time-based modulation\n    ));\n    \n    // Combine patterns and colors for the final effect\n    vec3 finalColor = mix(\n        color,\n        vec3(1.0, 1.0, 1.0),  // White glow\n        smoothstep(0.0, 1.0, noisePattern * turbulentPattern)\n    );\n    \n    // Add some depth and detail using pow function\n    finalColor = pow(finalColor, vec3(2.0));\n    \n    return vec4(finalColor, 1.0);\n}"
}