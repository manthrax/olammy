{
  "src": "\nvec4 Effect2(vec2 uv) {\n    vec3 color;\n    // Convert UV coordinates to polar coordinates\n    float r = length(uv);\n    float theta = atan2(uv.y, uv.x);\n    // Animate radius and angle\n    r *= sin(iTime * 0.5);\n    theta += cos(iTime * 0.3);\n    // Transform to cartesian with animated polar coordinates\n    vec2 pos = vec2(r * cos(theta), r * sin(theta));\n    // Add noise for turbulence effect\n    float noiseValue = noise(pos * 10.0 + iTime);\n    pos += vec2(noiseValue * 0.1, noiseValue * 0.1);\n    // Calculate color using HSL with time-varying hue and lightness\n    color = hsl2rgb(vec3(\n    theta / (2.0 * pi) + iTime * 0.5,\n    0.7 + sin(r * 4.0 + iTime) * 0.3,\n    0.8 + turbulent(vec3(pos * 10.0, 0.0)) * 0.2\n    ));\n    return vec4(color, 1.0);\n}\n"
}