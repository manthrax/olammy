{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    float angle = atan2(uv.y, uv.x);\n    float radius = length(uv * 1.5); // Scale UV for better ring spacing\n    \n    // Add time-based rotation and pulsing\n    angle += iTime * 0.2;\n    radius += sin(iTime) * 0.3;\n    \n    // Create orbiting rings pattern using sine function with increasing frequency\n    float pattern = sin(radius + angle * 5.0);\n    pattern = abs(pattern); // Make it symmetric\n    \n    // Add chromatic aberration by offsetting colors differently\n    vec3 color;\n    color.r = pattern * (1.0 + sin(iTime + angle * 2.0));\n    color.g = pattern * (1.0 + cos(iTime + angle * 2.0 + PI/3.0));\n    color.b = pattern * (1.0 + sin(iTime + angle * 2.0 + PI*2.0/3.0));\n    \n    // Add pulsating color evolution using HSL\n    vec3 hslColor = vec3(\n        mod(angle * 5.0 + iTime, 2.0) / 2.0, // Hue variation\n        1.0, // Saturation\n        0.5 + 0.5 * sin(iTime + radius * 2.0) // Pulsing lightness\n    );\n    color = hsl2rgb(hslColor);\n    \n    // Add turbulence for extra texture\n    vec3 noisePattern = vec3(turbulent(uv * 10.0 + iTime));\n    color *= 1.0 + noisePattern * 0.5;\n    \n    return vec4(color, 1.0);\n}"
}