{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.5;\n    vec3 color = vec3(0.0);\n    \n    // Create rotating shapes with different speeds and sizes\n    float speed = 1.0;\n    float size = 0.3;\n    \n    // Convert UV to polar coordinates\n    vec2 pos = uv - 0.5;\n    float angle = atan(pos.y, pos.x) + sin(time * speed) * 2.0;\n    float dist = length(pos);\n    \n    // Create multiple rotating shapes\n    for(float i = 0.0; i < 3.0; i++) {\n        float rot = time * (speed + i * 0.5) + i * PI * 0.5;\n        vec2 rotatedPos = vec2(\n            cos(rot) * pos.x - sin(rot) * pos.y,\n            sin(rot) * pos.x + cos(rot) * pos.y\n        );\n        \n        float d = length(rotatedPos);\n        float shape = smoothstep(size - 0.1, size, d);\n        \n        // Create color transitions using HSL to RGB conversion\n        vec3 hslColor = vec3(\n            (time * 0.5 + i * 0.4) % 1.0,\n            0.7,\n            0.5 + 0.2 * sin(time * 0.8 + i * PI * 0.5)\n        );\n        \n        // Mix colors based on proximity to shape edges\n        color = mix(\n            color,\n            hsl2rgb(hslColor),\n            shape * (1.0 - length(vec2(shape)))\n        );\n    }\n    \n    // Add some noise and turbulence for extra visual interest\n    vec2 noiseUV = uv * 4.0 + time;\n    float noiseValue = turbulent(noiseUV) * 0.3;\n    color += noiseValue;\n    \n    return vec4(color, 1.0);\n}"
}