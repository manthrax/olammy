{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a base frequency for the sine wave pattern\n    float freq = 4.0;\n    \n    // Add time-based animation\n    float time = iTime * 0.5;\n    \n    // Combine x and y coordinates with time to create movement\n    vec2 st = uv * freq + vec2(time, -time);\n    \n    // Use sine function to create undulating pattern\n    float base = sin(st.x) * 0.5 + 0.5;\n    \n    // Add noise and turbulence for dynamic effect\n    float noiseVal = noise(vec3(uv * 0.5 + time, time)) * 0.2;\n    float turbulentVal = turbulent(vec2(uv * 0.5 + time)) * 0.3;\n    \n    // Combine base pattern with noise and turbulence\n    float v = (base + sin(st.y) * 0.5 + noiseVal + turbulentVal);\n    \n    // Normalize value to 0-1 range for color conversion\n    v = (v + 1.0) * 0.5;\n    \n    // Convert to HSL and shift hue over time\n    vec3 hslColor = vec3(v, 0.8, 0.7);\n    hslColor.r += time * 0.5; // Shift hue\n    \n    // Convert HSL to RGB\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    return vec4(rgbColor, 1.0);\n}"
}