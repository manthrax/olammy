{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal pattern\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime * 0.5; // Add time-based rotation\n    \n    // Create hexagonal grid using polar coordinates\n    float angleStep = PI / 3.0;\n    float cellSize = 0.1;\n    \n    // Calculate which hexagon the point is in\n    float angleMod = mod(theta, angleStep);\n    float radiusMod = r - floor(r / cellSize) * cellSize;\n    \n    // Create hexagonal pattern using distance field\n    float dist = abs(radiusMod - cellSize/2.0);\n    float pattern = smoothstep(0.0, 0.5*cellSize, dist);\n    \n    // Calculate color based on time and position\n    vec3 warmColor = hsl2rgb(vec3(0.0, 1.0, 0.5));   // Warm orange-red\n    vec3 coolColor = hsl2rgb(vec3(120.0, 1.0, 0.5)); // Cool cyan\n    \n    // Mix colors based on time and position\n    float mixAmount = sin(iTime + theta) * 0.5 + 0.5;\n    vec3 color = mix(warmColor, coolColor, mixAmount);\n    \n    // Add some noise for extra texture\n    float noiseValue = turbulent(vec2(theta, r)) * 0.1;\n    color *= 1.0 + noiseValue;\n    \n    return vec4(color, 1.0);\n}"
}