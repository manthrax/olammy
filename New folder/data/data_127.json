{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate coordinates over time\n    float angle = sin(iTime * 0.5 + 1.0);\n    vec2 rotatedUv = vec2(\n        uv.x * cos(angle) - uv.y * sin(angle),\n        uv.x * sin(angle) + uv.y * cos(angle)\n    );\n    \n    // Create sine wave pattern with time-based animation\n    float speed = 0.5;\n    float freq = 4.0;\n    vec3 color1 = hsl2rgb(vec3(\n        mod(uv.x * 100.0 + iTime * speed, 360.0) / 360.0,\n        0.7,\n        0.5\n    ));\n    \n    // Add turbulence and noise for dynamic patterns\n    vec2 noiseUv = rotatedUv * 5.0;\n    float noiseVal = noise(noiseUv);\n    float turbulentVal = turbulent(rotatedUv * 10.0 + iTime);\n    \n    // Combine patterns with color gradients\n    vec3 finalColor = mix(\n        hsl2rgb(vec3(\n            mod(uv.y * 100.0 - iTime * speed, 360.0) / 360.0,\n            0.7,\n            0.5\n        )),\n        color1,\n        abs(sin(iTime + uv.x * pi)) * 0.5 + 0.25\n    );\n    \n    // Add noise and turbulence effects\n    finalColor *= (noiseVal * 0.5 + 0.5) * (turbulentVal * 0.5 + 0.5);\n    \n    return vec4(finalColor, 1.0);\n}"
}