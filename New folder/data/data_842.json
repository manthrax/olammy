{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of rotating squares\n    vec2 st = uv * 10.0; // Scale UV coordinates to create a grid\n    \n    // Get integer grid cell indices\n    vec2 ij = floor(st);\n    \n    // Calculate rotation angle based on time and position\n    float time = iTime * 0.5;\n    float angle = sin(time + ij.x * 0.1) * cos(time + ij.y * 0.1);\n    \n    // Create rotating pattern using sine and cosine\n    vec2 rotated = vec2(\n        cos(angle) * (st.x - ij.x) - sin(angle) * (st.y - ij.y),\n        sin(angle) * (st.x - ij.x) + cos(angle) * (st.y - ij.y)\n    );\n    \n    // Add noise to create variations\n    float noiseVal = noise(vec2(ij)) * 0.5;\n    angle += noiseVal;\n    \n    // Create color transitions using HSL colors\n    vec3 color = hsl(\n        time + ij.x * 0.1 + noiseVal,\n        0.7,\n        0.5\n    );\n    \n    // Convert to RGB and return as fragment color\n    return vec4(hsl2rgb(color), 1.0);\n}"
}