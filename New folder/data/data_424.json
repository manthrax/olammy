{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar\n    vec2 polar = vec2(length(uv), atan2(uv.y, uv.x));\n    \n    // Add time-based rotation\n    float angle = iTime * 0.5;\n    float radius = polar.x;\n    float theta = polar.y + angle;\n    \n    // Create rotating sine wave pattern\n    float wave1 = sin(radius * 5.0 + theta * 3.0);\n    float wave2 = sin(radius * 4.0 + theta * 2.0);\n    \n    // Combine waves with noise for complexity\n    float value = (wave1 + wave2) * 0.5;\n    value += noise(uv * 8.0 + iTime) * 0.3;\n    \n    // Create dynamic color transitions using HSL\n    vec3 hslColor = vec3(\n        sin(value * 4.0 + iTime) * 0.5 + 0.5,   // Hue\n        0.7,                                    // Saturation\n        abs(sin(iTime * 0.2)) * 0.5 + 0.5       // Lightness\n    );\n    \n    // Convert to RGB and output\n    vec3 color = hsl2rgb(hslColor);\n    return vec4(color, 1.0);\n}"
}