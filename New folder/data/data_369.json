{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal patterns\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x) + iTime; // Add time-based rotation\n    \n    // Create hexagonal tiling pattern using polar coordinates\n    float angleStep = pi / 3.0;\n    float angleMod = mod(a, angleStep);\n    \n    // Use turbulence to create dynamic movement in the pattern\n    vec2 noiseUV = vec2(r * 10.0 + iTime, angleMod * 10.0);\n    float noiseVal = turbulent(noiseUV) * 0.5 + 0.5;\n    \n    // Create pulsating color effect using HSL to RGB conversion\n    vec3 hslColor = vec3(\n        mod(a / pi + iTime * 0.2, 1.0), // Hue variation over time and angle\n        0.7 + noiseVal * 0.3,           // Saturation modulation with noise\n        0.5 + sin(iTime) * 0.4         // Lightness pulsation\n    );\n    \n    // Convert HSL to RGB for final color output\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add dynamic gradients using noise texture sampling\n    float gradient = (sin(r * 10.0 + iTime) * 0.5 + 0.5) * noiseVal;\n    rgbColor *= gradient;\n    \n    return vec4(rgbColor, 1.0);\n}"
}