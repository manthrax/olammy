{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a rotating pattern using polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x) + iTime * 0.5;\n    \n    // Create kaleidoscope effect by reflecting around center point\n    int slices = 8;\n    a = mod(a * float(slices), PI * 2.0);\n    vec2 reflected = vec2(cos(a), sin(a)) * r;\n    \n    // Add noise and turbulence for dynamic patterns\n    vec2 noiseCoords = reflected * 5.0 + iTime;\n    float noiseVal = turbulent(noiseCoords) * 0.5 + 0.5;\n    \n    // Create color transitions using HSL to RGB conversion\n    vec3 color = hsl2rgb(vec3(\n        mod(iTime * 0.1, 1.0),   // Hue variation over time\n        0.7 + noiseVal * 0.3,    // Saturation modulation\n        0.5 + sin(iTime) * 0.2   // Brightness modulation\n    ));\n    \n    return vec4(color, 1.0);\n}"
}