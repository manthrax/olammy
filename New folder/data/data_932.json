{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.5;\n    \n    // Create a base color using HSL to RGB conversion with noise\n    vec3 color1 = hsl2rgb(vec3(0.5 + sin(time * 0.7) * 0.5, 0.8, 0.6));\n    vec3 color2 = hsl2rgb(vec3(0.3 + cos(time * 0.5) * 0.5, 0.7, 0.5));\n    \n    // Create a geometric shape using distance field\n    vec2 st = uv - 0.5;\n    float dist = length(st);\n    float angle = atan2(st.y, st.x);\n    float radius = 0.3 + sin(time + angle * 4.0) * 0.1;\n    \n    // Add noise and turbulence to create dynamic patterns\n    vec3 noiseColor = hsl2rgb(vec3(\n        noise(vec3(uv * 5.0, time)) * 0.5 + 0.5,\n        0.7,\n        0.5\n    ));\n    \n    // Combine colors with geometric mask\n    float mixAmount = smoothstep(radius - 0.1, radius + 0.1, dist);\n    vec3 finalColor = mix(color1, color2, mixAmount);\n    \n    // Add gradient effect using turbulence\n    float turb = turbulent(vec2(uv * 4.0, time)) * 0.5 + 0.5;\n    finalColor = mix(finalColor, noiseColor, turb * 0.3);\n    \n    return vec4(finalColor, 1.0);\n}"
}