{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan(st.y, st.x);\n    float radius = length(st);\n    \n    // Add time-based rotation\n    angle += iTime * 0.5;\n    \n    // Create hexagonal grid pattern\n    vec2 grid = floor(vec2(6.0) * (uv + 0.5));\n    vec2 offset = vec2(grid.x * 0.866, grid.y * 1.5);\n    \n    // Calculate distance from center of hexagon\n    vec2 pos = uv * 4.0 - offset;\n    float dist = length(pos) / 3.0;\n    \n    // Add noise and turbulence for dynamic effect\n    vec2 noiseUV = uv + iTime * 0.1;\n    float n = noise(noiseUV);\n    float t = turbulent(noiseUV * 4.0);\n    \n    // Create color transitions using HSL\n    vec3 color = hsl2rgb(vec3(\n        fract(angle / (pi * 2.0) + iTime * 0.1),\n        0.7,\n        0.5 + 0.5 * sin(iTime)\n    ));\n    \n    // Combine effects and output\n    float mask = smoothstep(0.9, 1.0, dist);\n    return vec4(color * (mask + t * 0.2), 1.0);\n}"
}