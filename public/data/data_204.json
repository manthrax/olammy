{
  "src": "vec4 Effect2(vec2 uv) {\n    // Initialize variables\n    float noiseValue = 0.0;\n    float amplitude = 1.0;\n    float frequency = 4.0;\n    \n    // FBM (Fractal Brownian Motion) noise accumulation\n    for(int octave = 0; octave < 5; octave++) {\n        // Add time offset to create movement\n        vec2 uvOffset = uv * frequency + iTime * 0.1;\n        \n        // Get noise value at current frequency\n        float n = noise(vec3(uvOffset, iTime)) * amplitude;\n        \n        // Accumulate noise values\n        noiseValue += n;\n        \n        // Update for next octave\n        frequency *= 2.0;\n        amplitude *= 0.5;\n    }\n    \n    // Normalize noise value to [0,1] range\n    noiseValue = (noiseValue + 1.0) * 0.5;\n    \n    // Convert noise to color using HSL to RGB conversion\n    vec3 color = hsl2rgb(vec3(\n        noiseValue * 360.0,   // Hue based on noise value\n        0.7,                 // Saturation\n        0.5 + noiseValue*0.5 // Lightness modulation\n    ));\n    \n    return vec4(color, 1.0);\n}"
}