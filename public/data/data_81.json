{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 center = vec2(0.5);\n    float radius = length(uv - center);\n    float angle = atan2(uv.y - center.y, uv.x - center.x);\n    \n    // Add wobble effect using sine and time\n    float wobbleRadius = sin(iTime * 2.0 + radius * 4.0) * 0.3;\n    float wobbleAngle = sin(iTime + angle * 2.0) * 0.5;\n    \n    // Combine original and wobble components\n    float finalRadius = radius + wobbleRadius;\n    float finalAngle = angle + wobbleAngle;\n    \n    // Add noise for extra randomness\n    vec3 noiseParams = vec3(finalRadius, finalAngle, iTime);\n    float noiseValue = noise(noiseParams) * 0.2;\n    finalRadius += noiseValue;\n    \n    // Convert back to cartesian coordinates\n    vec2 newUV = center + vec2(cos(finalAngle), sin(finalAngle)) * finalRadius;\n    \n    // Create color based on position and time\n    vec3 color = hsl(\n        (newUV.x + iTime) * 0.5,\n        0.7,\n        0.5 + turbulent(vec2(newUV)) * 0.2\n    );\n    \n    return vec4(color, 1.0);\n}"
}