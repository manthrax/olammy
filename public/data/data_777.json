{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates from [-1,1] to [0,1]\n    vec2 st = uv * 0.5 + 0.5;\n    \n    // Create rotational symmetry by repeating pattern around center\n    float theta = atan2(uv.y, uv.x);\n    float radius = length(uv) * 0.75; // Scale down the radius\n    \n    // Animate rotation and create kaleidoscopic effect\n    theta += iTime * 0.1;\n    theta *= 8.0; // Create 8-fold symmetry\n    \n    // Convert back to cartesian coordinates\n    vec2 rotated = vec2(\n        cos(theta) * radius,\n        sin(theta) * radius\n    );\n    \n    // Add turbulence and noise for organic texture\n    float noiseValue = turbulent(rotated + iTime);\n    noiseValue = abs(noiseValue); // Ensure positive values\n    \n    // Create color transitions using HSL to RGB conversion\n    vec3 hslColor = vec3(\n        noiseValue * 0.6 + 0.2, // Hue\n        0.7 + noiseValue * 0.3, // Saturation\n        0.5 + sin(iTime) * 0.4 // Lightness\n    );\n    \n    // Convert HSL to RGB and output\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    return vec4(rgbColor, 1.0);\n}"
}