{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate coordinates over time\n    vec2 st = uv * 2.0 - 1.0;\n    float t = iTime * 0.5;\n    \n    // Create a rotating pattern using sine and cosine\n    mat2 rot = mat2(cos(t), sin(t), -sin(t), cos(t));\n    vec2 rotated = rot * st;\n    \n    // Calculate distance from line with time variation\n    float d = abs(rotated.x * sin(t) + rotated.y * cos(t)) * 4.0;\n    \n    // Add noise and turbulence for dynamic variations\n    float noiseVal = noise(vec3(uv * 10.0, t));\n    float turbulentVal = turbulent(vec2(uv * 5.0 + t));\n    \n    // Combine distance with noise for thickness variation\n    float line = smoothstep(0.4 + noiseVal * 0.2, 0.6 + noiseVal * 0.2, d);\n    \n    // Create color variations using HSL to RGB conversion\n    vec3 hslColor = vec3(t * 0.1, 0.7, 0.5 + turbulentVal * 0.2);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Mix colors and apply line effect\n    vec3 finalColor = mix(vec3(0.1), rgbColor, line);\n    \n    return vec4(finalColor, 1.0);\n}"
}