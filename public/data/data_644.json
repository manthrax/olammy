{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating pattern with triangles\n    vec2 center = uv * 2.0 - 1.0;\n    float angle = atan(center.y, center.x);\n    float radius = length(center);\n    \n    // Add animation over time\n    float animTime = iTime * 0.5;\n    \n    // Create triangle pattern using polar coordinates\n    vec3 color = vec3(0.0);\n    for(float i = 0.0; i < 3.0; i++) {\n        float triAngle = angle + (i * 2.0 * PI / 3.0) + animTime;\n        vec2 triPos = vec2(cos(triAngle), sin(triAngle)) * radius;\n        \n        // Apply RGB displacement\n        vec2 displacedPos = triPos + \n            vec2(sin(animTime + i * PI), cos(animTime + i * PI)) * 0.5;\n        \n        // Add noise and turbulence\n        float noiseVal = turbulent(displacedPos * 10.0 + animTime);\n        color += hsl2rgb(vec3(triAngle, 1.0, 0.5)) * (noiseVal * 0.5 + 0.5);\n    }\n    \n    // Combine with original position\n    vec2 finalPos = center + vec2(sin(animTime), cos(animTime)) * 0.3;\n    float finalRadius = length(finalPos) * 0.5 + 0.5;\n    \n    return vec4(color * finalRadius, 1.0);\n}"
}