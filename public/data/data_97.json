{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create orbitron-style pattern with warping effects\n    vec2 center = vec2(0.5);\n    float radius = length(uv - center);\n    float angle = atan2(uv.y - center.y, uv.x - center.x);\n    \n    // Add time-based rotation and warping\n    angle += iTime * 0.5;\n    radius *= 1.0 + sin(iTime) * 0.5;\n    \n    // Convert back to cartesian coordinates\n    vec2 transformedUV = center + vec2(cos(angle), sin(angle)) * radius;\n    \n    // Add turbulence for warping effect\n    float warpAmount = turbulent(transformedUV * 4.0 + iTime);\n    transformedUV += transformedUV * warpAmount * 0.5;\n    \n    // Create color transitions using HSL\n    vec3 color = hsl2rgb(vec3(\n        mod(angle * 10.0 + iTime, 1.0),\n        0.7,\n        0.5 + turbulent(transformedUV * 8.0) * 0.5\n    ));\n    \n    // Add depth using noise\n    color *= noise(vec3(uv * 4.0, iTime)) * 0.5 + 0.5;\n    \n    return vec4(color, 1.0);\n}"
}