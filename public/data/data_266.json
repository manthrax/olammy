{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create center point\n    vec2 center = vec2(0.5, 0.5);\n    \n    // Calculate vector from center to current fragment position\n    vec2 pos = uv - center;\n    \n    // Convert to polar coordinates\n    float angle = atan(pos.y, pos.x);\n    float radius = length(pos) * 2.0;\n    \n    // Add noise for dynamic effect\n    radius += noise(vec3(uv * 10.0 + iTime, 0.0)) * 0.1;\n    radius = abs(radius - 0.5);\n    \n    // Create color cycling using HSL\n    vec3 hslColor = vec3(\n        fract(iTime * 0.2 + angle * 0.1) * 360.0,\n        0.7,\n        0.5 + sin(iTime + radius * 2.0) * 0.5\n    );\n    \n    // Convert HSL to RGB\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add rotation effect\n    float rot = iTime * 0.1;\n    vec2 rotatedPos = vec2(\n        cos(rot) * pos.x - sin(rot) * pos.y,\n        sin(rot) * pos.x + cos(rot) * pos.y\n    );\n    \n    // Create turbulence effect\n    float turb = turbulent(vec3(rotatedPos, iTime)) * 0.5;\n    \n    // Combine effects for final color\n    vec3 finalColor = rgbColor * (1.0 - turb) + vec3(turb);\n    \n    return vec4(finalColor, 1.0);\n}"
}