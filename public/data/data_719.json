{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 centered = uv - 0.5;\n    float radius = length(centered);\n    float angle = atan2(centered.y, centered.x);\n    // Add rotation over time\n    angle += iTime * 0.5;\n    \n    // Create kaleidoscope effect by mirroring angles\n    angle = mod(angle + PI, PI); // Mirror every pi radians\n    angle = mod(angle, PI/6.0) * 12.0; // Divide into 12 sectors\n    \n    // Mirror radius based on angle division\n    float mirroredRadius = (mod(floor(angle / (PI/6.0)), 2.0) == 0.0) ? radius : 0.5 - radius;\n    \n    // Create color pattern using HSL to RGB conversion\n    vec3 hslColor = vec3(\n        mod(radius * 10.0 + iTime, 1.0), // Hue variation with time and radius\n        0.7 + turbulent(vec2(uv) * 5.0 + iTime), // Saturation with turbulence\n        0.5 + sin(angle * 3.0 + iTime) * 0.5 // Lightness variation with angle and time\n    );\n    \n    // Convert HSL to RGB and add noise for extra detail\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor += noise(vec3(uv * 10.0, iTime)) * 0.2;\n    \n    return vec4(rgbColor, 1.0);\n}"
}