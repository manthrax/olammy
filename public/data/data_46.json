{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating pattern using time-based rotation\n    float t = iTime * 0.5;\n    mat2 rot = mat2(cos(t), -sin(t), sin(t), cos(t));\n    vec2 st = uv * 10.0; // Scale coordinates for more detail\n    \n    // Add turbulence to create fractal-like patterns\n    float turb = turbulent(rot * st);\n    \n    // Create color variations using trigonometric functions\n    float c1 = sin(st.x * 0.5 + t) * cos(st.y * 0.5);\n    float c2 = cos(st.x * 0.3 - t) * sin(st.y * 0.4);\n    \n    // Combine turbulence with color variations\n    vec3 hslColor = vec3(\n        turb * 0.5 + 0.5, // Hue\n        abs(c1) * 0.7 + 0.3, // Saturation\n        abs(c2) * 0.6 + 0.4 // Lightness\n    );\n    \n    // Convert HSL to RGB and add time-based color shifting\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor *= sin(iTime * 0.2 + vec3(0.0, 1.0, 2.0)) * 0.5 + 0.5;\n    \n    return vec4(rgbColor, 1.0);\n}"
}