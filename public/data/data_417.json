{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates from 0-1 range to -1 to 1 range\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Create a basic sine wave pattern with time-based animation\n    float waveX = sin(st.x * 5.0 + iTime) * 0.5 + 0.5;\n    float waveY = sin(st.y * 5.0 + iTime * 0.7 + PI) * 0.5 + 0.5;\n    \n    // Combine the waves and add some noise for complexity\n    vec2 wavePattern = vec2(waveX, waveY);\n    float combinedWave = (waveX + waveY) * 0.5;\n    combinedWave += turbulent(st * 10.0 + iTime) * 0.3;\n    \n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        fract(iTime * 0.2 + 0.5),   // Hue cycling over time\n        0.7,                       // Saturation\n        combinedWave * 0.6 + 0.4   // Lightness modulated by wave pattern\n    );\n    \n    // Convert HSL to RGB and mix with noise patterns\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor *= vec3(\n        sin(waveX * PI) * 0.5 + 0.5,\n        sin(waveY * PI) * 0.5 + 0.5,\n        turbulent(st * 5.0 + iTime) * 0.5 + 0.5\n    );\n    \n    // Final color with alpha\n    return vec4(rgbColor, 1.0);\n}"
}