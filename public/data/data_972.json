{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for circular patterns\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + sin(iTime) * 3.0;\n    \n    // Create multiple rotating layers using time-based sine functions\n    float layer1 = sin(theta + iTime * 0.5) * 0.5 + 0.5;\n    float layer2 = sin(theta + iTime * 0.7 + PI) * 0.5 + 0.5;\n    \n    // Combine layers with different frequencies\n    vec3 colorBase = hsl2rgb(vec3(\n        (theta / (2.0 * PI) + 0.5 * sin(iTime)) * 360.0, \n        1.0, \n        0.5\n    ));\n    \n    // Add noise and turbulence for more dynamic patterns\n    float noiseValue = turbulent(vec3(uv * 4.0, iTime));\n    colorBase *= mix(1.0, 0.8, abs(noiseValue));\n    \n    // Create a circular gradient effect\n    vec3 finalColor = mix(\n        colorBase,\n        hsl2rgb(vec3(\n            (theta / (2.0 * PI) + 0.5 * cos(iTime)) * 360.0,\n            1.0,\n            0.7\n        )),\n        smoothstep(0.8, 1.0, r)\n    );\n    \n    // Add some pulsing animation to the center\n    finalColor *= mix(1.0, 1.5, sin(iTime * 2.0 + theta) * 0.3 + 0.7);\n    \n    return vec4(finalColor, 1.0);\n}"
}