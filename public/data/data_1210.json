{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of rotating squares\n    vec2 st = uv * 10.0; // Scale up for more cells\n    vec2 ipos = floor(st); // Integer position\n    vec2 fpos = fract(st); // Fractional position\n    \n    // Calculate rotation angle based on time and noise\n    float time = iTime * 0.5;\n    float noiseVal = noise(ipos + time) * 0.5 + 0.5;\n    float angle = (time + noiseVal * 2.0 * PI) * sin(fpos.x * PI);\n    \n    // Create rotation matrix\n    mat2 rot = mat2(cos(angle), -sin(angle),\n                    sin(angle), cos(angle));\n    \n    // Transform coordinates\n    vec2 uvLocal = fpos - 0.5;\n    uvLocal = rot * uvLocal + 0.5;\n    \n    // Calculate color based on transformed coordinates and time\n    float hue = (uv.x * 10.0 + time) * 0.1;\n    float sat = sin(uv.y * PI + time) * 0.5 + 0.5;\n    float lig = abs(sin(time)) * 0.5 + 0.25;\n    \n    // Add turbulence for extra detail\n    vec3 color = hsl(hue, sat, lig);\n    color *= turbulent(uvLocal * 10.0) * 0.5 + 0.5;\n    \n    return vec4(color, 1.0);\n}"
}