{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a rotating pattern using polar coordinates\n    float radius = length(uv);\n    float angle = atan2(uv.y, uv.x) + iTime * 0.5;\n    \n    // Create geometric shape with multiple frequencies\n    float pattern = sin(angle * 4.0) * 0.5 +\n                    sin(angle * 8.0) * 0.3 +\n                    sin(angle * 16.0) * 0.2;\n    \n    // Add noise and turbulence for dynamic effect\n    vec2 noiseUV = uv * 10.0 + iTime;\n    float noiseVal = noise(noiseUV);\n    float turbulentVal = turbulent(noiseUV * 5.0);\n    \n    // Create color transitions using HSL to RGB conversion\n    vec3 color = hsl(\n        mod(iTime * 0.2 + angle, 1.0),  // Hue variation over time and position\n        0.7 + noiseVal * 0.3,           // Saturation modulation with noise\n        0.5 + turbulentVal * 0.5        // Lightness modulation with turbulence\n    );\n    \n    // Combine pattern and color for final effect\n    float shape = abs(pattern) * (1.0 - radius * 0.5);\n    vec3 finalColor = mix(color, vec3(0.0), max(0.0, 1.0 - radius));\n    \n    return vec4(finalColor, 1.0);\n}"
}