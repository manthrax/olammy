{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating hexagonal pattern with pulsing colors\n    vec2 st = uv * 5.0 + iTime; // Scale and animate pattern\n    \n    // Convert to polar coordinates for hexagonal mapping\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    \n    // Calculate hexagon ring index\n    float hexSize = 0.3;\n    float ring = floor(radius / hexSize);\n    vec2 hexUV = fract(vec2(angle / (pi * 2.0), radius / hexSize));\n    \n    // Create hexagonal pattern with time-based rotation\n    float pattern = sin(hexUV.x * pi * 2.0 + iTime) * cos(hexUV.y * pi * 2.0);\n    \n    // Add noise and turbulence for more dynamic effect\n    vec3 colorBase = hsl(ring * 0.1, 0.7, 0.5);\n    float noiseVal = noise(vec3(uv * 10.0 + iTime, 0.0)) * 0.5;\n    \n    // Combine pattern and noise for final color\n    vec3 finalColor = mix(colorBase, hsl(ring * 0.2 + noiseVal, 0.8, 0.6), pattern);\n    \n    return vec4(finalColor, 1.0);\n}"
}