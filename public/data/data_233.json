{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    float time = iTime * 0.5;\n    \n    // Create hexagonal grid pattern\n    vec2 st = uv * 10.0; // Scale up for multiple hexagons\n    vec2 pos = fract(st - time) * 2.0 - 1.0;\n    \n    // Convert to polar coordinates\n    float angle = atan(pos.y, pos.x);\n    float radius = length(pos);\n    \n    // Create rotating hexagonal pattern\n    angle += time * 0.25; // Rotate over time\n    \n    // Sample around the circle at different angles for hexagon effect\n    float sum = 0.0;\n    for(float i = 0.0; i < PI*2.0; i += PI/3.0) {\n        vec2 dir = vec2(cos(angle + i), sin(angle + i));\n        sum += dot(dir, pos);\n    }\n    \n    // Add pulsating effect\n    sum += sin(time * 4.0 + radius * 10.0) * 0.5;\n    \n    // Apply noise texture for dynamic variation\n    vec2 noiseScale = st * 0.1;\n    float noiseVal = noise(noiseScale);\n    sum = mix(sum, sum + noiseVal * 0.3, 0.5);\n    \n    // Color transformation with pulsating HSL values\n    vec3 hslColor = vec3(120.0/360.0, 0.7, 0.5 + sin(time) * 0.4);\n    color = hsl2rgb(hslColor);\n    \n    return vec4(color * sum * 0.5 + 0.5, 1.0);\n}"
}