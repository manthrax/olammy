{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 centeredUV = uv * 2.0 - 1.0;\n    float theta = atan2(centeredUV.y, centeredUV.x);\n    float r = length(centeredUV);\n    \n    // Add time-based rotation\n    theta += iTime * 0.5;\n    \n    // Create multiple rings with different colors\n    float ringIndex = sin((theta + iTime) / 3.0 + r) * 10.0;\n    ringIndex = mod(ringIndex, 2.0 * PI);\n    \n    // Use HSL to RGB conversion for smooth color transitions\n    vec3 color = hsl2rgb(vec3(\n        fract(ringIndex / (2.0 * PI)) * 360.0,\n        1.0,\n        0.5\n    ));\n    \n    // Add noise and turbulence effect\n    float noiseValue = noise(vec2(r * 10.0, theta));\n    color *= sin(r * 10.0 + iTime) * 0.5 + 0.5;\n    color += noiseValue * 0.3;\n    \n    return vec4(color, 1.0);\n}"
}