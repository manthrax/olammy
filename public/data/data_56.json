{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a polar coordinate system centered at the screen center\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Generate body segments using sine wave with noise modulation\n    float body = sin(theta * 4.0 + iTime) * turbulent(vec3(r * 0.5, theta, iTime * 0.1));\n    \n    // Create legs using rotated polar coordinates\n    vec2 legPos[8];\n    for(int i = 0; i < 8; i++) {\n        float rot = radians(45.0 * float(i));\n        mat2 rotMat = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n        legPos[i] = (st) * rotMat;\n    }\n    // Combine body and legs with noise\n    vec3 color = hsl2rgb(vec3(0.5 + 0.5 * turbulent(vec3(r, theta, iTime)), \n                              0.7 + 0.3 * turbulent(vec3(r*0.1, theta*0.1, iTime)),\n                              0.3 + 0.7 * turbulent(vec3(r*0.2, theta*0.2, iTime))));\n    // Add leg details\n    for(int i = 0; i < 8; i++) {\n        float legDist = length(legPos[i]) * 0.5;\n        float legAngle = atan2(legPos[i].y, legPos[i].x);\n        float claw = sin(legAngle * 4.0 + iTime) * turbulent(vec3(legDist * 0.5, legAngle, iTime * 0.1));\n        \n        color += hsl2rgb(vec3(0.7 + 0.3 * turbulent(vec3(legDist, legAngle, iTime)),\n                              0.8 + 0.2 * turbulent(vec3(legDist*0.1, legAngle*0.1, iTime)),\n                              0.4 + 0.6 * turbulent(vec3(legDist*0.2, legAngle*0.2, iTime)))) * \n                 (1.0 - abs(claw)) * 0.5;\n    }\n    return vec4(color, 1.0);\n}"
}