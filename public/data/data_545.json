{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating triangle pattern\n    vec2 st = uv * 5.0; // Scale up for more cells\n    vec2 cell = floor(st);\n    vec2 pos = fract(st) * 2.0 - 1.0;\n    \n    // Rotate each cell based on time\n    float angle = iTime * 0.5 + cell.x * cell.y * 0.1;\n    mat2 rot = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 rotatedPos = rot * pos;\n    \n    // Create triangle pattern using barycentric coordinates\n    float d1 = abs(rotatedPos.x + rotatedPos.y);\n    float d2 = abs(rotatedPos.x - rotatedPos.y);\n    float d3 = abs(rotatedPos.x + rotatedPos.y - 1.0);\n    \n    // Add noise to create dynamic patterns\n    float noiseVal = turbulent(vec2(uv * 5.0)) * 0.5;\n    angle += noiseVal * 0.2;\n    \n    // Create vibrant color gradients using HSL\n    vec3 color = hsl(\n        mod(iTime * 0.1 + cell.x * 0.2, 1.0), // Hue variation over time and space\n        0.8 + noiseVal * 0.2, // Saturation with noise modulation\n        0.5 + rotatedPos.y * 0.3 // Lightness variation based on position\n    );\n    \n    // Combine patterns and colors for final effect\n    float pattern = min(d1, min(d2, d3)) * 0.5;\n    color *= smoothstep(0.0, 1.0, pattern + noiseVal);\n    \n    return vec4(hsl2rgb(color), 1.0);\n}"
}