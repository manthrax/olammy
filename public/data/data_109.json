{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a rotating pattern with time-based warping\n    vec2 translated = uv * 1.5 - 0.5;\n    \n    // Add time-based rotation\n    float angle = sin(iTime * 0.2) * 0.5 + 0.5;\n    vec2 rotated = vec2(\n        translated.x * cos(angle) - translated.y * sin(angle),\n        translated.x * sin(angle) + translated.y * cos(angle)\n    );\n    \n    // Convert to polar coordinates\n    vec2 polar = vec2(length(rotated), atan2(rotated.y, rotated.x));\n    \n    // Create warping effect using turbulence\n    float warp = (turbulent(polar * 10.0 + iTime) * 0.5 + 0.5) * 2.0;\n    polar.x += warp;\n    \n    // Convert back to cartesian coordinates with warping\n    vec2 warped = vec2(\n        cos(polar.y) * polar.x,\n        sin(polar.y) * polar.x\n    );\n    \n    // Create orbit trap effect\n    float distance = length(warped);\n    float angleMod = fract(polar.y / (pi * 2.0)) * 2.0 - 1.0;\n    \n    // Color based on position and time\n    vec3 color = hsl(\n        (polar.y / (pi * 2.0) + iTime * 0.1),\n        0.8,\n        0.5\n    );\n    \n    // Add pattern detail\n    float pattern = mod(distance * 4.0, 1.0);\n    pattern += noise(vec2(pattern, iTime)) * 0.3;\n    \n    color *= 1.0 - pattern;\n    \n    return vec4(color, 1.0);\n}"
}