{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates for rotation effect\n    vec2 st = uv * 2.0 - 1.0;\n    float radius = length(st);\n    float angle = atan2(st.y, st.x);\n    \n    // Add time-based rotation\n    angle += iTime * 0.5;\n    \n    // Create square pattern using polar coordinates\n    vec2 sq = vec2(\n        sin(angle) * radius,\n        cos(angle) * radius\n    );\n    \n    // Use noise to create dynamic color transitions\n    float noiseVal = noise(vec3(sq.x, sq.y, iTime));\n    \n    // Convert to HSL for easier color manipulation\n    vec3 hslColor = vec3(\n        fract(angle * 0.1 + iTime) * 360.0,\n        0.7 + noiseVal * 0.3,\n        0.5 + noiseVal * 0.5\n    );\n    \n    // Convert HSL to RGB and output\n    vec3 rgbColor = hsl2rgb(hslColor);\n    return vec4(rgbColor, 1.0);\n}"
}