{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal mapping\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    // Create hexagonal grid pattern using polar coordinates\n    float theta = a + iTime * 0.1;\n    float x = r * cos(theta) * 0.5;\n    float y = r * sin(theta) * 0.5;\n    // Add noise and turbulence to create organic movement\n    vec2 noisePos = vec2(x, y);\n    float n = noise(noisePos + iTime * 0.1);\n    float t = turbulent(noisePos * 4.0);\n    // Calculate particle intensity with pulsing effect\n    float intensity = sin(r * 5.0 + iTime) * 0.5 + 0.5;\n    intensity *= n * 2.0;\n    intensity += t * 0.3;\n    // Create color based on position and time\n    vec3 color = hsl(a / (2.0 * PI), 1.0, 0.5);\n    color = hsl2rgb(color);\n    // Add pulsing effect to color\n    color *= intensity;\n    color += sin(iTime + a) * 0.3;\n    // Apply radial falloff and return final color\n    float globalIntensity = sin(r * 10.0 - iTime * 2.0);\n    color *= (1.0 - r * 0.5);\n    return vec4(color, 1.0);\n}"
}