{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create hexagonal tiling pattern\n    vec2 q = uv * 5.0;\n    vec3 c = vec3(0.0);\n    \n    // Convert to polar coordinates for hexagonal mapping\n    float dist = length(q - 0.5);\n    float angle = atan2(q.y - 0.5, q.x - 0.5) + iTime * 0.1;\n    \n    // Create hexagonal grid pattern using sine and cosine functions\n    c += sin(vec3(1.0, 2.0, 3.0) * angle + vec3(0.0, 2.0, 4.0)) * 0.5 + 0.5;\n    \n    // Add noise and turbulence for dynamic effect\n    vec3 noiseVal = vec3(noise(vec3(q.x, q.y, iTime)),\n                         noise(vec3(q.y, q.x, iTime + 1.0)),\n                         noise(vec3(q.x * 2.0, q.y * 2.0, iTime + 2.0)));\n    c += turbulent(vec3(q.x, q.y, iTime)) * 0.5;\n    \n    // Convert to HSL and back to RGB for color shifting\n    vec3 hslColor = vec3(angle * 0.15 + sin(iTime) * 0.2,\n                         0.7,\n                         0.6 + noiseVal.x * 0.2);\n    c = hsl2rgb(hslColor);\n    \n    // Add animation by shifting RGB channels over time\n    vec3 rgbShift = vec3(sin(iTime), sin(iTime + 2.0), sin(iTime + 4.0)) * 0.3;\n    c += rgbShift;\n    \n    return vec4(c, 1.0);\n}"
}