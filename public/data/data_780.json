{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 finalColor = vec3(0.0);\n    \n    // Generate multiple orb centers with noise offset\n    for(float i = 0.0; i < 16.0; i++) {\n        for(float j = 0.0; j < 16.0; j++) {\n            vec2 center = vec2(i/16.0, j/16.0) + noise(vec3(i*0.5 + j*0.7 + iTime*0.1)) * 0.1;\n            \n            // Calculate distance from current pixel to orb center\n            float dist = length(uv - center);\n            \n            // Create pulsing radius with time offset\n            float radius = sin(iTime * 0.5 + i*0.2 + j*0.3) * 0.1 + 0.1;\n            \n            // Add color if within orb radius\n            if(dist < radius) {\n                // Dynamic color based on position and time\n                vec3 hslColor = vec3((uv.x + uv.y)*5.0 + iTime*2.0, \n                                   sin(iTime + dist * 10.0) * 0.5 + 0.5,\n                                   cos(dist * 10.0 + iTime * 2.0) * 0.5 + 0.5);\n                \n                // Add turbulence effect for interaction\n                float turb = turbulent(vec3(uv, iTime*0.1)) * 0.5;\n                hslColor.z += turb;\n                \n                finalColor += hsl2rgb(hslColor) * (radius - dist) / radius;\n            }\n        }\n    }\n    \n    return vec4(finalColor, 1.0);\n}"
}