{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    vec2 polar = uv * 2.0 - 1.0;\n    float angle = atan2(polar.y, polar.x) + iTime; // Add time offset for rotation\n    float radius = length(polar);\n    \n    // Create color wheel effect using HSL colors\n    vec3 hslColor;\n    hslColor.x = fract(angle / (2.0 * PI)); // Hue based on angle\n    hslColor.y = 0.7 + turbulent(uv * 4.0) * 0.3; // Saturation with some noise variation\n    hslColor.z = 0.5 + radius * 0.5; // Brightness increases towards edge\n    \n    // Add time-based color shifting\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Create a swirling pattern using turbulence\n    float swirl = turbulent(vec3(uv * 4.0, iTime * 0.1)) * 0.5 + 0.5;\n    rgbColor *= swirl;\n    \n    return vec4(rgbColor, 1.0);\n}"
}