{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Add time-based rotation\n    theta += iTime * 0.5;\n    // Create kaleidoscopic effect by repeating angles\n    theta = mod(theta, PI/3.0);  // Creates 6-pointed symmetry\n    \n    // Add turbulence to create dynamic patterns\n    float noise1 = turbulent(vec2(r*0.5 + iTime*0.2, theta));\n    float noise2 = turbulent(vec3(r*0.7 - iTime*0.3, theta, r*0.5));\n    // Create color transitions using HSL\n    vec3 color;\n    color.r = sin(theta * 4.0 + iTime) * 0.5 + 0.5;\n    color.g = cos(r * 2.0 - iTime) * 0.5 + 0.5;\n    color.b = noise1 * 0.5 + 0.5;\n    // Apply turbulence to color\n    color *= vec3(noise2 * 0.6 + 0.4);\n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(color), 1.0);\n}"
}