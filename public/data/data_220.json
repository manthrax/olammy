{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create base noise patterns with time offset\n    float n1 = turbulent(vec3(uv * 5.0 + iTime, iTime));\n    float n2 = turbulent(vec2(uv * 8.0 - iTime * 2.0));\n    \n    // Compute rotational RGB shifts\n    vec3 rgbShifts = sin(vec3(0.0, 2.0944, 4.1888) + iTime); // Phased sine waves for rotation\n    \n    // Create color variations using HSL conversion\n    vec3 colorA = hsl(n1 * 0.5 + 0.5, sin(iTime * 0.5) * 0.5 + 0.5, 0.7);\n    vec3 colorB = hsl((n2 * 0.5 + 0.5), sin(iTime * 0.5 + PI) * 0.5 + 0.5, 0.6);\n    \n    // Mix colors with noise patterns\n    vec3 finalColor = mix(colorA, colorB, abs(n1 * 0.5 + 0.5));\n    \n    // Apply rotational shifts to RGB channels\n    mat3 rotationMatrix = mat3(\n        cos(iTime), -sin(iTime), 0.0,\n        sin(iTime), cos(iTime), 0.0,\n        0.0, 0.0, 1.0\n    );\n    finalColor = finalColor * rotationMatrix;\n    \n    // Add noise modulation\n    float modulation = turbulent(vec3(uv * 2.0 + iTime, iTime)) * 0.5 + 0.5;\n    finalColor *= mix(1.0, modulation, 0.7);\n    \n    return vec4(finalColor, 1.0);\n}"
}