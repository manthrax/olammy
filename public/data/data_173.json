{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotational symmetry\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan(st.y, st.x);\n    float radius = length(st);\n    \n    // Create rotating pattern using time\n    float time = iTime * 0.5;\n    angle += time;\n    \n    // Add turbulence to create dynamic patterns\n    vec2 noiseUV = uv + vec2(time * 0.1);\n    float turb = turbulent(noiseUV * 4.0) * 0.5 + 0.5;\n    \n    // Create geometric pattern using sine waves\n    float pattern = sin(angle * 6.0 + time) * cos(radius * 8.0 - time) * 0.5 + 0.5;\n    pattern += turbulent(vec2(angle, radius)) * 0.3;\n    \n    // Mix colors with vibrant transitions\n    vec3 color1 = hsl2rgb(vec3(0.5 + sin(time) * 0.5, 1.0, 0.8));\n    vec3 color2 = hsl2rgb(vec3(0.5 + cos(time) * 0.5, 1.0, 0.6));\n    vec3 finalColor = mix(color1, color2, pattern);\n    \n    // Add noise for texture\n    finalColor += vec3(turb * 0.2);\n    \n    return vec4(finalColor, 1.0);\n}"
}