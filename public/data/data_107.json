{
  "src": "vec4 Effect2(vec2 uv) {\n    // Normalize UV coordinates to -1..1 range\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Convert to polar coordinates\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    \n    // Create orbit trap effect using multiple layers\n    vec3 color = vec3(0.0);\n    for(int i = 0; i < 4; i++) {\n        // Rotate and scale each layer\n        angle += iTime * 0.2;\n        radius *= 1.5;\n        \n        // Apply noise-based perturbation\n        vec2 pos = vec2(cos(angle), sin(angle)) * radius;\n        float n = noise(vec3(pos, iTime));\n        \n        // Create geometric trap pattern\n        float d = abs(length(pos) - 0.5);\n        float trap = smoothstep(0.1, 0.0, d);\n        \n        // Mix colors based on proximity to trap\n        color += mix(vec3(0.0), hsl2rgb(vec3(iTime + angle * 2.0, 1.0, 0.5)), trap);\n    }\n    \n    // Add turbulence effect\n    vec2 noisePos = uv * 4.0;\n    float turb = turbulent(noisePos) * 0.5 + 0.5;\n    color *= turb;\n    \n    return vec4(color, 1.0);\n}"
}