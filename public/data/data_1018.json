{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create circular pattern by converting UV coordinates to polar\n    vec2 st = uv - 0.5;\n    float radius = length(st);\n    float angle = atan2(st.y, st.x);\n    \n    // Animate the pattern over time\n    angle += iTime * 0.5;\n    \n    // Create sine wave patterns with different frequencies\n    float r1 = sin(radius * 3.0 + iTime) * 0.5 + 0.5;\n    float g1 = sin(angle * 5.0 + iTime * 2.0) * 0.5 + 0.5;\n    float b1 = sin((radius + angle) * 4.0 - iTime) * 0.5 + 0.5;\n    \n    // Add turbulence for dynamic variations\n    vec3 noise = vec3(turbulent(uv), turbulent(uv + 1.0), turbulent(uv + 2.0));\n    r1 += noise.x * 0.2;\n    g1 += noise.y * 0.2;\n    b1 += noise.z * 0.2;\n    \n    // Convert to HSL and back to RGB for vibrant colors\n    vec3 hslColor = vec3(\n        (r1 + g1 + b1) * 0.333,  // Hue\n        0.7,                      // Saturation\n        0.5                       // Lightness\n    );\n    \n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}