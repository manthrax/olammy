{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of squares\n    vec2 pos = floor(uv * 10.0) / 10.0;\n    \n    // Calculate rotation based on time and position\n    float time = iTime * 2.5;\n    vec2 center = pos + 0.05;\n    vec2 offset = uv - center;\n    \n    // Apply rotation matrix\n    float angle = time + dot(pos, vec2(100.0));\n    vec2 rotatedOffset = vec2(\n        offset.x * cos(angle) - offset.y * sin(angle),\n        offset.x * sin(angle) + offset.y * cos(angle)\n    );\n    \n    // Check if inside the square\n    float maxDist = max(abs(rotatedOffset.x), abs(rotatedOffset.y));\n    bool inside = maxDist < 0.05;\n    \n    // Create dynamic color transitions using HSL\n    vec3 baseColor = hsl2rgb(vec3(0.5 + 0.5 * sin(time + pos.x * 100.0), 1.0, 0.8));\n    \n    // Add turbulence effect\n    float turb = turbulent(pos * 5.0 + time);\n    vec3 finalColor = baseColor * (1.0 + turb * 0.5);\n    \n    if (!inside) {\n        finalColor = vec3(0.0);\n    }\n    \n    return vec4(finalColor, 1.0);\n}"
}