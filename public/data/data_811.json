{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation effect\n    float angle = atan2(uv.y, uv.x) + iTime;  // Add time for rotation\n    float radius = length(uv);\n    \n    // Create a base color using HSL with dynamic hue shifting\n    vec3 color = hsl(\n        sin(iTime * 0.5) * 0.5 + 0.5,  // Hue variation over time\n        0.7,                            // Saturation\n        radius * 0.5 + 0.5              // Lightness based on distance from center\n    );\n    \n    // Add turbulence for dynamic pattern variations\n    float scale = 4.0;\n    vec2 st = uv * scale;\n    float t1 = turbulent(st);\n    float t2 = turbulent(st * 2.0 + iTime);\n    float intensity = (t1 + t2) * 0.5;\n    \n    // Mix in noise texture for additional complexity\n    vec3 noiseTex = texture(iChannel0, uv * 8.0 + iTime).rgb;\n    color = mix(color, noiseTex, 0.3);\n    \n    // Combine all elements and convert to RGB\n    return vec4(hsl2rgb(color) * (1.0 + intensity * 0.5), 1.0);\n}"
}