{
  "src": "vec4 Effect2(vec2 uv) {\n    // Offset UV coordinates based on time\n    vec2 st = uv - 0.5;\n    \n    // Create rotation effect using sine and cosine of time\n    float angle = sin(iTime * 0.5);\n    float rotate_x = cos(angle) * st.x + (-sin(angle)) * st.y;\n    float rotate_y = sin(angle) * st.x + cos(angle) * st.y;\n    \n    // Scale coordinates for better pattern distribution\n    vec2 scaled_uv = vec2(rotate_x, rotate_y) * 4.0;\n    \n    // Add time-based offset to create movement\n    scaled_uv += vec2(sin(iTime), cos(iTime)) * 2.0;\n    \n    // Use turbulent noise to add complexity\n    float noise_val = turbulent(scaled_uv);\n    \n    // Create color transitions using HSL\n    vec3 hsl_color = vec3(\n        fract(noise_val + iTime) * 0.5,  // Hue variation over time\n        0.7,                              // Saturation\n        0.6                               // Lightness\n    );\n    \n    // Convert to RGB and output\n    return vec4(hsl2rgb(hsl_color), 1.0);\n}"
}