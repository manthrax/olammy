{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create hexagonal grid coordinates\n    vec2 st = uv * 5.0; // Scale up for more cells\n    \n    // Convert to polar coordinates\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    \n    // Create hexagonal pattern using sine and cosine at 60 degree intervals\n    float angleStep = pi / 3.0;\n    vec2 gridPos = vec2(\n        sin(theta + angleStep * 0.5) * r,\n        cos(theta - angleStep * 0.5) * r\n    );\n    \n    // Add noise and turbulence to create dynamic shifting effect\n    float noiseValue = noise(vec3(gridPos, iTime * 0.1));\n    gridPos += noiseValue * 0.2;\n    \n    // Calculate color based on position and time\n    vec3 hslColor = vec3(\n        fract(r * 0.2 + iTime) * 360.0,\n        0.7 + turbulent(vec2(gridPos)) * 0.3,\n        0.5 + sin(iTime) * 0.5\n    );\n    \n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}