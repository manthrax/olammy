{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of points with noise-based movement\n    vec2 grid = floor(uv * 10.0);\n    vec2 pos = (grid + noise(vec3(grid, iTime))) / 10.0;\n    \n    // Calculate distance from current fragment to grid point\n    float dist = length(uv - pos);\n    float glow = inversesqrt(dist * 5.0 + 0.1) * \n                (0.5 + 0.5 * sin(iTime + pos.x * 10.0));\n    \n    // Add turbulence for pulsing effect\n    float pulse = turbulent(vec3(pos, iTime * 0.2)) * 0.5 + 0.5;\n    glow *= pulse;\n    \n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        pos.x * 360.0 + iTime * 100.0,\n        0.7,\n        0.5 + 0.5 * sin(iTime + pos.y * 10.0)\n    );\n    vec3 color = hsl2rgb(hslColor);\n    \n    // Add connecting lines between nearby points\n    float lineStrength = 0.0;\n    for (int dx = -1; dx <= 1; dx++) {\n        for (int dy = -1; dy <= 1; dy++) {\n            if (dx == 0 && dy == 0) continue;\n            vec2 neighborPos = pos + vec2(dx, dy) * 0.1;\n            float lineDist = length(uv - mix(pos, neighborPos, 0.5));\n            lineStrength += inversesqrt(lineDist * 5.0 + 0.1);\n        }\n    }\n    \n    // Combine effects\n    vec3 finalColor = color * glow + \n                     vec3(1.0) * (lineStrength * 0.2);\n    \n    return vec4(finalColor, 1.0);\n}"
}