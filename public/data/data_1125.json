{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and shift UV coordinates over time\n    vec2 st = uv * 2.0 + iTime;\n    \n    // Create a noise-based offset for color shifting\n    float n1 = noise(st + vec2(0.0, 0.0));\n    float n2 = noise(st + vec2(1.0, 1.0) * 0.5);\n    \n    // Combine noise values with sine wave modulation\n    float hueShift = sin(iTime * 0.5) * 0.5 + 0.5;\n    float saturation = cos(iTime) * 0.5 + 0.7;\n    \n    // Create HSL color based on UV coordinates and time\n    vec3 hslColor = vec3(\n        (st.x * 0.5 + st.y * 0.5 + iTime) * 0.1,\n        saturation,\n        0.5 + n1 * 0.2\n    );\n    \n    // Convert HSL to RGB and add noise variation\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor += vec3(n1, n2, turbulent(st)) * 0.2;\n    \n    // Add time-based color shifting\n    rgbColor *= sin(uv.x * pi + iTime) * 0.5 + 0.5;\n    rgbColor = clamp(rgbColor, 0.0, 1.0);\n    \n    return vec4(rgbColor, 1.0);\n}"
}