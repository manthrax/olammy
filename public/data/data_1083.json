{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.5;\n    vec3 color = vec3(0.0);\n    \n    // Grid position calculation\n    vec2 gridPos = fract(uv * 20.0);\n    vec2 g = floor(gridPos);\n    \n    // Calculate rotation speed for each square using noise\n    float speed = noise(vec3(g, time)) * 0.5 + 0.5;\n    \n    // Calculate rotation angle\n    float angle = time * speed * 10.0;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    \n    // Apply rotation to grid position\n    vec2 rotatedUV = (uv - g) * rot + g;\n    \n    // Add perspective distortion\n    float z = sin(time + length(rotatedUV)) * 0.5 + 0.5;\n    color += vec3(z);\n    \n    // Color calculation using HSL to RGB conversion\n    vec3 hslColor = vec3(\n        fract(g.x * 0.1 + g.y * 0.2 + time),\n        0.5,\n        0.5\n    );\n    color *= hsl2rgb(hslColor);\n    \n    // Add turbulence effect for more complexity\n    float turb = turbulent(vec2(uv * 10.0));\n    color += vec3(turb) * 0.5;\n    \n    return vec4(color, 1.0);\n}"
}