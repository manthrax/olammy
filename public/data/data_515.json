{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation\n    float angle = atan2(uv.y, uv.x);\n    float radius = length(uv * 1.5); // Scale UV coordinates\n    \n    // Add time-based rotation\n    angle += iTime * 0.5;\n    \n    // Create square pattern using sine and cosine of angles\n    vec2 st = vec2(sin(angle), cos(angle)) * radius;\n    \n    // Add turbulence for dynamic movement\n    float turb = turbulent(st * 0.5 + iTime);\n    \n    // Calculate color components with time-based fading\n    vec3 color = hsl(\n        fract(turb * 0.5 + iTime) * 360.0, // Hue\n        0.7 + sin(iTime * 0.2) * 0.3,       // Saturation\n        0.5 + turb * 0.5                  // Lightness\n    );\n    \n    // Add depth perception using radius and noise\n    float depth = radius * (1.0 - turbulent(vec2(radius, iTime)));\n    color *= mix(0.8, 1.0, smoothstep(0.0, 1.0, depth));\n    \n    return vec4(hsl2rgb(color), 1.0);\n}"
}