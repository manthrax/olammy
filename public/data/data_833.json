{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal tiling\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan(st.y, st.x);\n    // Create hexagonal grid pattern using sin and cos functions\n    float grid = sin(a * 6.0) * 0.5 + 0.5;\n    grid *= noise(vec2(r * 10.0, a * 3.0)) * 0.5 + 0.5;\n    // Add animation using time-based movement\n    float timeFactor = sin(iTime * 0.5) * 0.5 + 0.5;\n    grid *= r * (timeFactor * 0.5 + 0.5);\n    // Create smooth color transitions using HSL to RGB conversion\n    vec3 hslColor = vec3(a * 0.1 + timeFactor, 0.7, 0.8);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    // Combine grid pattern with color and noise for final effect\n    float noiseValue = noise(vec3(r * 5.0, a * 2.0, iTime)) * 0.5 + 0.5;\n    vec3 finalColor = mix(grid * rgbColor, noiseValue * rgbColor, 0.5);\n    return vec4(finalColor, 1.0);\n}"
}