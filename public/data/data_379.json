{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate UV coordinates over time\n    float t = iTime * 0.5;\n    vec2 rotatedUV = vec2(\n        cos(t)*uv.x - sin(t)*uv.y,\n        sin(t)*uv.x + cos(t)*uv.y\n    );\n    \n    // Create triangular pattern using barycentric coordinates\n    vec3 coords = vec3(uv, 0.0);\n    coords.xy = abs(mod(coords.xy * 5.0, 1.0) - 0.5);\n    float dist = length(coords.xy);\n    \n    // Add noise and turbulence for dynamic effect\n    float noiseVal = noise(vec2(rotatedUV.x + t, rotatedUV.y));\n    float turb = turbulent(vec3(rotatedUV * 2.0 + vec2(t), 0.0)) * 0.5;\n    \n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        sin(turb + dist) * 0.5 + 0.5,\n        1.0 - abs(noiseVal),\n        0.6 + noiseVal * 0.2\n    );\n    \n    // Convert to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}