{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar\n    vec2 st = uv * 2.0 - 1.0;\n    float radius = length(st);\n    float angle = atan2(st.y, st.x) + iTime; // Add time for rotation\n    \n    // Create rotating geometric pattern\n    float shape = sin(angle * 6.0); // Hexagonal symmetry\n    shape *= cos(radius * 8.0 - iTime * 2.0);\n    \n    // Generate color transitions using HSL\n    vec3 baseColor = hsl(\n        mod(iTime * 0.5 + angle * 2.0, 1.0), // Hue variation over time and space\n        0.7, // Saturation\n        0.6 // Lightness\n    );\n    \n    // Add noise texture\n    vec2 noiseCoords = vec2(radius * 4.0, iTime);\n    float noiseValue = turbulent(noiseCoords) * 0.5 + 0.5;\n    vec3 noiseColor = hsl(\n        mod(iTime * 0.3 + radius * 2.0, 1.0), // Different hue variation\n        0.5,\n        noiseValue\n    );\n    \n    // Combine shapes and colors\n    float blendFactor = abs(shape) * 0.5 + 0.5;\n    vec3 finalColor = mix(baseColor, noiseColor, blendFactor);\n    \n    return vec4(finalColor, 1.0);\n}"
}