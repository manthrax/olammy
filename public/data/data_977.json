{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate coordinates based on time\n    float t = iTime * 0.5;\n    vec2 rotatedUv = vec2(\n        cos(t)*uv.x - sin(t)*uv.y,\n        sin(t)*uv.x + cos(t)*uv.y\n    );\n    \n    // Create square grid pattern\n    vec2 st = rotatedUv * 10.0;\n    vec2 ipos = floor(st);\n    vec2 fpos = fract(st);\n    \n    // Check if inside square\n    float square = step(0.5, min(fpos.x, fpos.y)) *\n                  step(0.5, max(fpos.x, fpos.y));\n    \n    // Calculate color based on position and time\n    vec3 color;\n    {\n        float hue = (ipos.x + ipos.y) * 0.1 + sin(t*2.0);\n        float sat = 0.7 + 0.3*sin(uv.x*5.0 + t*3.0);\n        float lig = 0.5 + 0.5*cos(uv.y*5.0 + t*4.0);\n        \n        color = hsl2rgb(vec3(hue, sat, lig));\n    }\n    \n    // Add noise effect\n    vec2 noisePos = rotatedUv * 5.0;\n    float n = noise(noisePos) * 0.1;\n    color *= 1.0 + n;\n    \n    // Create final output\n    return vec4(color * square, 1.0);\n}"
}