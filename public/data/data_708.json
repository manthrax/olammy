{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates centered at screen center\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Add time-based rotation\n    theta += iTime * 0.5;\n    // Create rotating geometric pattern using sine waves at different frequencies\n    float pattern = sin(theta * 4.0 + iTime) * 0.5 +\n                   sin(theta * 8.0 - iTime * 2.0) * 0.3 +\n                   sin(r * 16.0 + iTime) * 0.2;\n    // Add noise and turbulence for more dynamic effect\n    pattern += turbulent(vec2(st.x, st.y)) * 0.2;\n    pattern += turbulent(vec2(iTime, r)) * 0.15;\n    // Convert to HSL color space with time-based hue transition\n    vec3 hslColor = vec3(\n        fract(iTime * 0.1 + pattern) * 360.0,\n        0.7 + abs(sin(iTime * 0.2)) * 0.3,\n        0.5 + r * 0.4\n    );\n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}