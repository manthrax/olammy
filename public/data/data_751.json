{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float theta = atan2(st.y, st.x);\n    float r = length(st);\n    \n    // Create rotating pattern by adding time to angle\n    theta += iTime * 0.5;\n    \n    // Generate geometric patterns using sine and cosine functions\n    float pattern = sin(theta * 4.0) * cos(r * 10.0 + theta) +\n                   abs(sin(theta * 2.0)) * cos(r * 20.0);\n    \n    // Create color variations based on position\n    vec3 baseColor = hsl2rgb(vec3(\n        (theta / (2.0 * PI) + r * 0.5) * 360.0,   // Hue varies with angle and radius\n        0.7 + turbulent(vec3(uv * 10.0, iTime)) * 0.3,  // Saturation with turbulence\n        0.5));                                       // Lightness\n    \n    // Add noise texture for extra detail\n    vec2 noiseUV = uv * 4.0 + iTime;\n    float noiseValue = noise(noiseUV);\n    \n    // Combine patterns and colors\n    vec3 finalColor = mix(baseColor, \n                         hsl2rgb(vec3(\n                             (theta / PI) * 180.0,\n                             0.5,\n                             0.7)),\n                         abs(pattern * 0.5 + noiseValue * 0.5));\n    \n    return vec4(finalColor, 1.0);\n}"
}