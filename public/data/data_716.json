{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create center-relative coordinates\n    vec2 center = uv - 0.5;\n    \n    // Calculate distance from center for radial gradient\n    float dist = length(center * 0.7);\n    \n    // Add time-based pulsation using sine wave\n    float pulse = sin(iTime * 0.5) * 0.3 + 0.7;\n    \n    // Create swirling pattern using polar coordinates\n    vec2 polar = vec2(length(center), atan2(center.y, center.x));\n    \n    // Use noise and turbulence for dynamic color variations\n    float noiseVal = turbulent(uv * 10.0 + iTime);\n    \n    // Combine elements into HSL color space\n    vec3 hslColor = vec3(\n        (polar.y / pi + pulse) * 0.5,  // Hue\n        0.7 + noiseVal * 0.3,          // Saturation\n        dist * 0.6 + pulse * 0.4      // Lightness with pulsation\n    );\n    \n    // Convert to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}