{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create layered sine wave patterns with RGB transitions\n    float time = iTime * 0.5;\n    \n    // Layer 1: Red component with low frequency sine waves\n    float layer1 = sin(uv.x * 4.0 + time) + sin(uv.y * 4.0 + time * 2.0);\n    layer1 = (layer1 + 1.0) * 0.5; // Scale to 0-1 range\n    \n    // Layer 2: Green component with medium frequency sine waves\n    float layer2 = sin(uv.x * 5.0 + time * 3.0) + sin(uv.y * 5.0 + time);\n    layer2 = (layer2 + 1.0) * 0.5;\n    \n    // Layer 3: Blue component with high frequency sine waves\n    float layer3 = sin(uv.x * 6.0 + time * 2.0) + sin(uv.y * 6.0 + time * 4.0);\n    layer3 = (layer3 + 1.0) * 0.5;\n    \n    // Combine layers with noise modulation\n    float noiseMod = turbulent(vec2(uv.x * 2.0, uv.y * 2.0) + time) * 0.5 + 0.5;\n    \n    vec3 color = vec3(\n        layer1 * 0.3 + noiseMod * 0.7,\n        layer2 * 0.3 + noiseMod * 0.7,\n        layer3 * 0.3 + noiseMod * 0.7\n    );\n    \n    // Add RGB transitions over time\n    color += vec3(\n        sin(time) * 0.5,\n        sin(time * 1.2) * 0.5,\n        sin(time * 1.4) * 0.5\n    );\n    \n    // Ensure values stay within 0-1 range\n    color = clamp(color, 0.0, 1.0);\n    \n    return vec4(color, 1.0);\n}"
}