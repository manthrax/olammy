{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    \n    // Moving sine wave patterns with time-based animation\n    float speed = 0.5;\n    float phase = sin(iTime * speed + 1.0);\n    \n    // RGB color transitions using sine waves with varying amplitudes\n    float rWave = sin(uv.x * 4.0 + iTime * speed) * (0.5 + 0.5 * cos(iTime * 0.5));\n    float gWave = sin(uv.y * 4.0 + iTime * speed + phase) * (0.5 + 0.5 * sin(iTime * 0.7));\n    float bWave = sin((uv.x + uv.y) * 3.0 + iTime * speed - phase) * (0.5 + 0.5 * cos(iTime * 0.9));\n    \n    // Combine waves with noise for more dynamic patterns\n    vec2 noiseUV = uv * 10.0 + vec2(sin(iTime), cos(iTime)) * 4.0;\n    float noiseVal = turbulent(noiseUV);\n    \n    color.r += rWave * (0.5 + 0.5 * noiseVal);\n    color.g += gWave * (0.5 + 0.5 * noiseVal);\n    color.b += bWave * (0.5 + 0.5 * noiseVal);\n    \n    // Add turbulence to create more complex patterns\n    float turbulence = turbulent(uv * 4.0 + vec2(iTime));\n    color *= 1.0 + turbulence * 0.5;\n    \n    // Mix with original position for overlay effect\n    vec3 finalColor = mix(vec3(0.0), color, 0.7 + 0.3 * sin(iTime * 0.4));\n    \n    return vec4(finalColor, 1.0);\n}"
}