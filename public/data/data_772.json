{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    \n    // Add time-based rotation\n    angle += iTime * 0.5;\n    \n    // Create a noise field that changes over time\n    float noiseValue = noise(vec3(uv * 5.0 + vec2(0.0, iTime * 0.2), 0.0));\n    \n    // Use HSL color space for easier color manipulation\n    vec3 baseColor = hsl(angle * 0.1 + iTime, 0.7, 0.6);\n    \n    // Create geometric pattern using sine waves\n    float pattern = sin(angle * 5.0 + iTime) * radius;\n    pattern += sin(angle * 3.0 - iTime) * radius * 0.5;\n    \n    // Mix colors based on noise and pattern\n    vec3 finalColor = mix(baseColor, hsl(radius * 0.2 + iTime, 0.8, 0.5), abs(pattern * 0.5));\n    finalColor *= 1.0 + noiseValue * 0.5;\n    \n    // Add turbulence effect\n    float turb = turbulent(vec3(uv * 2.0, iTime * 0.1)) * 0.5 + 0.5;\n    finalColor = mix(finalColor, vec3(1.0), turb * 0.3);\n    \n    return vec4(finalColor * 1.2, 1.0);\n}"
}