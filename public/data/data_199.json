{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate UV coordinates over time\n    vec2 rotatedUV = vec2(\n        cos(iTime)*uv.x - sin(iTime)*uv.y,\n        sin(iTime)*uv.x + cos(iTime)*uv.y\n    );\n    \n    // Add noise and turbulence for dynamic patterns\n    float noiseValue = noise(rotatedUV * 10.0);\n    float turbulentValue = turbulent(rotatedUV * 5.0 + iTime);\n    \n    // Create radial gradient effect\n    vec2 center = uv - 0.5;\n    float radius = length(center) * 2.0;\n    \n    // Combine elements for color input\n    vec3 colorInput = vec3(\n        noiseValue * 0.5 + 0.5,\n        turbulentValue * 0.5 + 0.5,\n        radius * 0.5 + 0.5\n    );\n    \n    // Convert to RGB with shifting hues\n    vec3 hslColor = vec3(\n        colorInput.x + sin(iTime) * 0.5,\n        colorInput.y * 0.7,\n        colorInput.z * 0.6 + 0.4\n    );\n    \n    // Apply HSL to RGB conversion and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}