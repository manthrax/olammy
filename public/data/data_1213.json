{
  "src": "vec4 Effect2(vec2 uv) {\n    // Distort UV coordinates with time-based noise\n    vec2 distortedUV = uv * 5.0 + vec2(iTime * 3.0, iTime * 2.0);\n    distortedUV += noise(distortedUV.xy) * 0.5;\n    \n    // Create base color using HSL to RGB conversion\n    vec3 baseColor = hsl2rgb(vec3(\n        fract(iTime * 0.1 + uv.x * 2.0 + uv.y * 3.0) * pi,\n        0.6,\n        0.5 + noise(distortedUV.xy) * 0.4\n    ));\n    \n    // Add turbulent patterns\n    float turbulence = turbulent(vec3(uv * 10.0, iTime * 0.2));\n    vec3 detailColor = hsl2rgb(vec3(\n        fract(iTime * 0.2 + uv.y * 5.0) * pi,\n        0.7,\n        0.4 + turbulence * 0.6\n    ));\n    \n    // Mix colors based on noise and time\n    vec3 finalColor = mix(baseColor, detailColor, smoothstep(0.0, 1.0, turbulence));\n    finalColor += noise(vec3(uv * 20.0, iTime)) * 0.3; // Add more variation\n    \n    return vec4(finalColor, 1.0);\n}"
}