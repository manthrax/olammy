{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid pattern using UV coordinates\n    vec2 grid = fract(uv * 20.0);\n    \n    // Generate noise values for each cell in the grid\n    float noiseValue = sin(iTime + grid.x * pi) * sin(iTime + grid.y * pi);\n    \n    // Calculate base color based on position and time\n    vec3 baseColor = hsl2rgb(vec3(\n        (grid.x + grid.y + iTime / 2.0) * 0.5, \n        1.0,\n        0.5\n    ));\n    \n    // Add noise to create variations in color\n    float pattern = sin(iTime + uv.x * 10.0) * sin(iTime + uv.y * 10.0);\n    vec3 finalColor = mix(baseColor, hsl2rgb(vec3(\n        (grid.x + grid.y + iTime / 2.0) * 0.5,\n        1.0,\n        0.7 + pattern * 0.3\n    )), abs(sin(iTime)));\n    \n    // Add edge detection to create a more defined grid look\n    vec2 edges = min(fwidth(grid), 0.01);\n    finalColor = mix(finalColor, vec3(0.0), edges.x + edges.y);\n    \n    return vec4(finalColor, 1.0);\n}"
}