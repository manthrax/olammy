{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates centered at screen center\n    vec2 pos = uv - 0.5;\n    float angle = atan(pos.y, pos.x);\n    float radius = length(pos) * 3.0; // Scale radius for better vortex effect\n    \n    // Create swirling pattern by rotating coordinates based on distance from center\n    float timeRotation = iTime * 0.2;\n    vec2 rotatedPos = vec2(\n        cos(timeRotation + angle) * radius,\n        sin(timeRotation + angle) * radius\n    );\n    \n    // Generate dynamic color using HSL\n    vec3 hslColor = vec3(\n        mod(angle / (pi * 2.0) + iTime, 1.0), // Hue varies with angle and time\n        0.7 + turbulent(vec3(rotatedPos, iTime)) * 0.3, // Saturation with some turbulence\n        0.5 // Mid lightness\n    );\n    \n    // Add particle effect using noise\n    float particleNoise = noise(vec2(iTime * 0.1, rotatedPos.x * 0.1 + iTime));\n    vec3 particles = vec3(1.0) * (particleNoise > 0.98 ? 1.0 : 0.0);\n    \n    // Combine effects\n    vec3 finalColor = hsl2rgb(hslColor) * (1.0 - length(particles)) + particles;\n    \n    return vec4(finalColor, 1.0);\n}"
}