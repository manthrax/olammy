{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a flowing liquid metal effect with dynamic light reflections\n    \n    // Base noise for height map\n    float height = turbulent(uv * 5.0 + iTime * 0.1);\n    \n    // Moving light position\n    vec3 lightPos = vec3(sin(iTime * 0.5) * 2.0, cos(iTime * 0.5) * 2.0, 3.0);\n    \n    // Calculate normals from height map\n    float dx = dFdx(height);\n    float dy = dFdy(height);\n    vec3 normal = normalize(vec3(-dx, -dy, 1.0));\n    \n    // Light direction\n    vec3 lightDir = normalize(lightPos - vec3(uv * 2.0 - 1.0, height));\n    \n    // View direction (camera at origin looking along negative z)\n    vec3 viewDir = normalize(vec3(0.0, 0.0, -1.0));\n    \n    // Calculate reflection vector\n    vec3 reflectDir = reflect(-lightDir, normal);\n    \n    // Phong lighting components\n    float ambient = 0.2;\n    float diffuse = max(dot(normal, lightDir), 0.0);\n    float specular = pow(max(dot(viewDir, reflectDir), 0.0), 16.0) * 0.5;\n    \n    // Dynamic color based on height and time\n    vec3 baseColor = hsl2rgb(vec3(\n        (height + sin(iTime)) * 180.0,\n        0.7,\n        0.5\n    ));\n    \n    // Add emissive effect where light hits the surface\n    float emissive = max(dot(normal, lightDir), 0.0) * 2.0;\n    \n    // Combine all components\n    vec3 finalColor = baseColor * (ambient + diffuse) + \n                     mix(vec3(1.0), baseColor, 0.7) * specular +\n                     baseColor * emissive;\n    \n    return vec4(finalColor, 1.0);\n}"
}