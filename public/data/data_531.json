{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    float time = iTime * 0.5;\n    \n    // Create multiple circles with different properties\n    for (int i = 0; i < 4; i++) {\n        // Calculate circle center with pulsing effect\n        float angle = float(i) * pi * 0.5 + time;\n        vec2 center = vec2(sin(angle) * 0.3, cos(angle) * 0.3);\n        \n        // Calculate distance from current point to circle center\n        vec2 toCircle = uv - center;\n        float dist = length(toCircle);\n        \n        // Create pulsing radius with time offset\n        float radius = (sin(time + float(i)) * 0.4) + 0.5;\n        \n        // Check if inside the circle and accumulate color\n        if (dist < radius) {\n            // Calculate hue based on distance and time\n            float hue = dist * 3.0 + time * 2.0 + float(i) * 0.5;\n            \n            // Convert HSL to RGB and add to color\n            vec3 circleColor = hsl(hue, 1.0, 0.5);\n            color += circleColor * (1.0 - dist / radius) * 0.8;\n        }\n    }\n    \n    // Add some noise for extra detail\n    float noiseValue = noise(uv * 4.0 + time);\n    color += vec3(noiseValue * 0.2);\n    \n    return vec4(color, max(0.5, turbulent(uv * 2.0 + time)));\n}"
}