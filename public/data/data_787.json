{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert to polar coordinates for orbital movement\n    float theta = atan2(uv.y, uv.x);\n    float r = length(uv);\n    \n    // Add time-based rotation and scaling\n    theta += iTime * 0.1;\n    r *= sin(iTime * 0.5 + r) * 0.8 + 0.2;\n    \n    // Create multiple orbiting points with noise\n    vec3 color = vec3(0.0);\n    for (int i = 0; i < 5; i++) {\n        float timeOffset = iTime + float(i) * 0.6;\n        \n        // Calculate point position with noise\n        vec2 pointUv = vec2(\n            sin(theta + timeOffset * 0.3 + noise(vec3(r, timeOffset, 0.0))) * 0.5,\n            cos(theta - timeOffset * 0.4 + noise(vec3(r, timeOffset, 1.0))) * 0.5\n        );\n        \n        // Add RGB trails with color cycling\n        float dist = length(uv - pointUv);\n        vec3 hue = vec3(0.0);\n        if (dist < 0.2) {\n            hue = hsv2rgb(vec3(\n                mod(float(i) * 0.4, 1.0),\n                1.0,\n                1.0 - dist * 5.0\n            ));\n        }\n        \n        // Accumulate color with trail effect\n        color += hue * (1.0 - exp(-dist * 20.0));\n    }\n    \n    return vec4(color, 1.0);\n}"
}