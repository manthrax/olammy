{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of points\n    vec2 st = uv * 10.0;\n    vec2 ipos = floor(st);\n    \n    // Calculate rotation angle based on time and position\n    float timeRotation = iTime * 0.5;\n    float posRotation = length(ipos) * 0.2;\n    float totalRotation = timeRotation + posRotation;\n    \n    // Get sine and cosine of the rotation angle\n    vec2 rot = vec2(cos(totalRotation), sin(totalRotation));\n    \n    // Calculate distance from center with rotation applied\n    vec2 offset = st - ipos - 0.5;\n    vec2 rotatedOffset = vec2(offset.x * rot.x - offset.y * rot.y,\n                              offset.x * rot.y + offset.y * rot.x);\n    \n    // Create square pattern using distance field\n    float d = length(rotatedOffset) / max(abs(rotatedOffset.x), abs(rotatedOffset.y));\n    \n    // Generate dynamic color based on position and time\n    vec3 hslColor = vec3(0.5 + 0.5 * sin(iTime + ipos.x + ipos.y),\n                         0.7,\n                         0.8);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add noise to create variations\n    float noiseValue = noise(vec3(ipos, iTime)) * 0.5;\n    rgbColor *= 1.0 + noiseValue;\n    \n    // Mix colors based on distance from center\n    vec3 finalColor = mix(vec3(0.0), rgbColor, smoothstep(0.0, 1.0, d));\n    \n    return vec4(finalColor, 1.0);\n}"
}