{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    \n    // Layer 1: Rotating square pattern with noise\n    float time = iTime * 0.5;\n    vec2 st = uv * 2.0 - 1.0;\n    vec2 pos = vec2(sin(time) * 0.5, cos(time) * 0.5);\n    \n    // Additive blending of multiple rotating squares\n    for(float i = 0.0; i < 3.0; i++) {\n        float speed = i + 1.0;\n        float angle = time * speed + i * PI * 2.0 / 3.0;\n        \n        // Create rotation matrix\n        mat2 rot = mat2(cos(angle), -sin(angle),\n                        sin(angle), cos(angle));\n        \n        // Transform coordinates\n        vec2 rotated = rot * (st + pos);\n        \n        // Calculate square pattern with noise\n        float d = length(rotated) * 0.5;\n        float square = max(abs(rotated.x), abs(rotated.y)) * 0.5;\n        float pattern = square - d;\n        \n        // Add turbulence and color\n        vec3 hue = hsl(iTime + i, 1.0, 0.5);\n        vec3 col = hsl2rgb(hue) * (pattern + noise(vec3(rotated, time)) * 0.5);\n        \n        // Blend layers\n        color += mix(color, col, pattern * 0.4);\n    }\n    \n    // Final color with additive blending and clamp\n    color = min(color, vec3(1.0));\n    \n    return vec4(color, 1.0);\n}"
}