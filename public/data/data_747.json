{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 finalColor = vec3(0.0);\n    \n    // Calculate distance from center\n    float dist = length(uv - 0.5);\n    \n    // Create orbiting rings using noise and time\n    for(float i = 0.0; i < 5.0; i++) {\n        float ringRadius = 0.1 + i * 0.15;\n        float speed = 0.3 + i * 0.2;\n        \n        // Add some randomness to radius using noise\n        ringRadius += noise(vec2(iTime * 0.5, i)) * 0.05;\n        \n        // Calculate position of the ring center with orbiting motion\n        vec2 ringCenter = vec2(\n            sin(iTime * speed) * 0.3,\n            cos(iTime * speed) * 0.3\n        );\n        \n        // Calculate distance to current ring\n        float d = length(uv - (0.5 + ringCenter));\n        \n        // Create gradient fill using HSL colors\n        vec3 color = hsl2rgb(vec3(\n            fract(d * 4.0) * 360.0,\n            1.0,\n            0.5 + noise(vec2(iTime, d)) * 0.2\n        ));\n        \n        // Add specular highlights using dot product with light direction\n        vec2 lightDir = vec2(sin(iTime), cos(iTime));\n        float spec = pow(max(dot(uv - 0.5, lightDir), 0.0), 16.0);\n        color += vec3(spec * 0.5);\n        \n        // Add to final color based on proximity\n        float contribution = smoothstep(ringRadius + 0.02, ringRadius - 0.02, d);\n        finalColor += color * (1.0 - contribution);\n    }\n    \n    return vec4(finalColor, 1.0);\n}"
}