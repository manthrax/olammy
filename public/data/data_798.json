{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.5;\n    vec3 color = vec3(0.0);\n    \n    // Create rotating pattern\n    float angle = time * 0.1;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv = rot * uv;\n    \n    // Generate multiple lines with noise offset\n    const int numLines = 8;\n    for (int i = 0; i < numLines; i++) {\n        float theta = float(i) * pi * 2.0 / float(numLines);\n        vec2 dir = vec2(cos(theta), sin(theta));\n        \n        // Add noise to line position\n        float noiseOffset = noise(vec3(uv + time, time)) * 0.5;\n        vec2 linePos = uv + dir * noiseOffset;\n        \n        // Calculate distance from point to line\n        float dist = length(linePos - uv);\n        dist = smoothstep(0.1, 0.0, abs(dist));\n        \n        // Add pulsing color variation\n        vec3 hslColor = vec3((time + theta) * 2.0, 0.8, 0.5);\n        vec3 rgbColor = hsl2rgb(hslColor);\n        \n        // Combine distance and color\n        color += dist * rgbColor;\n    }\n    \n    // Add noise-based glow effect\n    float glow = turbulent(uv * 4.0 + time) * 0.5 + 0.5;\n    color *= glow;\n    \n    return vec4(color, 1.0);\n}"
}