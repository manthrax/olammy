{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    \n    // Base noise position\n    vec2 pos = uv * 5.0 + iTime;\n    float n = noise(pos);\n    \n    // Multiple layers of particles\n    for(float i = 1.0; i <= 4.0; i++) {\n        // Particle scale and position\n        float scale = pow(0.5, i);\n        vec2 st = uv * (i + 3.0) + iTime * scale;\n        \n        // Complex noise with time variation\n        vec3 noisePos = vec3(st.x, st.y, iTime * 0.1);\n        float t = turbulent(noisePos);\n        \n        // Color based on position and time\n        vec3 hue = hsl2rgb(vec3(\n            fract(iTime * 0.1 + t) * 0.6 + 0.2,\n            0.7 + sin(iTime * 0.5 + t) * 0.3,\n            0.8 + cos(iTime * 0.3 + t) * 0.2\n        ));\n        \n        // Particle shape and glow\n        float d = length(uv - vec2(0.5, 0.5)) * scale;\n        float glow = exp(-d * 4.0);\n        \n        // Additive blending\n        color += hue * glow * (1.0 + sin(iTime + t) * 0.5);\n    }\n    \n    // Final color correction and gamma\n    return vec4(pow(color, vec3(0.7)), 1.0);\n}"
}