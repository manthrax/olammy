{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    vec2 pos = uv - 0.5;\n    float r = length(pos);\n    float theta = atan2(pos.y, pos.x);\n    \n    // Create swirling pattern with time-based animation\n    theta += iTime * 10.0;\n    r *= 0.7; // Scale down for multiple layers\n    \n    // Add noise and turbulence to create complex patterns\n    vec3 noiseColor = hsl2rgb(vec3(\n        (theta + turbulent(pos * 5.0)) * 0.1,\n        0.8 + turbulent(pos * 4.0) * 0.2,\n        0.5 + turbulent(pos * 3.0) * 0.2\n    ));\n    \n    // Create fractal layers with iterative pattern\n    for(int i = 0; i < 5; i++) {\n        r = abs(r * 1.7 - 1.0);\n        theta += iTime * float(i+1);\n        \n        color += noiseColor * \n            (sin(theta + iTime) * 0.5 + 0.5) *\n            (turbulent(vec3(pos * float(i+1), iTime)) * 0.5 + 0.5);\n    }\n    \n    return vec4(color, 1.0);\n}"
}