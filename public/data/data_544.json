{
  "src": "vec4 Effect2(vec2 uv) {\n    // Base color with time-varying hue\n    vec3 baseColor = hsl2rgb(vec3(0.3 + 0.1*sin(iTime*0.5), 0.6, 0.8));\n    \n    // Create a noise-based pattern for trees and vines\n    float noiseScale = 0.1;\n    vec2 noisePos = uv * noiseScale + iTime * 0.1;\n    float mainNoise = noise(noisePos);\n    \n    // Add tree-like structures with varying sizes\n    float treeStrength = max(0.0, sin(iTime*0.7) * 0.5 + 0.5);\n    vec2 diskPos = uv - vec2(0.5, 0.5);\n    float disk = length(diskPos) * 1.5;\n    float trees = smoothstep(0.3, 0.8, sin(disk*4.0 + iTime)*treeStrength);\n    \n    // Add vine-like patterns\n    vec2 vinePos = uv - vec2(0.5, 0.5);\n    float vineAngle = atan2(vinePos.y, vinePos.x) * 3.0;\n    float vines = sin(vineAngle + iTime*0.5) * noiseScale;\n    \n    // Combine elements with color variations\n    vec3 finalColor = baseColor * (1.0 - trees);\n    finalColor += hsv2rgb(vec3(0.4, 0.8, 0.7)) * vines;\n    \n    // Add lighting effect from top\n    float lightIntensity = max(0.0, sin(iTime*0.5 + PI) * 0.5 + 0.5);\n    vec2 lightPos = uv - vec2(0.0, 0.3);\n    float lightDistance = length(lightPos) * 1.5;\n    float light = smoothstep(0.4, 0.8, sin(lightDistance*4.0 + iTime)*lightIntensity);\n    finalColor += hsv2rgb(vec3(0.1, 0.8, 0.9)) * light * 0.5;\n    \n    // Add some glowing elements\n    float glow = turbulent(vec3(uv*0.5, iTime*0.1)) * 0.5 + 0.5;\n    finalColor += baseColor * glow * 0.4;\n    \n    return vec4(finalColor, 1.0);\n}"
}