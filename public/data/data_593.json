{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of nodes with spacing based on UV coordinates\n    vec2 st = fract(uv * 10.0);\n    \n    // Calculate distance from cursor for interactivity\n    float dist = length(st - 0.5);\n    \n    // Time-based pulsing effect\n    float timePulse = sin(iTime * 0.5 + mod(gl_FragCoord.x, 100.0) * 0.1);\n    \n    // Node color based on distance and time\n    vec3 nodeColor = hsl2rgb(vec3(\n        fract(timePulse * 0.1 + dist * 2.0) * PI,\n        0.7 + turbulent(vec3(st, iTime)) * 0.3,\n        0.5 + sin(iTime * 0.2 + mod(gl_FragCoord.y, 100.0) * 0.1) * 0.5\n    ));\n    \n    // Add interactive response to cursor proximity\n    float interaction = smoothstep(0.4, 0.1, dist);\n    nodeColor *= 1.0 + interaction * 0.5;\n    \n    // Combine with turbulent noise for complex patterns\n    vec2 noiseUV = uv * 5.0 + iTime;\n    float turbulence = turbulent(noiseUV) * 0.5 + 0.5;\n    \n    // Final color combining node and turbulence effects\n    return vec4(mix(nodeColor, hsl2rgb(vec3(\n        fract(timePulse * 0.1 + dist * 2.0 + PI),\n        0.7,\n        0.5\n    )), turbulence), 1.0);\n}"
}