{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x) + iTime; // Add time for rotation\n    \n    // Create geometric pattern using sine waves with increasing frequency\n    float pattern = sin(a * 4.0 + iTime * 2.0) * cos(r * 8.0 - iTime);\n    \n    // Add noise and turbulence for more dynamic effect\n    vec3 noisePattern = vec3(\n        noise(vec3(uv * 10.0, iTime)),\n        turbulent(vec2(uv * 5.0 + iTime)),\n        sin(iTime)\n    );\n    \n    // Combine pattern with noise for color transitions\n    float mixValue = (pattern + 0.5) * 0.5 + 0.5;\n    vec3 color1 = hsl2rgb(vec3(0.0, 1.0, 0.5));\n    vec3 color2 = hsl2rgb(vec3(0.7, 1.0, 0.5));\n    vec3 finalColor = mix(color1, color2, mixValue) * noisePattern;\n    \n    // Create circular mask for geometric effect\n    float mask = smoothstep(0.8, 1.0, r);\n    finalColor *= mask;\n    \n    return vec4(finalColor, 1.0);\n}"
}