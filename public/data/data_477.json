{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal patterns\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    \n    // Add time-based rotation and pulsation\n    theta += iTime * 0.5;\n    float pulse = sin(iTime) * 0.5 + 0.5;\n    \n    // Create hexagonal tiling pattern using polar coordinates\n    float angleStep = pi / 3.0;\n    float rotatedAngle = mod(theta, angleStep);\n    float d = abs(cos(rotatedAngle)) * r;\n    \n    // Use noise and turbulence for dynamic patterns\n    vec2 noiseUV = uv + vec2(iTime * 0.1, iTime * 0.15);\n    float noiseVal = noise(noiseUV) * 0.5 + 0.5;\n    float turbulentVal = turbulent(vec3(uv, iTime)) * 0.5 + 0.5;\n    \n    // Create hexagon mask and color transitions\n    float hexMask = smoothstep(1.0 - pulse, 1.0 + pulse, d);\n    vec3 color = hsl2rgb(vec3(\n        sin(iTime) * 0.5 + 0.5,\n        noiseVal,\n        turbulentVal\n    ));\n    \n    // Apply pulsating colors and blend with background\n    vec3 finalColor = mix(vec3(0.1), color, hexMask);\n    \n    return vec4(finalColor, 1.0);\n}"
}