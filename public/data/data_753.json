{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal symmetry\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    // Add time-based rotation\n    theta += iTime * 0.5;\n    // Create hexagonal grid pattern using polar coordinates\n    vec2 tile = vec2(r, theta);\n    tile.y *= 6.0; // Multiply angle by 6 for hexagonal symmetry\n    tile.y = mod(tile.y + PI, 2.0 * PI) - PI;\n    \n    // Use turbulence to create pulsating effect\n    float t = turbulent(vec3(tile.x, tile.y, iTime)) * 0.5 + 0.5;\n    \n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        mod(theta * 0.1 + iTime * 0.2, 1.0), // Hue variation over time and space\n        0.7 + t * 0.3,                       // Saturation\n        0.5 + sin(iTime) * 0.4               // Lightness with pulsation\n    );\n    \n    // Convert HSL to RGB and apply smooth gradient\n    vec3 rgbColor = hsl2rgb(hslColor);\n    float glow = smoothstep(0.8, 1.0, t); // Create smooth glow effect\n    \n    // Combine colors and glow for final output\n    return vec4(rgbColor * (1.0 - glow) + vec3(0.9, 0.9, 1.0) * glow, 1.0);\n}"
}