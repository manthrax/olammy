{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate UV coordinates over time\n    vec2 center = uv - 0.5;\n    float angle = sin(iTime * 0.5) * pi;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    vec2 rotated_uv = rot * center + 0.5;\n    // Checkerboard pattern with dynamic color cycling\n    vec2 scaled_uv = rotated_uv * 10.0;\n    vec2 cell = floor(scaled_uv);\n    float sum_xy = cell.x + cell.y;\n    \n    // Dynamic RGB shifts based on time and position\n    vec3 color_even = vec3(\n        sin(iTime + sum_xy) * 0.5 + 0.5,\n        sin(iTime + sum_xy + 2.0) * 0.5 + 0.5,\n        sin(iTime + sum_xy + 4.0) * 0.5 + 0.5\n    );\n    \n    vec3 color_odd = vec3(\n        sin(iTime + sum_xy + 1.0) * 0.5 + 0.5,\n        sin(iTime + sum_xy + 3.0) * 0.5 + 0.5,\n        sin(iTime + sum_xy + 5.0) * 0.5 + 0.5\n    );\n    \n    // Combine colors based on checkerboard pattern\n    float is_even = mod(sum_xy, 2.0);\n    vec3 final_color = mix(color_odd, color_even, is_even);\n    return vec4(final_color, 1.0);\n}"
}