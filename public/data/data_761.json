{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    vec2 pos = uv * 2.0 - 1.0;\n    float r = length(pos);\n    float a = atan(pos.y, pos.x);\n    // Create hexagonal lattice pattern\n    a += iTime * 0.5; // Rotate over time\n    float sa = sin(a + iTime * 0.2);\n    float ca = cos(a + iTime * 0.2);\n    \n    // Hexagon tiling\n    vec2 q = vec2(\n        (pos.x * ca - pos.y * sa) / r,\n        (pos.x * sa + pos.y * ca) / r\n    );\n    \n    // Create hexagonal grid pattern\n    float d = length(q * 0.5 + fract(q * 0.5 + 0.5));\n    \n    // Animate color and radius\n    float time = iTime * 0.2;\n    vec3 color1 = hsl(0.6, 0.8, 0.4); // Deep indigo\n    vec3 color2 = hsl(0.1, 0.8, 0.6); // Fiery orange\n    \n    // Mix colors based on position and time\n    float mixAmount = (sin(r * 5.0 + time) + 1.0) * 0.5;\n    vec3 color = mix(color1, color2, mixAmount);\n    \n    // Add turbulence effect\n    float noiseVal = turbulent(vec3(q.x * 5.0, q.y * 5.0, iTime));\n    d += noiseVal * 0.2;\n    \n    // Create final pattern\n    float pattern = smoothstep(0.4, 0.6, abs(d - 0.5)) * 2.0 - 1.0;\n    pattern = sin(pattern * pi + time) * 0.5 + 0.5;\n    \n    // Output color with alpha\n    return vec4(color * pattern, 1.0);\n}"
}