{
  "src": "vec4 Effect2(vec2 uv) {\n    // Combine UV coordinates with time using sine and cosine functions\n    float a = sin(uv.x * 10.0 + iTime) + cos(uv.y * 5.0 - iTime);\n    float b = cos(uv.x * 5.0 - iTime) + sin(uv.y * 10.0 + iTime);\n    \n    // Add noise to create more complex patterns\n    vec2 noiseUV = uv * 5.0 + vec2(iTime, iTime * 0.5);\n    float n = noise(noiseUV);\n    \n    // Create a turbulent value that will influence the color pattern\n    float turb = turbulent(uv * 10.0 + vec2(iTime, iTime));\n    \n    // Generate HSL color based on combined values\n    vec3 hslColor;\n    hslColor.x = (a + b + n) * 0.5 + 0.5; // Hue between 0 and 1\n    hslColor.y = abs(sin(iTime * 0.2) * 0.5 + 0.5); // Saturation variation over time\n    hslColor.z = turb * 0.5 + 0.5; // Lightness based on turbulence\n    \n    // Convert HSL to RGB and return as fragment color\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}