{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    float a = atan2(uv.y, uv.x);\n    float r = length(uv * 1.5); // Scale radius for better ring spacing\n    \n    // Add time-based rotation\n    a += iTime * 0.2;\n    \n    // Create orbiting rings using sine waves with different frequencies\n    float ring1 = sin(a * 4.0 + iTime) * 0.5 + 0.5;\n    float ring2 = sin(a * 6.0 + iTime * 0.7) * 0.5 + 0.5;\n    \n    // Combine rings with different radii\n    float ringPattern = ring1 * (r * 0.8) + ring2 * (r * 0.4);\n    \n    // Add chromatic aberration by offsetting colors\n    vec3 color;\n    color.r = sin(ringPattern * pi + a * 0.5) * 0.5 + 0.5;\n    color.g = sin(ringPattern * pi + a * 0.4) * 0.5 + 0.5;\n    color.b = sin(ringPattern * pi + a * 0.3) * 0.5 + 0.5;\n    \n    // Add noise for texture\n    vec2 noiseUV = uv * 10.0 + iTime;\n    float n = noise(noiseUV);\n    color += n * 0.2;\n    \n    return vec4(color, 1.0);\n}"
}