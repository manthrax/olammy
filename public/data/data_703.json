{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate coordinates over time\n    float angle = iTime * 0.5;\n    vec2 rotatedUV = vec2(\n        uv.x * cos(angle) - uv.y * sin(angle),\n        uv.x * sin(angle) + uv.y * cos(angle)\n    );\n    // Create hexagonal grid pattern\n    vec2 grid = rotatedUV * 10.0; // Scale up for more cells\n    vec2 hexCoords = fract(grid);\n    \n    // Calculate distance to center of hexagon\n    float dist = length(hexCoords - 0.5);\n    \n    // Use HSV color with time-varying hue\n    vec3 hsvColor;\n    hsvColor.x = (length(rotatedUV) + iTime * 0.2) * 0.6; // Hue varies with position and time\n    hsvColor.y = 1.0; // Full saturation for vibrant colors\n    hsvColor.z = 1.0 - dist * 2.0; // Brightness decreases with distance from center\n    \n    // Convert to RGB and apply turbulence effect\n    vec3 rgbColor = hsv2rgb(hsvColor);\n    float turb = turbulent(vec3(rotatedUV, iTime * 0.1)) * 0.5 + 0.5;\n    \n    // Final color with dynamic shifts\n    return vec4(rgbColor * (1.0 + turb * 0.5), 1.0);\n}"
}