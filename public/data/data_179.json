{
  "src": "vec4 Effect2(vec2 uv) {\n    float time = iTime * 0.1;\n    \n    // Time-based scaling and noise influence\n    vec2 scale = vec2(5.0 + sin(time * 0.5), 6.0 + cos(time * 0.3));\n    vec2 warpedUv = uv * scale.x + noise(uv * scale.y);\n    \n    // Calculate light position in an orbiting pattern\n    float lightAngle = time * 4.0;\n    vec2 lightPos = vec2(sin(lightAngle), cos(lightAngle)) * 5.0;\n    \n    // Distance from current point to light source\n    float dist = length(warpedUv - lightPos);\n    \n    // Hue based on distance, with smooth transition\n    float hue = dist * 0.1 + time * 0.2;\n    \n    // Create color using HSV and convert to RGB\n    vec3 colorHsv = vec3(hue, 0.7, 0.8);\n    vec3 finalColor = hsv2rgb(colorHsv);\n    \n    return vec4(finalColor, 1.0);\n}"
}