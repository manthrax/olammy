{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float radius = length(st);\n    float angle = atan2(st.y, st.x);\n    \n    // Create rotating sine wave pattern\n    float time = iTime * 0.5;\n    radius *= 0.75;\n    angle += time;\n    \n    // Add multiple frequency components for complexity\n    float wave1 = sin(radius * 4.0 + angle * 2.0);\n    float wave2 = sin(radius * 8.0 + angle * 3.0 + time * 2.0);\n    float wave3 = sin(radius * 16.0 + angle * 5.0 + time * 3.0);\n    \n    // Combine waves and add turbulence\n    float intensity = (wave1 + wave2 + wave3) * 0.3;\n    intensity += turbulent(vec2(st.x, st.y) * 4.0 + time);\n    \n    // Create dynamic color transitions using HSL\n    vec3 hslColor = vec3(\n        fract(time * 0.25),\n        0.7,\n        0.5 + intensity * 0.5\n    );\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Combine color with turbulence for final effect\n    float noiseValue = noise(vec3(st.x, st.y, time)) * 0.5;\n    vec3 finalColor = mix(rgbColor, vec3(1.0), noiseValue);\n    \n    return vec4(finalColor, 1.0);\n}"
}