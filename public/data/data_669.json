{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    vec2 uv_centered = uv - 0.5;\n    float radius = length(uv_centered);\n    float angle = atan2(uv_centered.y, uv_centered.x);\n    // Create concentric circles pattern using radius\n    float circlePattern = sin(radius * 10.0 + iTime) * 0.5 + 0.5;\n    \n    // Add some noise and turbulence to create interesting patterns\n    vec2 noiseScale = uv * 400.0;\n    float noiseValue = noise(noiseScale);\n    circlePattern += noiseValue * 0.3;\n    // Create color transitions from red to blue using HSL\n    float hue = (radius * 0.6) + mod(iTime * 0.1, 1.0); // Shift hues over time\n    vec3 hslColor = vec3(hue, 1.0, 0.5);\n    \n    // Convert to RGB and mix with noise pattern\n    vec3 rgbColor = hsl2rgb(hslColor);\n    vec3 finalColor = rgbColor * circlePattern;\n    // Add some angular variation for more dynamic effect\n    float angleFactor = sin(angle + iTime) * 0.3;\n    finalColor += angleFactor;\n    return vec4(finalColor, 1.0);\n}"
}