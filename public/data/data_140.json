{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    \n    // Add time-based rotation\n    theta += iTime * 0.5;\n    \n    // Create geometric pattern using polar coordinates\n    float pattern = sin(theta * 6.0) * cos(r * 10.0 + iTime);\n    pattern = abs(pattern);\n    \n    // Mix in noise for added complexity\n    float noiseScale = r * 20.0;\n    float noiseValue = noise(vec2(noiseScale, theta));\n    pattern = mix(pattern, noiseValue, 0.5);\n    \n    // Create dynamic color shifts using HSL\n    vec3 hslColor = vec3(\n        fract(iTime * 0.1 + r * 0.5),  // Hue\n        0.7 + 0.3 * sin(r * 10.0 + iTime),  // Saturation\n        0.5 + 0.5 * pattern  // Lightness\n    );\n    \n    // Convert HSL to RGB and output\n    vec3 rgbColor = hsl2rgb(hslColor);\n    return vec4(rgbColor, 1.0);\n}"
}