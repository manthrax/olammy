{
  "src": "vec4 Effect2(vec2 uv) {\n    // Time-based rotation\n    float t = iTime * 0.5;\n    vec2 rot = vec2(cos(t), sin(t));\n    \n    // Create grid pattern with rotating squares\n    vec2 grid = floor(uv * 4.0);\n    vec2 cell = fract(uv * 4.0 - 0.5) * 2.0 - 1.0;\n    \n    // Apply rotation matrix to each square\n    vec2 rotated = vec2(\n        cell.x * rot.x - cell.y * rot.y,\n        cell.x * rot.y + cell.y * rot.x\n    );\n    \n    // Create square mask with color transitions\n    float dist = length(rotated);\n    float mask = 1.0 - smoothstep(0.4, 0.5, max(abs(rotated.x), abs(rotated.y)));\n    \n    // Color based on HSL with time variation\n    vec3 color = hsl2rgb(vec3(\n        (t + grid.x * 0.25) * 180.0,\n        0.7,\n        0.5 + 0.5 * sin(t + grid.y * 0.25)\n    ));\n    \n    // Add noise for extra variation\n    float noiseVal = noise(vec3(grid, t)) * 0.1;\n    color *= 1.0 + noiseVal;\n    \n    return vec4(color * mask, 1.0);\n}"
}