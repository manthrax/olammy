{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating pattern using polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan(st.y, st.x) + iTime * 0.5;\n    float radius = length(st);\n    \n    // Use sine waves with time-based phase shifts for RGB colors\n    vec3 color = vec3(\n        sin(angle + iTime) * 0.5 + 0.5,\n        sin(angle + iTime + 2.0 * PI / 3.0) * 0.5 + 0.5,\n        sin(angle + iTime + 4.0 * PI / 3.0) * 0.5 + 0.5\n    );\n    \n    // Add noise and turbulence for more dynamic patterns\n    vec2 noiseUV = uv * 10.0;\n    float n = noise(noiseUV);\n    color += n * 0.2;\n    \n    // Convert to HSL for better color control\n    vec3 hslColor = vec3(\n        angle * 0.5 + iTime * 0.1,\n        radius * 0.7 + 0.3,\n        0.5 + sin(iTime) * 0.2\n    );\n    \n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}