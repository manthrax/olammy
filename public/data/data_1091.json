{
  "src": "vec4 Effect2(vec2 uv) {\n    // Translate UV coordinates from 0-1 range to -1 to 1\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Convert to polar coordinates\n    float radius = length(st);\n    float angle = atan2(st.y, st.x) + iTime; // Add time for rotation\n    \n    // Create color transitions using HSL\n    vec3 color = hsl(angle * 0.5 + 0.1, 0.6, 0.5);\n    \n    // Add noise and turbulence effects\n    float noiseValue = turbulent(vec3(st.x, st.y, iTime * 0.2)) * 0.5 + 0.5;\n    color = mix(color, hsl(angle * 0.5 + 0.1 + noiseValue * 0.2, 0.8, 0.6), noiseValue);\n    \n    // Vary saturation based on radius\n    color = hsl2rgb(vec3(hsl2rgb(color).xy * (1.0 - radius * 0.5) + radius * 0.5, color.z));\n    \n    // Add time-based lightness variation\n    float timeFactor = sin(iTime * 0.5) * 0.2 + 0.5;\n    color *= timeFactor;\n    \n    return vec4(color, 1.0);\n}"
}