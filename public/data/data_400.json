{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates for hexagonal symmetry\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    // Create pulsating effect using time-based radius modulation\n    float pulse = sin(iTime * 0.5 + r * 4.0) * 0.5 + 0.5;\n    float radius = r * (1.0 + pulse * 0.3);\n    \n    // Generate hexagonal pattern using angle and radius\n    float hexPattern = abs(cos(a * 6.0)) * 0.5 + 0.5;\n    hexPattern *= smoothstep(0.7, 1.0, radius);\n    // Add noise for texture\n    vec2 noiseScale = vec2(4.0, 8.0);\n    float noiseValue = noise(st * noiseScale.x + iTime) * 0.3;\n    noiseValue += noise(st * noiseScale.y + iTime * 0.5) * 0.15;\n    // Create color transitions using HSL\n    vec3 hslColor = vec3((iTime * 0.2 + a * 0.5) * 0.6, 0.7, hexPattern * 0.8 + noiseValue * 0.2);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    // Combine all elements\n    return vec4(rgbColor * hexPattern, 1.0);\n}"
}