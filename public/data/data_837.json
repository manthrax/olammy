{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime * 0.5; // Add time-based rotation\n    \n    // Create geometric pattern using sine waves\n    float pattern = abs(sin(theta * 6.0)); // Hexagon pattern\n    pattern += abs(sin(theta * 3.0 + iTime)); // Add dynamic layer\n    \n    // Add noise layers for texture\n    vec2 noiseUV = uv * 100.0; // Scale up for fine noise\n    float noise1 = noise(noiseUV);\n    float noise2 = turbulent(vec3(uv * 50.0, iTime));\n    \n    // Combine pattern and noise with color transitions\n    vec3 color = hsl2rgb(vec3(\n        mod(theta * 0.1 + iTime, 1.0), // Hue variation over time\n        0.7, // Saturation\n        0.5 + 0.5 * (pattern + noise1 * 0.5 + noise2 * 0.3) // Brightness modulation\n    ));\n    \n    // Add radial falloff\n    color *= pow(r, 2.0);\n    \n    return vec4(color, 1.0);\n}"
}