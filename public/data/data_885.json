{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating patterns using polar coordinates\n    vec2 centered = uv - 0.5;\n    float radius = length(centered);\n    float angle = atan2(centered.y, centered.x) + iTime * 0.5;\n    \n    // Add noise and turbulence for dynamic effects\n    float n = noise(vec3(uv * 10.0, iTime));\n    float t = turbulent(vec2(radius * 10.0, angle * 10.0 + iTime));\n    \n    // Create geometric patterns with color shifts\n    vec3 baseColor = hsl(180.0, 1.0, 0.5); // Cyan base color\n    \n    // Combine shapes and colors\n    float pattern = sin(radius * 20.0 + iTime) * cos(angle * 4.0);\n    pattern += n * t;\n    \n    // Add geometric transformations\n    vec2 rotatedUV = vec2(\n        uv.x * cos(iTime) - uv.y * sin(iTime),\n        uv.x * sin(iTime) + uv.y * cos(iTime)\n    );\n    \n    // Create color shifts using HSL to RGB conversion\n    vec3 finalColor = hsl2rgb(vec3(\n        180.0 + sin(iTime * 0.5) * 90.0,\n        1.0 - abs(sin(iTime)),\n        0.5 + t * 0.2\n    ));\n    \n    // Mix patterns and colors\n    float shape = smoothstep(0.4, 0.6, radius);\n    shape += pattern * 0.3;\n    \n    finalColor *= mix(vec3(1.0), vec3(0.5), shape);\n    \n    return vec4(finalColor, 1.0);\n}"
}