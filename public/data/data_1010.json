{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a time-based animation parameter\n    float t = iTime * 0.5;\n    \n    // Generate animated sine wave patterns with varying frequencies\n    vec3 waves = vec3(\n        sin(uv.x * 8.0 + t) + sin(uv.y * 4.0 - t),\n        sin(uv.x * 6.0 - t*2.0) + sin(uv.y * 5.0 + t*1.5),\n        sin(uv.x * 7.0 + t*3.0) + sin(uv.y * 3.0 - t)\n    );\n    \n    // Add turbulent noise for extra detail\n    vec2 noiseUV = uv * 4.0;\n    float turbulence2D = turbulent(noiseUV);\n    float turbulence3D = turbulent(vec3(noiseUV, t));\n    \n    // Combine waves and noise with varying weights\n    float mixValue = (waves.x + waves.y + waves.z) * 0.3 + turbulence2D * 0.5 + turbulence3D * 0.2;\n    \n    // Create vibrant color transitions using HSL\n    vec3 hslColor = vec3(\n        mod(t * 0.1, 1.0),   // Hue cycling over time\n        0.8,                 // Saturation\n        0.5 + mixValue * 0.4 // Lightness modulation\n    );\n    \n    // Convert HSL to RGB and output\n    vec3 rgbColor = hsl2rgb(hslColor);\n    return vec4(rgbColor, 1.0);\n}"
}