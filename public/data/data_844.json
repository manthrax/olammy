{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    float theta = atan2(uv.y, uv.x);\n    float r = length(uv * 1.5); // Scale radius for better pattern spacing\n    \n    // Add time-based rotation\n    theta += iTime * 0.5;\n    \n    // Create rotating sine wave patterns\n    float pattern = sin(r * 8.0 + theta * 4.0) * 0.5 + 0.5;\n    pattern *= sin(theta * 2.0 + iTime); // Add color cycling\n    \n    // Generate RGB colors with phase shifts for cycling effect\n    vec3 color;\n    color.r = sin(pattern * 8.0 + iTime * 2.0) * 0.5 + 0.5;\n    color.g = sin(pattern * 8.0 + iTime * 1.5) * 0.5 + 0.5;\n    color.b = sin(pattern * 8.0 + iTime) * 0.5 + 0.5;\n    \n    // Add noise for dynamic variations\n    vec2 noiseUV = uv * 4.0 + iTime;\n    float noiseValue = noise(noiseUV);\n    color *= noiseValue * 0.5 + 0.5;\n    \n    return vec4(color, 1.0);\n}"
}