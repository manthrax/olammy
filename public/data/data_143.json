{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a rotating checkerboard pattern by combining grid positions with rotation matrices\n    vec2 st = uv * 10.0; // Scale up for more cells\n    \n    // Add turbulence to create dynamic variations in the pattern\n    float t = iTime * 0.5;\n    vec2 pos = floor(st + turbulent(uv * 3.0 + t));\n    \n    // Create rotation matrix with time-varying angle\n    float angle = sin(t) * pi * 2.0;\n    mat2 rotMatrix = mat2(cos(angle), -sin(angle),\n                         sin(angle), cos(angle));\n                         \n    // Apply rotation to each grid cell position\n    vec2 rotatedPos = (pos - 0.5) * rotMatrix + 0.5;\n    \n    // Calculate color based on checkerboard pattern and time-varying hues\n    float hue = rotatedPos.x * 0.5 + rotatedPos.y * 0.5 + sin(turbulent(vec3(uv, t)) * 2.0);\n    vec3 color = hsl2rgb(vec3(hue, 1.0, 0.5));\n    \n    // Add noise to create more dynamic variations\n    float noiseVal = noise(vec3(st.x, st.y, t)) * 0.5 + 0.5;\n    color *= noiseVal;\n    \n    return vec4(color, 1.0);\n}"
}