{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal symmetry\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    \n    // Create hexagonal pattern by multiplying angle by 6 (for six-fold symmetry)\n    angle *= 6.0;\n    \n    // Add time-based rotation\n    float timeRotation = iTime * 0.5;\n    angle += timeRotation;\n    \n    // Use turbulence to create varying rotation speeds based on position and time\n    vec3 noiseInput = vec3(uv * 10.0, iTime);\n    float speedVariation = turbulent(noiseInput) * 2.0 + 1.0;\n    angle *= speedVariation;\n    \n    // Create color variations using HSL to RGB conversion\n    vec3 hslColor = vec3(angle * 0.15, 0.7, 0.8);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add some radial variation to the colors\n    rgbColor *= radius * 0.5 + 0.5;\n    \n    return vec4(rgbColor, 1.0);\n}"
}