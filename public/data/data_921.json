{
  "src": "vec4 Effect2(vec2 uv) {\n    // Center the UV coordinates and scale them up\n    vec2 st = (uv - 0.5) * 4.0;\n    \n    // Add rotation based on time\n    float angle = sin(iTime * 0.5);\n    float cosA = cos(angle);\n    float sinA = sin(angle);\n    mat2 rotMatrix = mat2(cosA, -sinA, sinA, cosA);\n    vec2 rotatedSt = st * rotMatrix;\n    \n    // Create square and circle shapes\n    vec2 square = abs(rotatedSt);\n    float squareDist = min(square.x, square.y);\n    float circleDist = length(rotatedSt);\n    \n    // Combine shapes with some parameters\n    float shape = 0.5 * squareDist + 0.5 * circleDist;\n    shape = smoothstep(0.0, 1.0, 1.0 - shape);\n    \n    // Create animated color transitions using HSL\n    vec3 hslColor = vec3(\n        fract(sin(iTime) * 0.5 + 0.5) * 360.0,\n        0.7,\n        0.8\n    );\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add noise and turbulence for dynamic effect\n    float noiseValue = noise(vec3(uv * 10.0, iTime));\n    float turbulentValue = turbulent(vec3(uv * 5.0, iTime));\n    \n    // Combine all elements for final color\n    vec3 finalColor = mix(\n        rgbColor,\n        vec3(0.0),\n        shape + noiseValue * 0.2 + turbulentValue * 0.1\n    );\n    \n    return vec4(finalColor, 1.0);\n}"
}