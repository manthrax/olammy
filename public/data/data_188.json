{
  "src": "vec4 Effect2(vec2 uv) {\n    vec2 st = uv;\n    \n    // Convert to polar coordinates\n    float d = length(st);\n    float a = atan2(st.y, st.x) - PI/2.0;\n    a = mod(a + 2.0 * PI, 2.0 * PI); // Angle from right direction\n    \n    // Generate ray positions with time offset\n    float rayCount = 16.0;\n    float rayAngle = sin(a * rayCount + iTime * 4.0) * 0.5;\n    \n    // Add noise displacement to rays for organic movement\n    vec2 noisePos = (st * 100.0 + iTime * 0.3) * 0.1;\n    float noiseVal = noise(noisePos);\n    rayAngle += noiseVal;\n    \n    // Calculate distance from current fragment to nearest ray\n    float dRay = abs(d - rayAngle);\n    \n    // Color transformation based on time and position\n    vec3 baseColor = hsl2rgb(vec3(0.5, 0.5, sin(iTime * 0.8 + a * 0.4) * 0.5 + 0.5));\n    \n    // Apply Gaussian falloff for glow effect\n    float glow = exp(-dRay * dRay * 0.1);\n    \n    // Combine color and glow with alpha\n    return vec4(baseColor * glow, glow);\n}"
}