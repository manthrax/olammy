{
  "src": "vec4 Effect2(vec2 uv) {\n    // Rotate coordinates by 30 degrees for hexagonal alignment\n    float theta = atan2(uv.y, uv.x);\n    vec2 rotatedUv = vec2(\n        cos(theta + pi/6.0) * length(uv),\n        sin(theta + pi/6.0) * length(uv)\n    );\n    // Scale and grid transformation for hexagonal tiling\n    const float scale = 5.0;\n    vec2 gridCoords = rotatedUv * scale;\n    \n    // Calculate cell indices\n    vec2 cell = floor(gridCoords);\n    \n    // Smooth color transitions using HSL\n    float hue = (iTime + cell.x * 0.1) * 0.1;\n    vec3 hslColor = vec3(hue, 0.7, 0.5);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add noise for dynamic variations\n    float noiseValue = noise(vec3(cell.x, cell.y, iTime * 0.1));\n    rgbColor *= 1.0 + noiseValue * 0.3;\n    \n    return vec4(rgbColor, 1.0);\n}"
}