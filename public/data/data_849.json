{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating pattern with time-based rotation\n    vec2 st = uv;\n    float time = iTime * 0.5;  // Scale time for slower animation\n    \n    // Rotate coordinates around center\n    vec2 center = vec2(0.5, 0.5);\n    st -= center;\n    float angle = sin(time) * 4.0;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    st = rot * st + center;\n    \n    // Add scaling for expanding/contracting effect\n    vec2 p = (st - 0.5) * 3.0;  // Scale coordinates\n    p *= 1.0 + 0.5 * sin(time);  // Time-based scaling\n    \n    // Create turbulence pattern with multiple frequencies\n    float t1 = turbulent(p);\n    float t2 = turbulent(p * 2.0 + time);\n    float t3 = turbulent(p * 4.0 - time);\n    \n    // Combine turbulence layers\n    float noiseValue = (t1 + t2 * 0.5 + t3 * 0.25) * 0.5 + 0.5;\n    \n    // Create flowing color pattern\n    vec3 color = hsl2rgb(vec3(\n        noiseValue * 360.0,  // Hue variation based on noise\n        0.7 + 0.3 * sin(time),  // Saturation modulation\n        0.5 + 0.5 * noiseValue  // Brightness variation\n    ));\n    \n    // Add radial motion from center\n    vec2 dir = st - center;\n    float dist = length(dir);\n    color *= 1.0 + 0.3 * sin(time + dist * 4.0);\n    \n    return vec4(color, 1.0);\n}"
}