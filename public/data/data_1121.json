{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates to range [-1, 1]\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Create time-based animation\n    float time = iTime * 0.5;\n    \n    // Generate sine wave patterns with varying frequencies\n    vec3 color = sin(vec3(st.x + time, st.y + time*0.7, 1.0)) * 0.5 + 0.5;\n    \n    // Add noise and turbulence for more complex patterns\n    vec2 noiseUV = uv * 4.0 + time;\n    float noiseValue = noise(noiseUV);\n    \n    // Create color shifts using HSL conversion\n    vec3 hslColor = vec3(\n        sin(time + st.x * 5.0) * 0.5 + 0.5,  // Hue variation\n        1.0,                                   // Full saturation\n        0.5 + noiseValue * 0.2                // Modulate lightness with noise\n    );\n    \n    // Convert HSL to RGB and mix with original color\n    vec3 finalColor = hsl2rgb(hslColor) * (color + turbulent(vec2(st.x*10.0, st.y*10.0)));\n    \n    return vec4(finalColor, 1.0);\n}"
}