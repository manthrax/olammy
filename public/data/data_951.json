{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create rotating polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float radius = length(st);\n    float angle = atan2(st.y, st.x) + iTime * 0.5;\n    \n    // Animate the center point with noise\n    vec2 centerOffset = vec2(sin(iTime * 0.7) * 0.3, cos(iTime * 0.6) * 0.3);\n    vec2 animatedUV = uv + centerOffset;\n    \n    // Create layered noise patterns\n    float noise1 = noise(vec3(uv * 4.0 + iTime, 0.0));\n    float noise2 = turbulent(vec2(uv * 8.0 - iTime * 2.0)) * 0.5;\n    float noise3 = turbulent(vec2(uv * 16.0 + iTime)) * 0.25;\n    \n    // Combine noises with color transitions\n    vec3 colorBase = hsl2rgb(vec3(angle * 0.1, 0.7, 0.8));\n    vec3 colorNoise = hsl2rgb(vec3((noise1 + noise2 + noise3) * 0.5 + 0.5, 0.6, 0.7));\n    \n    // Mix colors based on radius and time\n    float mixAmount = sin(radius * pi + iTime) * 0.5 + 0.5;\n    vec3 finalColor = mix(colorBase, colorNoise, mixAmount);\n    \n    return vec4(finalColor, 1.0);\n}"
}