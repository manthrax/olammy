{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    float angle = atan2(uv.y, uv.x);\n    float radius = length(uv * 1.5); // Scale coordinates\n    \n    // Create pulsating effect using time and sine function\n    float pulse = sin(iTime + radius * 3.0) * 0.5 + 0.5;\n    \n    // Generate color transitions using HSL colors\n    vec3 hslColor = vec3(\n        iTime * 0.1 + radius * 0.2, // Hue variation over time and space\n        0.7,                        // Saturation\n        0.5                         // Lightness\n    );\n    \n    // Convert HSL to RGB\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add noise for dynamic texture\n    float noiseValue = noise(vec2(angle * 10.0, radius * 10.0)) * 0.5 + 0.5;\n    \n    // Create opacity based on distance and time\n    float opacity = pulse * (1.0 - radius * 0.3);\n    \n    // Combine color and noise for final effect\n    vec3 finalColor = rgbColor * (noiseValue * 0.8 + 0.2) * opacity;\n    \n    return vec4(finalColor, max(opacity, 0.0));\n}"
}