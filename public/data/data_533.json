{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x) + iTime; // Add time for rotation\n    \n    // Create orbiting shapes using sine waves with increasing frequency\n    float shape = sin(a * 4.0 + iTime * 2.0) * 0.5 + 0.5;\n    shape += sin(a * 8.0 - iTime * 3.0) * 0.3;\n    \n    // Add turbulence for dynamic variations\n    vec2 noiseUV = uv * 10.0 + iTime;\n    float turb = turbulent(noiseUV);\n    \n    // Combine shape and noise\n    float pattern = shape * (0.5 + turb * 0.5);\n    \n    // Create RGB shifts using HSL color space\n    vec3 hslColor = vec3(\n        fract(iTime * 0.2) * 360.0, // Hue variation over time\n        1.0 - abs(r - 0.5) * 2.0,   // Saturation based on distance from center\n        pattern                     // Lightness based on shape and noise\n    );\n    \n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}