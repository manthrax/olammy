{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a kaleidoscope effect by mirroring coordinates\n    vec2 st = uv * 5.0; // Scale up for more tiles\n    \n    // Add some rotation based on time\n    float angle = atan2(st.y, st.x);\n    angle += sin(iTime * 0.5) * 3.1416;\n    \n    // Convert back to cartesian coordinates\n    vec2 pos = vec2(\n        cos(angle) * length(st),\n        sin(angle) * length(st)\n    );\n    \n    // Apply turbulence for dynamic patterns\n    float turb = turbulent(pos * 0.5 + iTime);\n    \n    // Mirror coordinates multiple times\n    st.x = mod(abs(st.x), 1.0);\n    st.y = mod(abs(st.y), 1.0);\n    \n    // Create symmetry by reflecting across both axes\n    if (st.x > 0.5) st.x = 1.0 - st.x;\n    if (st.y > 0.5) st.y = 1.0 - st.y;\n    \n    // Add noise to create dynamic color variations\n    float n = noise(st * 4.0 + iTime);\n    vec3 col = hsl2rgb(vec3(\n        fract(iTime * 0.1 + pos.x),\n        0.7,\n        0.5 + 0.5 * sin(n * 3.1416)\n    ));\n    \n    // Mix colors based on turbulence\n    col *= vec3(0.5) + vec3(turb);\n    \n    return vec4(col, 1.0);\n}"
}