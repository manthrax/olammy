{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create time-varying polar coordinates\n    vec2 st = uv * 5.0; // Scale up for more detail\n    float theta = atan2(st.y, st.x) + iTime * 0.5;\n    float r = length(st);\n    \n    // Create fractal pattern using multiple layers of noise\n    float pattern1 = turbulent(vec3(st * 10.0, iTime)) * 0.5 + 0.5;\n    float pattern2 = turbulent(vec3(st * 20.0, iTime * 0.7)) * 0.5 + 0.5;\n    \n    // Combine patterns with color transitions\n    vec3 hsvColor;\n    hsvColor.x = theta * 0.1 + iTime * 0.1; // Hue variation over time and space\n    hsvColor.y = (pattern1 + pattern2) * 0.5; // Saturation based on noise\n    hsvColor.z = abs(sin(r * 0.5 - iTime)) * 0.5 + 0.5; // Value variation\n    \n    // Convert HSV to RGB and output\n    return vec4(hsv2rgb(hsvColor), 1.0);\n}"
}