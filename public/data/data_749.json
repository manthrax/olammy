{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of triangles using polar coordinates\n    vec2 st = uv * 10.0; // Scale up for more cells\n    vec2 ipos = floor(st); // Integer position\n    \n    // Add time-based animation\n    float t = iTime * 0.5;\n    \n    // Calculate angle and radius for polar transformation\n    vec2 pos = st - ipos;\n    float angle = atan(pos.y, pos.x) + t;\n    float radius = length(pos);\n    \n    // Create tessellation pattern using sine waves\n    float pattern = sin(angle * 3.0 + t) * cos(radius * 10.0);\n    \n    // Add noise and turbulence for shimmer effect\n    vec2 noisePos = ipos + 0.5;\n    float noiseVal = noise(noisePos * 0.1 + t);\n    pattern += turbulent(vec3(pos, t)) * 0.5;\n    \n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        fract(angle * 0.2 + t) * 360.0,\n        0.7 + sin(t * 2.0) * 0.3,\n        0.5 + pattern * 0.5\n    );\n    \n    // Convert to RGB and apply turbulence for shimmer\n    vec3 color = hsl2rgb(hslColor);\n    color *= 1.0 + turbulent(vec3(uv, t)) * 0.5;\n    \n    return vec4(color, 1.0);\n}"
}