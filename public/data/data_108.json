{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar space\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    // Create warp effect using noise and time\n    float warp = sin(r + iTime) * 0.5;\n    a += warp;\n    // Convert back to cartesian coordinates with warping\n    vec2 pos = vec2(cos(a), sin(a)) * r;\n    // Add turbulence based on position and time\n    float turb = turbulent(pos * 10.0 + iTime);\n    \n    // Create geometric orbit trap patterns\n    float d = length(pos);\n    d += mod(length(pos * 5.0), 1.0) * 0.2;\n    d += sin(d * 8.0) * 0.1;\n    // Calculate color based on distance to traps\n    vec3 color = hsl(\n        mod(r + iTime, 1.0),\n        0.5,\n        clamp(1.0 - d * 2.0, 0.0, 1.0)\n    );\n    return vec4(hsl2rgb(color), 1.0);\n}"
}