{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create central point\n    vec2 pos = uv * 2.0 - 1.0;\n    float r = length(pos);\n    float theta = atan(pos.y, pos.x);\n    \n    // Add noise and time variation\n    float noiseVal = turbulent(uv * 5.0 + iTime) * 0.3;\n    float timeScale = iTime * 0.2;\n    \n    // Create orbiting rings\n    vec3 color = hsl2rgb(vec3(0.0, 0.0, 0.1));\n    for(float i = 0.0; i < 5.0; i++) {\n        float orbitRadius = 0.2 + i * 0.15;\n        float angleOffset = timeScale + i * 0.3;\n        \n        // Calculate distance from current orbit\n        float dist = abs(r - orbitRadius);\n        if(dist < 0.03) {\n            // Add color variation to orbits\n            vec3 orbitColor = hsl2rgb(vec3((theta + angleOffset) * 0.1, 0.7, 0.4));\n            color += orbitColor * (1.0 - dist / 0.03);\n        }\n    }\n    \n    // Add central star glow\n    if(r < 0.1) {\n        float glow = smoothstep(0.05, 0.0, r);\n        color += vec3(1.0, 0.9, 0.7) * glow;\n    }\n    \n    // Add orbiting points (planets)\n    for(float i = 0.0; i < 4.0; i++) {\n        float angle = timeScale + i * 0.5;\n        vec2 planetPos = vec2(cos(angle), sin(angle)) * (0.2 + i * 0.15);\n        if(length(pos - planetPos) < 0.03) {\n            color += hsl2rgb(vec3(0.0, 0.8, 0.6));\n        }\n    }\n    \n    return vec4(color, 1.0);\n}"
}