{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates for hexagonal pattern\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x) + iTime; // Add time-based rotation\n    \n    // Create rotating hexagon pattern using sine wave with 6-fold symmetry\n    float d = sin(6.0 * (a + iTime * 0.5)) * 0.5 + 0.5;\n    float shape = smoothstep(0.4, 0.6, r) * d;\n    \n    // Create pulsating color using HSL\n    vec3 hslColor = vec3(a * 0.1, 0.7, 0.5 + 0.5 * sin(iTime * 0.5 + r * pi));\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add noise and turbulence for dynamic effect\n    vec2 noiseUV = uv * 4.0 + iTime;\n    float noiseVal = turbulent(noiseUV) * 0.5 + 0.5;\n    shape *= noiseVal;\n    \n    // Combine shape and color\n    vec3 finalColor = rgbColor * shape;\n    \n    return vec4(finalColor, 1.0);\n}"
}