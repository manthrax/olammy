{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates for pattern size\n    vec2 st = uv * 5.0;\n    \n    // Create noise-based pattern with time offset\n    float n1 = noise(st + iTime);\n    float t1 = turbulent(st + iTime*0.5);\n    \n    // Combine noise and turbulence\n    float pattern = (n1 + t1) * 0.5;\n    \n    // Convert to HSL color space\n    vec3 hslColor = vec3(\n        mod(pattern * 2.0, 1.0),   // Hue\n        0.7 + n1 * 0.3,           // Saturation\n        0.5 + t1 * 0.5            // Lightness\n    );\n    \n    // Convert HSL to RGB and add overlay effect\n    vec3 rgbColor = hsl2rgb(hslColor);\n    vec3 overlay = hsv2rgb(vec3(\n        mod(pattern * 3.0, 1.0),   // Hue\n        0.5 + n1 * 0.5,           // Saturation\n        0.7 + t1 * 0.3            // Value\n    ));\n    \n    // Combine colors and return final output\n    vec3 finalColor = rgbColor + overlay * 0.5;\n    return vec4(finalColor, 1.0);\n}"
}