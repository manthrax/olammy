{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x);\n    \n    // Add time-based rotation\n    theta += iTime * 0.5 + turbulent(vec3(uv * 10.0, iTime)) * 0.2;\n    \n    // Create geometric pattern using trigonometric functions\n    float pattern = sin(theta * 6.0) * cos(r * 8.0 - iTime * 2.0);\n    pattern += sin(theta * 3.0 + iTime) * cos(r * 4.0);\n    \n    // Add noise and turbulence for more dynamic effect\n    vec2 noiseUV = uv * 10.0 + iTime;\n    float noiseValue = noise(noiseUV);\n    pattern = mix(pattern, turbulent(vec2(uv * 5.0)), noiseValue * 0.5);\n    \n    // Convert to color using HSL to RGB conversion\n    vec3 color = hsl2rgb(vec3(\n        fract(iTime * 0.1 + theta * 0.2),\n        0.7,\n        0.5 + pattern * 0.4\n    ));\n    \n    return vec4(color, 1.0);\n}"
}