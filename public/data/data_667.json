{
  "src": "vec4 Effect2(vec2 uv) {\n    // Center the coordinates\n    vec2 centered = uv - 0.5;\n    \n    // Convert to polar coordinates\n    float radius = length(centered);\n    float angle = atan2(centered.y, centered.x);\n    \n    // Create a time-based rotation effect\n    angle += iTime * 0.5;\n    \n    // Add noise and turbulence\n    float noiseValue = noise(vec3(uv * 10.0 + iTime, 0.0)) * 0.5 + 0.5;\n    float turbulentValue = turbulent(vec2(angle * 10.0, radius * 10.0));\n    \n    // Create geometric pattern using sine waves\n    float pattern = sin(radius * 8.0 + iTime) * cos(angle * 4.0);\n    \n    // Combine patterns and add noise\n    float finalPattern = (pattern + turbulentValue) * 0.5 + noiseValue;\n    \n    // Convert to HSL and shift colors over time\n    vec3 hslColor = vec3(\n        fract(sin(angle + iTime) * 2.0),\n        abs(sin(radius * 4.0 + iTime)),\n        abs(cos(iTime))\n    );\n    \n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}