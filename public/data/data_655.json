{
  "src": "vec4 Effect2(vec2 uv) {\n    // Translate UV coordinates based on mouse position\n    vec2 st = (uv - 0.5) * 2.0;\n    \n    // Add time-based rotation\n    float t = iTime * 0.5;\n    float angle = atan(st.y, st.x);\n    angle += t; // Continuous rotation\n    \n    // Convert to polar coordinates\n    float r = length(st);\n    vec2 polar = vec2(r, angle);\n    \n    // Create swirling pattern with turbulence\n    float swirl = sin(polar.y * 5.0 + t) * cos(polar.x * 10.0);\n    float noiseVal = turbulent(vec3(st * 10.0, t));\n    \n    // Calculate color using HSL to RGB conversion\n    vec3 color;\n    color.r = 0.5 + sin(t + polar.y * 2.0) * 0.5;\n    color.g = 0.5 + cos(t + polar.y * 2.0) * 0.5;\n    color.b = 0.5 + sin(t + polar.x * 2.0) * 0.5;\n    \n    // Add noise and swirl effect\n    color *= 1.0 + noiseVal * 0.3;\n    color += vec3(swirl * 0.3);\n    \n    return vec4(color, 1.0);\n}"
}