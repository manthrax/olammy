{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale UV coordinates to create a grid of triangles\n    vec2 st = uv * 16.0;\n    \n    // Get cell position and offset within cell\n    vec2 ipos = floor(st);\n    vec2 pos = fract(st);\n    \n    // Calculate triangle check based on position\n    bool insideTriangle = (pos.x + pos.y) < 1.0;\n    \n    // Create color variations using HSL to HSV conversion\n    float hueBase = mod(iTime * 0.5 + ipos.x * 0.2 + ipos.y * 0.3, 1.0);\n    vec3 baseColor = hsl(hueBase, 0.7, 0.6);\n    \n    // Add noise and turbulence for dynamic effects\n    float noiseVal = turbulent(vec3(st + iTime, 0.0)) * 0.5 + 0.5;\n    vec3 finalColor = insideTriangle ? \n        hsv2rgb(vec3(hueBase + noiseVal * 0.3, 0.8, 0.7)) : \n        baseColor * noiseVal;\n    \n    // Output the color\n    return vec4(finalColor, 1.0);\n}"
}