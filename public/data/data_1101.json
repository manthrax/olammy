{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid of rotating squares\n    vec2 st = uv * 10.0; // Tile the space\n    \n    // Add some time-based rotation\n    float timeRotation = iTime * 0.5;\n    \n    // Calculate distance from center for each square\n    vec2 sqPos = floor(st) + 0.5;\n    vec2 sqUv = (st - sqPos);\n    \n    // Apply rotation to each square position\n    float angle = timeRotation + length(sqPos) * 0.1;\n    mat2 rotMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    vec2 rotatedSqUv = rotMatrix * (sqUv - 0.5) + 0.5;\n    \n    // Create square pattern with time-based color shifts\n    float dist = length(rotatedSqUv - 0.5);\n    vec3 color = hsl2rgb(vec3(0.6 + sin(iTime * 0.5 + dist * 10.0) * 0.4, 0.8, 0.7));\n    \n    // Add some noise and turbulence for extra detail\n    float noiseVal = noise(st + iTime);\n    color *= 1.0 + turbulent(rotatedSqUv * 5.0) * 0.3;\n    \n    // Mix colors between squares\n    vec3 finalColor = mix(color, hsl2rgb(vec3(0.3 + sin(iTime * 0.7 + dist * 8.0), 0.6, 0.5)), \n                         smoothstep(0.4, 0.6, dist));\n    \n    return vec4(finalColor, 1.0);\n}"
}