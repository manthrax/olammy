{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation effect\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime * 2.0 * PI;\n    // Create rotating square pattern using sine and cosine of angle\n    float square = sin(theta) * cos(theta);\n    \n    // Add pulsating color effect using HSL to RGB conversion\n    vec3 hslColor = vec3(\n        sin(iTime * 0.5 + theta) * 0.5 + 0.5,   // Hue variation over time and angle\n        1.0 - square * 0.5,                     // Saturation based on square pattern\n        0.7 + noise(vec2(r, iTime)) * 0.3       // Lightness with noise variation\n    );\n    \n    // Convert HSL to RGB and mix with noise for more complex color patterns\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor *= 1.0 - square * 0.5;\n    rgbColor += noise(vec2(uv.x + iTime, uv.y)) * 0.3;\n    // Apply turbulence to create dynamic variations in the pattern\n    float turb = turbulent(vec3(r, theta, iTime));\n    rgbColor *= 1.0 + turb * 0.5;\n    \n    // Ensure colors stay within valid range and apply gamma correction\n    return vec4(pow(rgbColor, vec3(2.2)), 1.0);\n}"
}