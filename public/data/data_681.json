{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    \n    // Generate particles with noise and turbulence\n    for (int i = -10; i <= 10; i++) {\n        for (int j = -10; j <= 10; j++) {\n            vec2 pos = vec2(float(i), float(j));\n            \n            // Add orbiting motion using sine/cosine with time\n            float t = iTime * 0.5;\n            float angle = t + noise(pos) * 2.0 * PI;\n            vec2 orbit = vec2(sin(angle), cos(angle)) * 0.3;\n            \n            // Add turbulence to create organic movement\n            vec3 turbPos = vec3(pos, t);\n            float turb = turbulent(turbPos) * 0.1;\n            \n            // Calculate final particle position with noise and turbulence\n            vec2 finalPos = pos + orbit + noise(vec2(pos)) * 0.2 + turb;\n            \n            // Create glowing particles using distance from center\n            vec2 toCenter = uv - finalPos;\n            float dist = length(toCenter);\n            float glow = max(1.0 - dist * 4.0, 0.0);\n            \n            // Add color with HSL to RGB conversion\n            vec3 particleColor = hsl(\n                noise(vec2(pos)) * 360.0,\n                0.7 + turbulent(vec3(turbPos)) * 0.3,\n                0.5 + glow * 0.5\n            );\n            \n            // Accumulate color with alpha blending\n            color += particleColor * glow;\n        }\n    }\n    \n    // Add a subtle glow effect\n    float glowFalloff = max(1.0 - length(uv) * 2.0, 0.0);\n    color *= glowFalloff;\n    \n    return vec4(color, 1.0);\n}"
}