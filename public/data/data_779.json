{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation effect\n    float angle = atan2(uv.y, uv.x);\n    float radius = length(uv);\n    \n    // Add time-based rotation\n    angle += 0.1 * iTime;\n    \n    // Create color swirls using HSL colorspace\n    vec3 baseColor = hsl(\n        radius * 5.0 + iTime * 2.0,   // Hue variation with radius and time\n        0.7 + turbulent(vec3(uv*4.0, iTime)) * 0.3, // Saturation modulation\n        0.6 + sin(angle) * 0.3         // Lightness variation\n    );\n    \n    // Add shimmering effect using noise\n    float shimmer = turbulent(vec3(uv*8.0, iTime*2.0)) * radius;\n    vec3 finalColor = mix(baseColor, hsl(\n        baseColor.r * 180.0 + iTime,\n        0.9,\n        0.5\n    ), abs(shimmer) * 0.5);\n    \n    return vec4(finalColor, 1.0);\n}"
}