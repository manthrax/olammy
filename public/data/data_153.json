{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for rotation\n    vec2 st = uv * 2.0 - 1.0;\n    float theta = atan2(st.y, st.x) + iTime * 0.5;\n    float r = length(st);\n    \n    // Create rotating geometric pattern using sine waves\n    float pattern = sin(theta) * cos(r * 4.0 + iTime) +\n                   cos(theta * 2.0) * sin(r * 6.0 - iTime) * 0.5 +\n                   sin(theta * 3.0 + iTime) * cos(r * 8.0) * 0.3;\n    \n    // Add noise texture\n    vec2 noiseScale = uv * 10.0;\n    float noiseVal = noise(noiseScale);\n    pattern += noiseVal * 0.3;\n    \n    // Normalize and create color transitions\n    pattern = (pattern + 1.0) / 2.0;\n    vec3 color = hsl2rgb(vec3(iTime * 0.1, 0.7, 0.5));\n    color *= sin(pattern * pi + iTime) * 0.5 + 0.5;\n    \n    // Combine with noise for final effect\n    float finalPattern = pattern * (noiseVal * 0.3 + 0.7);\n    vec3 finalColor = color * finalPattern;\n    \n    return vec4(finalColor, 1.0);\n}"
}