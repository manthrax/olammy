{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    \n    // Add time-based rotation\n    a += sin(iTime * 0.5) * 3.0;\n    \n    // Create layered noise patterns\n    vec3 noiseValues = vec3(\n        noise(vec2(r * 10.0 + iTime, a * 5.0)),\n        noise(vec2(r * 5.0 - iTime, a * 10.0)),\n        noise(vec3(r * 2.0 + iTime, a * 8.0, sin(iTime)))\n    );\n    \n    // Mix noise values with turbulence\n    float turb = turbulent(vec2(r * 4.0, a)) * 0.5 + 0.5;\n    vec3 colorMix = mix(noiseValues.xyy, noiseValues.yxz, turb);\n    \n    // Create color transformation based on angle and time\n    vec3 hslColor = vec3(\n        fract(a * 0.1 + iTime) * 360.0,\n        abs(sin(r * 5.0 + iTime)) * 0.7 + 0.3,\n        abs(cos(r * 3.0 - iTime)) * 0.6 + 0.4\n    );\n    \n    // Convert HSL to RGB and mix with noise patterns\n    vec3 finalColor = hsl2rgb(hslColor) * colorMix;\n    \n    return vec4(finalColor, 1.0);\n}"
}