{
  "src": "vec4 Effect2(vec2 uv) {\n    // Center and scale UV coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    \n    // Create rotating pattern using polar coordinates\n    float angle = atan2(st.y, st.x) + iTime * 2.0;\n    float dist = length(st);\n    \n    // Use HSL color space for smooth transitions\n    vec3 hslColor = vec3(\n        fract(angle / (pi * 2.0)),  // Hue based on angle\n        sin(dist * 5.0 + iTime) * 0.5 + 0.5,  // Saturation varies with distance and time\n        0.5  // Lightness fixed at middle value\n    );\n    \n    // Convert to RGB and add noise for complexity\n    vec3 rgbColor = hsl2rgb(hslColor);\n    rgbColor += noise(vec3(st * 5.0, iTime)) * 0.1;\n    rgbColor += turbulent(st * 10.0) * 0.1;\n    \n    // Mix colors with distance for smoother transitions\n    vec3 finalColor = mix(\n        rgbColor,\n        vec3(1.0),\n        smoothstep(0.8, 1.2, dist)\n    );\n    \n    return vec4(finalColor, 1.0);\n}"
}