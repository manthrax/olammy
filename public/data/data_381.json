{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    // Create rotating pattern using time-based rotation\n    float timeRotation = iTime * 0.5;\n    angle += timeRotation;\n    // Add another layer of rotation for more dynamic effect\n    float secondaryRotation = sin(iTime) * 0.2;\n    angle += secondaryRotation;\n    // Use turbulence to add noise variation\n    float noiseValue = turbulent(vec3(uv * 10.0, iTime));\n    \n    // Create pulsating color effect using HSL\n    vec3 hslColor = vec3(\n        fract(timeRotation * 0.2 + sin(radius) * 0.5),\n        0.7,\n        0.5 + noiseValue * 0.2\n    );\n    \n    // Convert to RGB and mix with another color for depth\n    vec3 finalColor = mix(hsl2rgb(hslColor), \n                         hsl2rgb(vec3(0.1, 0.8, 0.6)),\n                         smoothstep(0.5, 1.5, radius));\n    return vec4(finalColor, 1.0);\n}"
}