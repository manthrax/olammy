{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and animate the grid\n    float time = iTime * 0.5;\n    \n    // Create shifting grid pattern using noise\n    vec2 st = uv * 10.0 + time;\n    vec2 cell = floor(st);\n    vec2 pos = fract(st);\n    \n    // Calculate line offsets using noise\n    float noiseX = noise(vec3(cell.x, 0.0, time)) * 0.5;\n    float noiseY = noise(vec3(0.0, cell.y, time)) * 0.5;\n    \n    // Create bending effect with sine waves\n    float waveX = sin(pos.x * pi + time) * 0.2;\n    float waveY = sin(pos.y * pi + time) * 0.2;\n    \n    // Combine offsets and waves for final line positions\n    vec2 lines = vec2(noiseX + waveX, noiseY + waveY);\n    \n    // Calculate distance to nearest line\n    float dist = min(length(lines), length(lines - vec2(1.0)));\n    \n    // Create color based on proximity to lines\n    vec3 color = hsl(dist * 0.6 + 0.3, 1.0, 0.5);\n    color *= 1.0 - abs(sin(time * 0.5) * 0.5);\n    \n    return vec4(color, 1.0);\n}"
}