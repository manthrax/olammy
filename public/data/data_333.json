{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 color = vec3(0.0);\n    \n    // Particle grid size and count\n    const int particles = 10;\n    float gridSize = 2.0;\n    \n    // Time-based animation\n    float time = iTime * 0.5;\n    \n    // Iterate through particle grid\n    for(int i = 0; i < particles; i++) {\n        for(int j = 0; j < particles; j++) {\n            // Particle position in grid\n            vec2 pos = vec2(float(i), float(j)) * gridSize - gridSize;\n            \n            // Animate position with sine waves\n            pos.x += sin(time + float(i)*0.5) * 1.5;\n            pos.y += cos(time + float(j)*0.5) * 1.5;\n            \n            // Velocity vector\n            vec2 vel = vec2(cos(time + float(i)), sin(time + float(j)));\n            \n            // Distance from current UV to particle position\n            vec2 dist = uv - (pos + 0.5);\n            float d = length(dist);\n            \n            // Particle radius and glow effect\n            if(d < 0.1) {\n                // Color based on velocity direction and speed\n                float hue = atan2(vel.y, vel.x) / PI + 0.5;\n                float sat = turbulent(vec3(uv*10.0, time)) * 0.5 + 0.5;\n                float lig = exp(-d*10.0);\n                \n                // Add color contribution from this particle\n                color += hsl2rgb(vec3(hue, sat, lig));\n            }\n        }\n    }\n    \n    return vec4(color, 1.0);\n}"
}