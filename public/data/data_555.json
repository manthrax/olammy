{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for radial effects\n    vec2 uv_centered = uv - 0.5;\n    float radius = length(uv_centered);\n    float angle = atan2(uv_centered.y, uv_centered.x);\n    // Create pulsating effect using time and sine function\n    float pulse = sin(iTime * 0.5) + 1.0;\n    radius *= pulse;\n    // Generate fractal noise pattern with turbulence\n    vec3 pos = vec3(uv_centered * 2.0, iTime);\n    float noise_value = turbulent(pos * 4.0);\n    // Mix radial and noise patterns for color variation\n    float color_value = mix(angle * 0.5 + 0.5, noise_value, 0.3);\n    \n    // Add depth with additional turbulence layer\n    color_value += turbulent((uv_centered + iTime) * 2.0) * 0.2;\n    // Convert to HSL for vibrant colors and time-based shifts\n    vec3 final_color = hsl(iTime * 0.1 + noise_value, 1.0, 0.5);\n    return vec4(final_color, 1.0);\n}"
}