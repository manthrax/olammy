{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float angle = atan2(st.y, st.x);\n    float radius = length(st);\n    \n    // Create orbiting points with expanding waves\n    float time = iTime * 0.5;\n    \n    // Point 1: rotating around center\n    vec2 p1 = vec2(\n        sin(time + angle) * 0.7,\n        cos(time + angle) * 0.7\n    );\n    float d1 = length(st - p1);\n    float wave1 = sin(d1 * 8.0 - time * 4.0) * 0.5;\n    \n    // Point 2: rotating in opposite direction\n    vec2 p2 = vec2(\n        cos(time + angle) * 0.7,\n        sin(-time + angle) * 0.7\n    );\n    float d2 = length(st - p2);\n    float wave2 = sin(d2 * 8.0 + time * 4.0) * 0.5;\n    \n    // Combine waves and add noise\n    float combinedWave = (wave1 + wave2) * 0.5;\n    combinedWave += turbulent(vec3(st, time)) * 0.3;\n    \n    // Create color shifts using HSL\n    vec3 color = hsl2rgb(vec3(\n        angle * 0.5 + time,\n        0.7,\n        0.5 + combinedWave * 0.5\n    ));\n    \n    // Add distance falloff and blend points\n    float distFalloff = smoothstep(1.0, 0.0, radius);\n    color *= distFalloff;\n    \n    // Combine multiple points for richer effect\n    vec2 p3 = vec2(\n        sin(time + angle * 2.0) * 0.5,\n        cos(time + angle * 2.0) * 0.5\n    );\n    float d3 = length(st - p3);\n    float wave3 = sin(d3 * 12.0 - time * 6.0) * 0.3;\n    \n    vec3 color2 = hsl2rgb(vec3(\n        angle * 0.7 + time,\n        0.8,\n        0.5 + wave3 * 0.5\n    ));\n    \n    float distFalloff2 = smoothstep(1.0, 0.0, radius);\n    color2 *= distFalloff2;\n    \n    // Final color combination\n    vec3 finalColor = mix(color, color2, 0.4) * 1.5;\n    \n    return vec4(finalColor, 1.0);\n}"
}