{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates for rotation effect\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime; // Add time for rotation\n    \n    // Create a base color using HSL with RGB shift\n    vec3 hslColor = vec3(theta * 0.15, 0.7, 0.6);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Add turbulence effect to create dynamic patterns\n    float t = turbulent(vec2(uv.x + iTime*0.5, uv.y));\n    float t3d = turbulent(vec3(uv, sin(iTime)*0.5));\n    \n    // Combine effects with geometric pattern\n    vec3 finalColor = rgbColor * (turbulent(st * 4.0) * 0.5 + 0.5);\n    finalColor *= smoothstep(1.0, 0.0, r); // Add circular falloff\n    \n    return vec4(finalColor, 1.0);\n}"
}