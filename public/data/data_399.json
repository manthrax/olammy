{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and animate UV coordinates with time\n    vec2 st = uv * 10.0 + iTime;\n    \n    // Create complex wave patterns using multiple sine frequencies\n    float wave1 = sin(st.x * 0.5) * cos(st.y * 0.7);\n    float wave2 = sin(st.y * 0.3 + iTime * 2.0) * cos(st.x * 0.4 + iTime);\n    \n    // Add turbulence for organic movement\n    vec2 noiseUV = uv * 5.0;\n    float turb1 = turbulent(noiseUV);\n    float turb2 = turbulent(noiseUV * 0.7 + iTime);\n    \n    // Combine waves and turbulence with time-based offset\n    float finalValue = (wave1 + wave2) * 0.5 + turb1 * 0.3 + turb2 * 0.2;\n    \n    // Convert to HSL color space for smooth transitions\n    vec3 hslColor = vec3(\n        fract(finalValue * 0.5 + iTime * 0.1),   // Hue\n        0.7,                                    // Saturation\n        0.6 + turb2 * 0.2                       // Lightness with noise variation\n    );\n    \n    // Convert HSL to RGB and output\n    return vec4(hsl2rgb(hslColor), 1.0);\n}"
}