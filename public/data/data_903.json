{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float a = atan2(st.y, st.x);\n    // Create rotating hexagonal pattern\n    float time = iTime * 0.5;\n    float angle = a + time;\n    \n    // Multiple layers of rotation\n    float layer1 = sin(6.0 * (angle - time)) * 0.5 + 0.5;\n    float layer2 = sin(12.0 * (angle - time * 2.0)) * 0.3 + 0.7;\n    \n    // Combine layers with noise\n    vec2 noiseUV = uv * 10.0 + time;\n    float noiseVal = noise(noiseUV);\n    \n    // Color transitions using HSL\n    vec3 color1 = hsl2rgb(vec3(0.5 + 0.5*sin(time), 1.0, 0.8));\n    vec3 color2 = hsl2rgb(vec3(0.5 + 0.5*cos(time), 1.0, 0.6));\n    \n    // Mix colors and noise\n    vec3 finalColor = mix(color1, color2, layer1);\n    finalColor *= layer2;\n    finalColor += noiseVal * 0.2;\n    \n    // Smooth edges\n    float edge = smoothstep(0.8, 1.0, r);\n    finalColor = mix(vec3(0.0), finalColor, edge);\n    return vec4(finalColor, 1.0);\n}"
}