{
  "src": "vec4 Effect2(vec2 uv) {\n    // Scale and animate UV coordinates\n    vec2 st = uv * 10.0 + iTime;\n    \n    // Create a grid of hexagons using polar coordinates\n    vec2 grid = floor(st);\n    vec2 center = fract(st) - 0.5;\n    \n    // Calculate rotation based on time\n    float angle = iTime * 0.2;\n    mat2 rot = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 rotated = rot * center;\n    \n    // Convert to polar coordinates for hexagonal shape\n    float radius = length(rotated);\n    float theta = atan2(rotated.y, rotated.x);\n    \n    // Create hexagonal pattern using trigonometric functions\n    float hex = abs(cos(theta * 6.0)) + turbulent(vec3(center, iTime));\n    vec3 color = hsl(hex * 0.5 + 0.5, 1.0, 0.5);\n    \n    // Add noise and turbulence for dynamic effects\n    float noiseValue = noise(vec2(grid.x, grid.y) + iTime);\n    radius += noiseValue * 0.3;\n    \n    // Create final color based on distance from center\n    vec3 finalColor = mix(color * 0.8, vec3(1.0), smoothstep(0.5, 1.0, radius));\n    \n    return vec4(finalColor, 1.0);\n}"
}