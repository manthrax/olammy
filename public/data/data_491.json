{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a base noise pattern with time influence\n    float time = iTime * 0.5;\n    \n    // Multi-scale noise patterns\n    float n1 = turbulent(uv * 3.0 + vec2(time)) * 0.5 + 0.5;\n    float n2 = turbulent(uv * 6.0 + vec2(time * 0.7)) * 0.5 + 0.5;\n    float n3 = noise(vec3(uv * 12.0, time)) * 0.5 + 0.5;\n    \n    // Create color components using HSL\n    vec3 color1 = hsl(n1 * 360.0, 0.7, 0.5);\n    vec3 color2 = hsl((n2 * 360.0) + 180.0, 0.7, 0.5);\n    \n    // Mix colors based on noise values\n    vec3 finalColor = mix(color1, color2, n3);\n    \n    // Add time-based hue variation\n    finalColor = hsv2rgb(vec3(\n        atan2(finalColor.g - finalColor.b, finalColor.r) * 180.0 / PI + time * 50.0,\n        length(finalColor),\n        0.7\n    ));\n    \n    // Add brightness modulation\n    float brightness = turbulent(uv * 4.0 + vec2(time * 0.3)) * 0.5 + 0.5;\n    finalColor *= brightness * 1.5;\n    \n    return vec4(finalColor, 1.0);\n}"
}