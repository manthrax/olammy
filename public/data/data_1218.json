{
  "src": "vec4 Effect2(vec2 uv) {\n    // Animate UV coordinates with time and turbulence\n    vec2 st = uv * 5.0 + vec2(iTime * 0.5, iTime * 0.3);\n    st += turbulent(st + vec2(iTime)) * 0.2;\n    \n    // Create polar coordinates for geometric patterns\n    vec2 toCenter = st - vec2(0.5, 0.5);\n    float radius = length(toCenter) * 0.7;\n    float angle = atan2(toCenter.y, toCenter.x) + iTime * 0.1;\n    \n    // Generate multiple noise layers\n    float n1 = noise(st * 0.5 + vec2(iTime)) * 0.5 + 0.5;\n    float n2 = noise(st * 0.7 + vec2(iTime * 0.3)) * 0.4 + 0.4;\n    float n3 = noise(vec3(st, iTime * 0.1)) * 0.3 + 0.3;\n    \n    // Create color transitions using HSL\n    vec3 hslColor = vec3(\n        fract(iTime * 0.2 + radius * 0.5),\n        0.7,\n        0.6 + n1 * 0.2\n    );\n    \n    // Mix different patterns with smooth transitions\n    vec3 color = mix(\n        hsl2rgb(hslColor),\n        hsl2rgb(vec3(fract(iTime * 0.15), 0.8, 0.7)),\n        n2 * 0.5 + 0.5\n    );\n    \n    // Add dynamic line shifts using sine waves\n    float lineShift = sin(angle * 4.0 + iTime) * radius * 0.3;\n    color *= mix(1.0, 0.7, smoothstep(0.2, 0.8, abs(lineShift)));\n    \n    return vec4(color, 1.0);\n}"
}