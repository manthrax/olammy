{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form for hexagonal symmetry\n    vec2 pos = uv * 2.0 - 1.0;\n    float r = length(pos);\n    float theta = atan2(pos.y, pos.x);\n    \n    // Add time-based rotation and create expanding rings effect\n    theta += iTime * 0.5;\n    float ring = sin(r * 8.0 + iTime) * 0.5 + 0.5;\n    \n    // Create hexagonal pattern using polar coordinates\n    float angleStep = pi / 3.0;\n    float pattern = sin(theta * 6.0) * ring;\n    \n    // Add turbulence for dynamic effect\n    vec2 noisePos = uv * 10.0 + iTime;\n    float turb = turbulent(noisePos);\n    \n    // Combine effects and create color transitions using HSV\n    float hue = (theta / (2.0 * pi) + 0.5 * sin(r * 4.0 + iTime)) * 360.0;\n    vec3 hsvColor = vec3(hue, 1.0, 1.0);\n    vec3 rgbColor = hsv2rgb(hsvColor);\n    \n    // Final color with alpha\n    return vec4(rgbColor * (pattern + turb * 0.5), 1.0);\n}"
}