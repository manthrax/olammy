{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV coordinates to polar form\n    float theta = atan2(uv.y, uv.x);\n    float r = length(uv);\n    \n    // Create rotating geometric pattern using sine and cosine functions\n    float pattern = sin(theta * 8.0 + iTime * 2.0) * cos(r * 10.0 - iTime * 3.0);\n    \n    // Add turbulence for dynamic distortion\n    vec2 noiseUV = uv * 5.0 + vec2(iTime, 0.0);\n    float turb = turbulent(noiseUV);\n    \n    // Create color cycling effect using HSL colors\n    vec3 hslColor = vec3(theta * 180.0 / PI + iTime * 60.0, 0.7, 0.5);\n    vec3 rgbColor = hsl2rgb(hslColor);\n    \n    // Combine pattern and noise for final effect\n    float finalPattern = (pattern + turb) * 0.5 + 0.5;\n    \n    return vec4(finalPattern * rgbColor, 1.0);\n}"
}