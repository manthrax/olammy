{
  "src": "vec4 Effect2(vec2 uv) {\n    // Convert UV to polar coordinates\n    vec2 st = uv * 2.0 - 1.0;\n    float r = length(st);\n    float theta = atan2(st.y, st.x) + iTime; // Add time for rotation\n    \n    // Create geometric pattern using sine waves\n    float pattern = sin(theta * 8.0 + iTime * 2.0) * cos(r * 4.0 - iTime);\n    \n    // Generate color based on angle and radius\n    vec3 color;\n    color.x = (sin(theta * 5.0 + iTime * 2.0) + 1.0) * 0.5; // Hue variation\n    color.y = 0.7 + 0.3 * sin(r * 8.0 - iTime); // Saturation variation\n    color.z = 0.5 + 0.5 * cos(theta * 4.0 + iTime); // Lightness variation\n    \n    // Add noise for dynamic effect\n    float noiseVal = noise(vec2(r, theta)) * 0.3;\n    color += vec3(noiseVal);\n    \n    // Convert HSL to RGB and return\n    return vec4(hsl2rgb(color), 1.0);\n}"
}