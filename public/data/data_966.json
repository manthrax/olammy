{
  "src": "vec4 Effect2(vec2 uv) {\n    // Create a grid pattern using fract function\n    vec2 st = fract(uv * 100.0); // Scale up UV coordinates for smaller cells\n    \n    // Calculate distance from center of each cell\n    vec2 offset = abs(st - 0.5);\n    \n    // Use time to animate the colors\n    float time = iTime * 0.5;\n    \n    // Create color transitions using sine functions\n    vec3 color1 = sin(vec3(0.5, 0.7, 0.9) * time + vec3(0.0, 2.0, 4.0)) * 0.5 + 0.5;\n    vec3 color2 = sin(vec3(0.6, 0.8, 1.0) * time + vec3(1.0, 3.0, 5.0)) * 0.5 + 0.5;\n    \n    // Mix colors based on grid position\n    vec3 finalColor = mix(color1, color2, smoothstep(0.4, 0.6, max(offset.x, offset.y)));\n    \n    // Add noise for extra variation\n    float n = noise(st * 10.0 + time);\n    finalColor += n * 0.2;\n    \n    // Enhance grid lines using distance field\n    float distanceField = min(offset.x, offset.y) * 2.0;\n    finalColor *= smoothstep(0.0, 1.0, distanceField);\n    \n    return vec4(finalColor, 1.0);\n}"
}