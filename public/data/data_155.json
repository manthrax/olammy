{
  "src": "vec4 Effect2(vec2 uv) {\n    // Animate position using sine waves\n    vec2 pos = sin(iTime * 0.5 + uv * 10.0) * 0.5 + 0.5;\n    \n    // Create two points for triangle vertices\n    vec2 p1 = sin(iTime + uv.yx * 10.0) * 0.4 + 0.5;\n    vec2 p2 = cos(iTime * 0.7 + uv.xy * 8.0) * 0.3 + 0.6;\n    \n    // Add noise to create organic movement\n    p1 += noise(vec3(uv * 4.0, iTime)) * 0.1;\n    p2 += noise(vec3(uv * 5.0, iTime + 1.0)) * 0.1;\n    \n    // Create vectors between points\n    vec2 v1 = p2 - p1;\n    vec2 v2 = uv - p1;\n    \n    // Calculate cross product for triangle winding\n    float cp = dot(v1, vec2(-v2.y, v2.x));\n    \n    // Calculate distance to lines\n    float d1 = length(uv - p1);\n    float d2 = length(uv - p2);\n    float d3 = abs(cp) / length(v1);\n    \n    // Combine distances with turbulence\n    float dist = (d1 + d2 + d3 * 0.5) * 0.3;\n    dist += turbulent(vec3(uv * 4.0, iTime)) * 0.2;\n    \n    // Normalize distance and create color\n    float hue = (dist * 0.5 + 0.5) * 0.7 + sin(iTime * 0.3);\n    vec3 color = hsl2rgb(vec3(hue, 0.8, 0.6));\n    \n    return vec4(color, 1.0);\n}"
}