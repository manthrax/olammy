{
  "src": "\n//prompt:a fractal\nvec4 Effect2(vec2 uv) {\n    // Mandelbrot set fractal\n    vec2 c = (uv * 4.0 - 2.0); // Scale to (-2,2) range for better view\n    vec2 z = vec2(0.0);\n    \n    float maxIter = 100.0;\n    float iter = 0.0;\n    \n    while(iter < maxIter && length(z) <= 4.0) {\n        // Classic Mandelbrot formula: z = z^2 + c\n        vec2 nextZ = vec2(\n            z.x*z.x - z.y*z.y + c.x,\n            2.0 * z.x*z.y + c.y\n        );\n        z = nextZ;\n        iter++;\n    }\n    \n    // Color based on iteration count\n    float value = iter / maxIter;\n    \n    // Simple color palette using sine functions for smooth gradients\n    vec3 color = vec3(\n        sin(1.0 * value),\n        sin(2.0 * value + 0.5),\n        sin(3.0 * value + 1.0)\n    ) * 0.5 + 0.5; // Scale to [0,1] range\n    \n    return vec4(color, 1.0);\n}\n"
}