{
  "src": "vec4 Effect2(vec2 uv) {\n    vec3 finalColor;\n    \n    float speed = 0.1 * iTime;\n    \n    // Transform UV coordinates with time-based scaling\n    vec2 uvScaled = uv * (sin(speed) + 2.) * 5.;\n    \n    // Add noise to create organic movement\n    uvScaled += noise(uvScaled * 4.) * sin(iTime * 0.5);\n    \n    // Use turbulence for fractal-like patterns\n    float t = turbulent(vec3(uvScaled, iTime * 0.1));\n    \n    // Color transformations using HSL\n    vec3 hslColor = hsl(t * 0.5 + 0.5, \n                       sin(iTime) * 0.5 + 0.5,\n                       cos(speed) * 0.5 + 0.5);\n    \n    // Convert to RGB and add some luminance variation\n    finalColor = hsv2rgb(vec3(t * 0.5 + 0.5, \n                              sin(uvScaled.x * 10.) * 0.5 + 0.5,\n                              pow(length(hslColor), 1.5)));\n    \n    // Mix with white to create a glowing effect\n    finalColor = mix(finalColor, vec3(1.), length(turbulent(vec2(uvScaled) * 4.)) * 0.5);\n    \n    return vec4(finalColor, 1.);\n}"
}